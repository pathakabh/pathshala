{"version":3,"sources":["actions/constants.js","urlConfig.js","reducers/auth.reducers.js","reducers/user.reducer.js","reducers/product.reducer.js","reducers/category.reducer.js","reducers/order.reducer.js","reducers/page.reducer.js","reducers/course.reducer.js","reducers/curriculum.reducer.js","reducers/author.reducer.js","reducers/blog.reducer.js","reducers/index.js","store/index.js","helpers/axios.js","actions/category.action.js","actions/product.action.js","actions/course.action.js","actions/curriculum.action.js","actions/blog.action.js","components/Header/index.js","actions/auth.actions.js","components/Layout/index.js","containers/Home/index.js","components/UI/Input/index.js","containers/Signin/index.js","containers/Signup/index.js","actions/user.actions.js","components/HOC/PrivateRoute.js","components/UI/Modal/index.js","containers/Products/index.js","components/UI/Input/draft.js","containers/Blogs/index.js","containers/Courses/index.js","containers/curricu/index.js","components/UI/TableEdit/index.js","containers/Curriculums/index.js","components/UI/Card/index.js","containers/Orders/index.js","actions/order.action.js","containers/Category/components/UpdateCategoriesModal.js","containers/Category/components/AddCategoryModal.js","containers/Category/index.js","helpers/linearCategories.js","containers/NewPage/index.js","actions/page.action.js","App.js","actions/initialData.action.js","serviceWorker.js","index.js"],"names":["authConstants","userContants","categoryConstansts","productConstants","courseConstants","curriculumConstants","authorConstants","GET_ALL_AUTHORS_REQUEST","GET_ALL_AUTHORS_SUCCESS","GET_ALL_AUTHORS_FAILURE","GET_ALL_AUTHORS_PUBLISHED_REQUEST","GET_ALL_AUTHORS_PUBLISHED_SUCCESS","GET_ALL_AUTHORS_PUBLISHED_FAILURE","DELETE_AUTHOR_BY_ID_REQUEST","DELETE_AUTHOR_BY_ID_SUCCESS","DELETE_AUTHOR_BY_ID_FAILURE","ADD_AUTHOR_REQUEST","ADD_AUTHOR_SUCCESS","ADD_AUTHOR_FAILURE","UPDATE_AUTHOR_REQUEST","UPDATE_AUTHOR_SUCCESS","UPDATE_AUTHOR_FAILURE","blogConstants","GET_ALL_BLOGS_REQUEST","GET_ALL_BLOGS_SUCCESS","GET_ALL_BLOGS_FAILURE","GET_ALL_BLOGS_PUBLISHED_REQUEST","GET_ALL_BLOGS_PUBLISHED_SUCCESS","GET_ALL_BLOGS_PUBLISHED_FAILURE","DELETE_BLOG_BY_ID_REQUEST","DELETE_BLOG_BY_ID_SUCCESS","DELETE_BLOG_BY_ID_FAILURE","ADD_BLOG_REQUEST","ADD_BLOG_SUCCESS","ADD_BLOG_FAILURE","UPDATE_BLOGS_REQUEST","UPDATE_BLOGS_SUCCESS","UPDATE_BLOGS_FAILURE","pageConstants","orderConstants","api","generatePublicUrl","fileName","initState","token","user","firstName","lastName","email","picture","authenticate","authenticating","loading","error","message","initialState","products","categories","buildNewCategories","parentId","category","myCategories","undefined","_id","name","slug","type","children","cat","newCategory","push","length","orders","page","courses","curriculums","lessionResources","curriculumList","authors","blogs","rootReducer","combineReducers","auth","state","action","console","log","payload","updatedCategories","product","order","course","curriculum","author","blog","store","createStore","composeWithDevTools","applyMiddleware","thunk","window","localStorage","getItem","axiosIntance","axios","create","baseURL","headers","interceptors","request","use","req","getState","Authorization","response","res","status","clear","dispatch","Promise","reject","getAllCategory","a","get","categoryList","data","getProducts","post","findAllCourses","findAllCurriculums","course_id","findOneCurriculums","map","index","UploadDocument","form","findAllBlogs","Header","props","useSelector","useDispatch","logout","Navbar","collapseOnSelect","fixed","expand","bg","variant","style","zIndex","Container","fluid","to","className","Toggle","aria-controls","Collapse","id","Nav","onClick","Layout","sidebar","Row","Col","md","exact","marginLeft","paddingTop","Home","Input","input","Form","Group","label","Label","value","onChange","placeholder","options","option","key","checked","inputRef","ref","myCheckbox","Control","Text","errorMessage","Signin","useState","setEmail","password","setPassword","marginTop","span","offset","onSubmit","e","preventDefault","setItem","JSON","stringify","login","target","Button","Signup","setFirstName","setLastName","useEffect","signup","PrivateRoute","Component","component","rest","NewModal","Modal","size","show","onHide","handleClose","closeButton","Title","modalTitle","Body","Footer","buttons","btn","color","backgroundColor","Products","setName","quantity","setQuantity","price","setPrice","description","setDescription","categoryId","setCategoryId","productPictures","setProductPictures","setShow","productDetailModal","setProductDetailModal","productDetails","setProductDetails","submitProductForm","FormData","append","pic","addProduct","then","handleProductPictures","files","handleCloseProductDetailsModal","showProductDetailsModal","display","justifyContent","Table","fontSize","responsive","productId","confirm","delete","deleteProductById","createCategoryList","src","img","alt","styleMap","React","CODE","fontFamily","padding","getBlockStyle","block","getType","StyleButton","onToggle","this","active","onMouseDown","BLOCK_TYPES","BlockStyleControls","editorState","selection","getSelection","blockType","getCurrentContent","getBlockForKey","getStartKey","INLINE_STYLES","InlineStyleControls","currentStyle","getCurrentInlineStyle","has","Blogs","set_id","blogTitle","setblogTitle","blogCategory","setblogCategory","EditorState","createEmpty","blogText","setblogText","setparentId","authorId","setauthorId","blogImage","setblogImage","published","setpublished","Date","postedOn","setpostedOn","publishedOn","setpublishedOn","blogDetailModal","setBlogsDetailModal","blogDetails","setBlogsDetails","setTimeout","Workingtable","$","DataTable","retrieve","destroy","on","column","search","nodes","each","cell","i","innerHTML","draw","dynamicImportFunc","contentState1","convertFromRaw","editorState1","createWithContent","ex","dateFormat","htmlToDraft","default","contentBlock","contentState","createFromBlockArray","contentBlocks","convertDescriptionFromJSONToHTML","__html","stateToHTML","exp","uploadCallback","file","formData","filename","ADD_COURSE_FAILURE","submitBlogsForm","alert","Validation","newPost","convertToRaw","updateBlogs","location","reload","useRef","CouseList","cor","createCouseList","createAothorList","authorName","handleCloseBlogsDetailsModal","showBlogsDetailsModal","publishedString","wrapperClassName","editorClassName","toolbarClassName","wrapperStyle","border","marginBottom","editorStyle","height","toolbar","image","onEditorStateChange","dangerouslySetInnerHTML","htmlFor","date","valueName","placeholderText","Courses","courseTitle","setcourseTitle","courseDesc","setcourseDesc","courseStudPrice","setcourseStudPrice","snapshotText","setsnapshotText","courseDetail","setcourseDetail","courseTumbImage","setcourseTumbImage","courseDetailModal","setCoursesDetailModal","courseDetails","setCoursesDetails","submitCoursesForm","updateCourses","handleCloseCoursesDetailsModal","showCoursesDetailsModal","test","Curriculums","setcourse_id","lession","setlession","sequence","setsequence","lessionDetail","setlessionDetail","setlessionResources","narration","setnarration","url","seturl","doc","setdoc","lessionResources_id","setlessionResources_id","lessionDetailModal","setCurriculumsDetailModal","lessionDetails","setCurriculumsDetails","scrollTo","match","params","handleclose","uploadDocument","ValidationDocument","renderCurriculumsDocuments","submitCurriculumsForm","updateCurriculums","CurriculumList","createCurriculumList","handlelessionResources","resource","EditResourceDoc","UploadDocumentDelete","handlecloseCurriculumsDetailsModal","showCurriculumsDetailsModal","Card","headerLeft","headerRight","Orders","setType","onOrderUpdate","orderId","updateOrder","orderItem","margin","alignItems","items","item","totalAmount","paymentType","paymentStatus","boxSizing","orderStatus","isCompleted","d","getFullYear","getMonth","getDate","formatDate","UpdateCategoriesModal","expandedArray","checkedArray","handleCategoryInput","AddCategoryModal","categoryName","setCategoryName","parentCategoryId","setParentCategoryId","handleCategoryImage","Category","categoryImage","setCategoryImage","setChecked","expanded","setExpanded","setCheckedArray","setExpandedArray","updateCategoryModal","setUpdateCategoryModal","deleteCategoryModal","setDeleteCategoryModal","updateCheckedAndExpandedCategories","forEach","find","_index","deleteCategories","ids","checkedIdsArray","concat","result","renderCategories","onCheck","onExpand","icons","check","uncheck","halfCheck","expandClose","expandOpen","addCategory","updateCategories","updatedCheckedArray","updatedExpandedArray","linearCategories","NewPage","createModal","setCreateModal","title","setTitle","setCategories","desc","setDesc","banners","setBanners","setProducts","onCategoryChange","handleBannerImages","handleProductImages","submitPageForm","banner","createPage","App","parse","coursesPublished","authorsPublished","blogsPublished","path","Curricu","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"uhBAAaA,EACI,gBADJA,EAEI,gBAFJA,EAGI,gBAHJA,EAIK,iBAJLA,EAKK,iBALLA,EAMK,iBAOLC,EACY,wBADZA,EAEY,wBAFZA,EAGY,wBAGZC,EACiB,6BADjBA,EAEiB,6BAFjBA,EAGiB,6BAHjBA,EAIe,2BAJfA,EAKe,2BALfA,EAMe,2BANfA,EAOgB,4BAPhBA,EAQgB,4BARhBA,EASgB,4BAThBA,EAUgB,4BAVhBA,EAWgB,4BAXhBA,EAYgB,4BAGhBC,EACe,2BADfA,EAEe,2BAFfA,EAGe,2BAHfA,EAKmB,+BALnBA,EAMmB,+BANnBA,EAOmB,+BAPnBA,EASU,sBATVA,EAUU,sBAVVA,EAWU,sBAGVC,EACc,0BADdA,EAEc,0BAFdA,EAGc,0BAHdA,EAMwB,oCANxBA,EAaS,qBAbTA,EAcS,qBAdTA,EAeS,qBAfTA,GAiBa,yBAjBbA,GAkBa,yBAlBbA,GAmBa,yBAGbC,GACkB,8BADlBA,GAEkB,8BAFlBA,GAGkB,8BAHlBA,GAKkB,8BALlBA,GAMkB,8BANlBA,GAOkB,8BAPlBA,GAiBa,yBAjBbA,GAkBa,yBAlBbA,GAmBa,yBAnBbA,GAqBiB,6BArBjBA,GAsBiB,6BAtBjBA,GAuBiB,6BAGjBC,GAAkB,CAC7BC,wBAAyB,0BACzBC,wBAAyB,0BACzBC,wBAAyB,0BAEzBC,kCAAmC,oCACnCC,kCAAmC,oCACnCC,kCAAmC,oCAEnCC,4BAA6B,8BAC7BC,4BAA6B,8BAC7BC,4BAA6B,8BAE7BC,mBAAoB,qBACpBC,mBAAoB,qBACpBC,mBAAoB,qBAEpBC,sBAAuB,wBACvBC,sBAAuB,wBACvBC,sBAAuB,yBAIZC,GAAgB,CAC3BC,sBAAuB,wBACvBC,sBAAuB,wBACvBC,sBAAuB,wBAEvBC,gCAAiC,kCACjCC,gCAAiC,kCACjCC,gCAAiC,kCAEjCC,0BAA2B,4BAC3BC,0BAA2B,4BAC3BC,0BAA2B,4BAE3BC,iBAAkB,mBAClBC,iBAAkB,mBAClBC,iBAAkB,mBAElBC,qBAAsB,uBACtBC,qBAAsB,uBACtBC,qBAAsB,wBASXC,GACU,sBADVA,GAEU,sBAFVA,GAGU,sBAGVC,GACiB,6BADjBA,GAEiB,6BAFjBA,GAGiB,6BAHjBA,GAKoB,gCALpBA,GAMoB,gCANpBA,GAOoB,gC,qBC7JpBC,GAAG,UAFA,wBAEA,QAEHC,GAAoB,SAACC,GAChC,MAAM,GAAN,OALc,wBAKd,mBAA4BA,I,mBCJxBC,GAAY,CACdC,MAAO,KACPC,KAAM,CACFC,UAAW,GACXC,SAAU,GACVC,MAAO,GACPC,QAAS,IAEbC,cAAc,EACdC,gBAAgB,EAChBC,SAAS,EACTC,MAAO,KACPC,QAAS,ICZPX,GAAY,CACdU,MAAO,KACPC,QAAS,GACTF,SAAS,GCHPG,GAAe,CACjBC,SAAU,I,kBCDRb,GAAY,CACdc,WAAY,GACZL,SAAS,EACTC,MAAO,MAILK,GAAqB,SAArBA,EAAsBC,EAAUF,EAAYG,GAC9C,IAAIC,EAAe,GAEnB,QAAeC,GAAZH,EACC,MAAM,GAAN,oBACOF,GADP,CAEI,CACIM,IAAKH,EAASG,IACdC,KAAMJ,EAASI,KACfC,KAAML,EAASK,KACfC,KAAMN,EAASM,KACfC,SAAU,MAXqC,qBAgB5CV,GAhB4C,IAgB3D,IAAI,EAAJ,qBAA0B,CAAC,IAAnBW,EAAkB,QAEtB,GAAGA,EAAIL,KAAOJ,EAAS,CACnB,IAAMU,EAAc,CAChBN,IAAKH,EAASG,IACdC,KAAMJ,EAASI,KACfC,KAAML,EAASK,KACfN,SAAUC,EAASD,SACnBO,KAAMN,EAASM,KACfC,SAAU,IAEdN,EAAaS,KAAb,2BACOF,GADP,IAEID,SAAUC,EAAID,SAASI,OAAS,EAAtB,uBAA8BH,EAAID,UAAlC,CAA4CE,IAAe,CAACA,WAG1ER,EAAaS,KAAb,2BACOF,GADP,IAEID,SAAUC,EAAID,SAAWT,EAAmBC,EAAUS,EAAID,SAAUP,GAAY,OAlCjC,8BA0C3D,OAAOC,GCjDLlB,GAAY,CAChB6B,OAAQ,ICDJ7B,GAAY,CACdU,MAAO,KACPD,SAAS,EACTqB,KAAM,ICHJlB,GAAe,CACjBmB,QAAS,ICDPnB,GAAe,CACjBoB,YAAa,GACbC,iBAAkB,GAClBC,eAAe,ICHbtB,GAAe,CACjBuB,QAAS,ICDPvB,GAAe,CACjBwB,MAAO,ICsBIC,GAbKC,2BAAgB,CAChCC,KVIW,WAAgC,IAA/BC,EAA8B,uDAAtBxC,GAAWyC,EAAW,uCAI1C,OAFAC,QAAQC,IAAIF,GAEJA,EAAOlB,MACX,KAAKlE,EACDmF,EAAK,2BACEA,GADF,IAEDhC,gBAAgB,IAEpB,MACJ,KAAKnD,EACDmF,EAAK,2BACEA,GADF,IAEDtC,KAAMuC,EAAOG,QAAQ1C,KACrBD,MAAOwC,EAAOG,QAAQ3C,MACtBM,cAAc,EACdC,gBAAgB,IAEpB,MACJ,KAAKnD,EACDmF,EAAK,2BACEA,GADF,IAED/B,SAAS,IAEb,MACJ,KAAKpD,EACDmF,EAAK,eACExC,IAEP,MACJ,KAAK3C,EACDmF,EAAK,2BACEA,GADF,IAED9B,MAAO+B,EAAOG,QAAQlC,MACtBD,SAAS,IAOrB,OAAO+B,GU7CPtC,KTNW,WAAgC,IAA/BsC,EAA8B,uDAAtBxC,GAAWyC,EAAW,uCAC1C,OAAOA,EAAOlB,MACV,KAAKjE,EACDkF,EAAK,2BACEA,GADF,IAED/B,SAAS,IAEb,MACJ,KAAKnD,EACDkF,EAAK,2BACEA,GADF,IAED/B,SAAS,EACTE,QAAS8B,EAAOG,QAAQjC,UAE5B,MACJ,KAAKrD,EACDkF,EAAK,2BACEA,GADF,IAED/B,SAAS,EACTC,MAAO+B,EAAOG,QAAQlC,QAKlC,OAAO8B,GSjBPvB,SPwCW,WAAgC,IAA/BuB,EAA8B,uDAAtBxC,GAAWyC,EAAW,uCAC1C,OAAOA,EAAOlB,MACV,KAAKhE,EACDiF,EAAK,2BACEA,GADF,IAED1B,WAAY2B,EAAOG,QAAQ9B,aAE/B,MACJ,KAAKvD,EACDiF,EAAK,2BACEA,GADF,IAED/B,SAAS,IAEb,MACJ,KAAKlD,EACD,IAAM0D,EAAWwB,EAAOG,QAAQ3B,SAC1B4B,EAAoB9B,GAAmBE,EAASD,SAAUwB,EAAM1B,WAAYG,GAClFyB,QAAQC,IAAI,qBAAsBE,GAElCL,EAAK,2BACEA,GADF,IAED1B,WAAY+B,EACZpC,SAAS,IAEb,MACJ,KAAKlD,EACDiF,EAAK,2BACExC,IADF,IAEDS,SAAS,EACTC,MAAO+B,EAAOG,QAAQlC,QAE1B,MACJ,KAAKnD,EACDiF,EAAK,2BACEA,GADF,IAED/B,SAAS,IAEb,MACJ,KAAKlD,EACDiF,EAAK,2BACEA,GADF,IAED/B,SAAS,IAEb,MACJ,KAAKlD,EACDiF,EAAK,2BACEA,GADF,IAED9B,MAAO+B,EAAOG,QAAQlC,MACtBD,SAAS,IAEb,MACJ,KAAKlD,EACDiF,EAAK,2BACEA,GADF,IAED/B,SAAS,IAEb,MACJ,KAAKlD,EACDiF,EAAK,2BACEA,GADF,IAED/B,SAAS,IAEb,MACJ,KAAKlD,EACDiF,EAAK,2BACEA,GADF,IAED/B,SAAS,EACTC,MAAO+B,EAAOG,QAAQlC,QAKlC,OAAO8B,GO/GPM,QRVW,WAAmC,IAAlCN,EAAiC,uDAAzB5B,GAAc6B,EAAW,uCAC7C,OAAOA,EAAOlB,MACV,KAAK/D,EACDgF,EAAK,2BACEA,GADF,IAED3B,SAAU4B,EAAOG,QAAQ/B,WAKrC,OAAO2B,GQCPO,MNXW,WAAgC,IAA/BP,EAA8B,uDAAtBxC,GAAWyC,EAAW,uCAC5C,OAAQA,EAAOlB,MACb,KAAK3B,GACH4C,EAAK,2BACAA,GADA,IAEHX,OAAQY,EAAOG,QAAQf,SAK7B,OAAOW,GMELV,KLVW,WAAgC,IAA/BU,EAA8B,uDAAtBxC,GAAWyC,EAAW,uCAC1C,OAAQA,EAAOlB,MACX,KAAK5B,GACD6C,EAAK,2BACEA,GADF,IAED/B,SAAS,IAEb,MACJ,KAAKd,GACD6C,EAAK,2BACEA,GADF,IAED/B,SAAS,IAEb,MACJ,KAAKd,GACD6C,EAAK,2BACEA,GADF,IAED/B,SAAS,EACTC,MAAO+B,EAAOG,QAAQlC,QAKlC,OAAO8B,GKZPQ,OJbW,WAAmC,IAAlCR,EAAiC,uDAAzB5B,GAAc6B,EAAW,uCAC7C,OAAOA,EAAOlB,MACV,KAAK9D,EACD+E,EAAK,2BACEA,GADF,IAEDT,QAASU,EAAOG,QAAQb,UAIpC,OAAOS,GIKPS,WHZW,WAAmC,IAAlCT,EAAiC,uDAAzB5B,GAAc6B,EAAW,uCAC7C,OAAOA,EAAOlB,MACV,KAAK7D,GACD8E,EAAK,2BACEA,GADF,IAEDR,YAAaS,EAAOG,QAAQZ,cAChC,MACA,KAAKtE,GACL8E,EAAK,2BACEA,GADF,IAEDN,eAAgBO,EAAOG,QAAQV,eAC/BD,iBAAiBQ,EAAOG,QAAQX,mBAS5C,OAAOO,GGPPU,OFfW,WAAmC,IAAlCV,EAAiC,uDAAzB5B,GAAc6B,EAAW,uCAC7C,OAAOA,EAAOlB,MACV,KAAK5D,GAAgBE,wBACjB2E,EAAK,2BACEA,GADF,IAEDL,QAASM,EAAOG,QAAQT,UAKpC,OAAOK,GEMPW,KDhBW,WAAmC,IAAlCX,EAAiC,uDAAzB5B,GAAc6B,EAAW,uCAC7C,OAAOA,EAAOlB,MACV,KAAK5C,GAAcE,sBACf2D,EAAK,2BACEA,GADF,IAEDJ,MAAOK,EAAOG,QAAQR,QAKlC,OAAOI,K,UEPIY,GAJDC,uBAAYhB,GAAaiB,+BACnCC,2BAAgBC,QCDdvD,GAAQwD,OAAOC,aAAaC,QAAQ,SAEpCC,GAAeC,KAAMC,OAAO,CAC9BC,QAASlE,GACTmE,QAAS,CACL,cAAiB/D,GAAK,iBAAaA,IAAU,MAIrD2D,GAAaK,aAAaC,QAAQC,KAAI,SAACC,GAAS,IACpC7B,EAASa,GAAMiB,WAAf9B,KAIR,OAHGA,EAAKtC,QACJmE,EAAIJ,QAAQM,cAAZ,iBAAsC/B,EAAKtC,QAExCmE,KAGXR,GAAaK,aAAaM,SAASJ,KAAI,SAACK,GACpC,OAAOA,KACR,SAAC9D,GACAgC,QAAQC,IAAIjC,EAAM6D,UAClB,IAAME,EAAS/D,EAAM6D,SAAW7D,EAAM6D,SAASE,OAAS,IAKxD,OAJGA,GAAqB,MAAXA,IACTf,aAAagB,QACbtB,GAAMuB,SAAS,CAAEpD,KAAMlE,KAEpBuH,QAAQC,OAAOnE,MAGXkD,UC/BTkB,GAAiB,WACnB,8CAAO,WAAMH,GAAN,iBAAAI,EAAA,6DAEHJ,EAAS,CAAEpD,KAAMhE,IAFd,SAGesG,GAAMmB,IAAN,wBAHf,OAGGR,EAHH,OAIH9B,QAAQC,IAAI6B,GACO,MAAfA,EAAIC,QAEIQ,EAAiBT,EAAIU,KAArBD,aAERN,EAAS,CACLpD,KAAMhE,EACNqF,QAAS,CAAE9B,WAAYmE,MAG3BN,EAAS,CACLpD,KAAMhE,EACNqF,QAAS,CAAElC,MAAO8D,EAAIU,KAAKxE,SAhBhC,2CAAP,uDCAEyE,GAAc,WAClB,8CAAO,WAAOR,GAAP,iBAAAI,EAAA,sEAEHJ,EAAS,CAAEpD,KAAM/D,IAFd,SAGeqG,GAAMuB,KAAN,uBAHf,OAIgB,OADbZ,EAHH,QAIKC,QACE5D,EAAa2D,EAAIU,KAAjBrE,SACR8D,EAAS,CACPpD,KAAM/D,EACNoF,QAAS,CAAE/B,eAGb8D,EAAS,CAAEpD,KAAM/D,IAXhB,gDAcHkF,QAAQC,IAAR,MAdG,yDAAP,uDCDI0C,GAAiB,WACrB,8CAAO,WAAOV,GAAP,iBAAAI,EAAA,sEAEHJ,EAAS,CAAEpD,KAAM9D,IAFd,SAGeoG,GAAMmB,IAAN,kBAHf,OAIgB,OADbR,EAHH,QAIKC,QACE1C,EAAYyC,EAAIU,KAAhBnD,QACR4C,EAAS,CACPpD,KAAM9D,EACNmF,QAAS,CAAEb,cAGb4C,EAAS,CAAEpD,KAAM9D,IAXhB,gDAcHiF,QAAQC,IAAR,MAdG,yDAAP,uDCDI2C,GAAqB,SAACC,GAC1B,8CAAO,WAAOZ,GAAP,iBAAAI,EAAA,sEAEHJ,EAAS,CAAEpD,KAAM7D,KAFd,SAGemG,GAAMmB,IAAN,uCAA0CO,IAHzD,OAIgB,OADbf,EAHH,QAIKC,QACN/B,QAAQC,IAAI6B,EAAIU,MACRlD,EAAgBwC,EAAIU,KAApBlD,YACR2C,EAAS,CACPpD,KAAM7D,GACNkF,QAAS,CAAEZ,kBAGb2C,EAAS,CAAEpD,KAAM7D,KAZhB,gDAeHgF,QAAQC,IAAR,MAfG,yDAAP,uDAoBW6C,GAAqB,SAACpE,GACjC,8CAAO,WAAOuD,GAAP,mBAAAI,EAAA,sEAEHJ,EAAS,CAAEpD,KAAM7D,KAFd,SAGemG,GAAMmB,IAAN,iCAAoC5D,IAHnD,OAIgB,OADboD,EAHH,QAIKC,QACN/B,QAAQC,IAAI6B,EAAIU,MACRhD,EAAmBsC,EAAIU,KAAvBhD,eACFD,EAAoBC,EAAeuD,KAAI,SAACxC,EAAYyC,GAAb,OAC3CzC,EAAWhB,oBAGb0C,EAAS,CACPpD,KAAM7D,GACNkF,QAAS,CAAEV,iBAAeD,uBAG5B0C,EAAS,CAAEpD,KAAM7D,KAhBhB,gDAmBHgF,QAAQC,IAAR,MAnBG,yDAAP,uDA2CWgD,GAAiB,SAACC,GAC7B,8CAAO,WAAOjB,GAAP,SAAAI,EAAA,sEAGHJ,EAAS,CAAEpD,KAAM7D,KAHd,SAIemG,GAAMuB,KAAN,oBAAgCQ,GAJ/C,OAKgB,MALhB,OAKKnB,QASNE,EAAS,CAAEpD,KAAM7D,KAdhB,gDAiBHgF,QAAQC,IAAR,MAjBG,yDAAP,uDClEIkD,GAAe,WACnB,8CAAO,WAAOlB,GAAP,iBAAAI,EAAA,sEAEHJ,EAAS,CAAEpD,KAAM5C,GAAcC,wBAF5B,SAGeiF,GAAMmB,IAAN,gBAHf,OAIgB,OADbR,EAHH,QAIKC,QACErC,EAAUoC,EAAIU,KAAd9C,MACRuC,EAAS,CACPpD,KAAM5C,GAAcE,sBACpB+D,QAAS,CAAER,YAGbuC,EAAS,CAAEpD,KAAM5C,GAAcG,wBAX9B,gDAcH4D,QAAQC,IAAR,MAdG,yDAAP,uDC4EamD,GAtEA,SAACC,GACd,IAAMxD,EAAOyD,aAAY,SAACxD,GAAD,OAAWA,EAAMD,QACpCoC,EAAWsB,cAEXC,EAAS,WACbvB,ECwCA,uCAAO,WAAMA,GAAN,eAAAI,EAAA,6DAEHJ,EAAS,CAAEpD,KAAMlE,IAFd,SAGewG,GAAMuB,KAAN,kBAHf,OAKe,OAFZZ,EAHH,QAKIC,QACHf,aAAagB,QACbC,EAAS,CAAEpD,KAAMlE,KAEjBsH,EAAS,CACLpD,KAAMlE,EACNuF,QAAS,CAAElC,MAAO8D,EAAIU,KAAKxE,SAXhC,2CAAP,wDDPF,OACE,kBAACyF,EAAA,EAAD,CACEC,kBAAgB,EAChBC,MAAM,MACNC,OAAO,KACPC,GAAG,OACHC,QAAQ,OACRC,MAAO,CAAEC,OAAQ,IAEjB,kBAACC,EAAA,EAAD,CAAWC,OAAK,GAEd,kBAAC,IAAD,CAAMC,GAAG,IAAIC,UAAU,gBAAvB,mBAGA,kBAACX,EAAA,EAAOY,OAAR,CAAeC,gBAAc,0BAC7B,kBAACb,EAAA,EAAOc,SAAR,CAAiBC,GAAG,yBAClB,kBAACC,EAAA,EAAD,CAAKL,UAAU,YASdvE,EAAKhC,aArDV,kBAAC4G,EAAA,EAAD,KACE,wBAAIL,UAAU,YACZ,0BAAMA,UAAU,WAAWM,QAASlB,GAApC,aAUJ,kBAACiB,EAAA,EAAD,KAEE,wBAAIL,UAAU,YACZ,kBAAC,IAAD,CAASD,GAAG,SAASC,UAAU,YAA/B,WAIF,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAASD,GAAG,SAASC,UAAU,YAA/B,gB,oBEIKO,I,OAlCA,SAACtB,GACd,OACE,oCACG,kBAAC,GAAD,MAEEA,EAAMuB,QACN,kBAACX,EAAA,EAAD,CAAWC,OAAK,GACf,kBAACW,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAKC,GAAI,EAAGX,UAAU,WACpB,4BACE,4BAAI,kBAAC,IAAD,CAASY,OAAK,EAACb,GAAE,KAAjB,SACJ,4BAAI,kBAAC,IAAD,CAASA,GAAE,SAAX,SACJ,4BAAI,kBAAC,IAAD,CAASA,GAAE,aAAX,aACJ,4BAAI,kBAAC,IAAD,CAASA,GAAE,aAAX,aACJ,4BAAI,kBAAC,IAAD,CAASA,GAAE,WAAX,WACJ,4BAAI,kBAAC,IAAD,CAASA,GAAE,UAAX,UACJ,4BAAI,kBAAC,IAAD,CAASA,GAAE,YAAX,cAGR,kBAACW,GAAA,EAAD,CAAKC,GAAI,GAAIhB,MAAO,CAAEkB,WAAY,OAAQC,WAAY,SACnD7B,EAAMvE,YAKbuE,EAAMvE,YCPCqG,I,OAlBF,SAAC9B,GAEZ,OACE,kBAAC,GAAD,CAAQuB,SAAO,M,4BCsDJQ,GA5DD,SAAC/B,GAEb,IAAIgC,EAAQ,KAEZ,OAAOhC,EAAMxE,MACX,IAAK,SACHwG,EAAQ,kBAACC,GAAA,EAAKC,MAAN,KACGlC,EAAMmC,OAAS,kBAACF,GAAA,EAAKG,MAAN,KAAapC,EAAMmC,OACnC,4BACEpB,UAAU,+BACVsB,MAAOrC,EAAMqC,MACbC,SAAUtC,EAAMsC,UAEhB,4BAAQD,MAAM,IAAIrC,EAAMuC,aAEtBvC,EAAMwC,QAAQ3G,OAAS,EACvBmE,EAAMwC,QAAQ9C,KAAI,SAAC+C,EAAQ9C,GAAT,OAChB,4BAAQ+C,IAAK/C,EAAO0C,MAAOI,EAAOJ,OAAQI,EAAOnH,SAC/C,OAIlB,MACF,IAAK,WAGH,4CACYE,KAAMwE,EAAMxE,KACbmH,QAAS3C,EAAM2C,QACfN,MAAOrC,EAAMqC,MACpBC,SAAUtC,EAAMsC,SAChBM,SAAU,SAAAC,GAAG,OAAI7C,EAAM8C,WAAaD,IAChC7C,IAIN,MACJ,IAAK,OACL,QACEgC,EAAQ,kBAACC,GAAA,EAAKC,MAAN,KACGlC,EAAMmC,OAAS,kBAACF,GAAA,EAAKG,MAAN,KAAapC,EAAMmC,OACnC,kBAACF,GAAA,EAAKc,QAAN,eACIvH,KAAMwE,EAAMxE,KACZ+G,YAAavC,EAAMuC,YACnBI,QAAS3C,EAAM2C,QACfN,MAAOrC,EAAMqC,MACbC,SAAUtC,EAAMsC,UACZtC,IAER,kBAACiC,GAAA,EAAKe,KAAN,CAAWjC,UAAU,cAClBf,EAAMiD,eAMvB,OAAOjB,GCUMkB,GA7DA,SAAClD,GAAW,IAAD,EAEImD,mBAAS,IAFb,oBAEf7I,EAFe,KAER8I,EAFQ,OAGUD,mBAAS,IAHnB,oBAGfE,EAHe,KAGLC,EAHK,OAIIH,mBAAS,IAJb,oBAKhB3G,GALgB,UAKTyD,aAAY,SAAAxD,GAAK,OAAIA,EAAMD,SAElCoC,EAAWsB,cAgBjB,OAAG1D,EAAKhC,aACG,kBAAC,IAAD,CAAUsG,GAAE,MAInB,kBAAC,GAAD,KACI,kBAACF,EAAA,EAAD,KACI,kBAACY,GAAA,EAAD,CAAKd,MAAO,CAAE6C,UAAW,SACrB,kBAAC9B,GAAA,EAAD,CAAKC,GAAI,CAAC8B,KAAM,EAAGC,OAAQ,IACvB,kBAACxB,GAAA,EAAD,CAAMyB,SApBR,SAACC,GAEfA,EAAEC,iBAMFhF,EJ9Ba,SAACzE,GAIlB,OAFAwC,QAAQC,IAAIzC,GAEZ,uCAAO,WAAOyE,GAAP,qBAAAI,EAAA,6DAEHJ,EAAS,CAAEpD,KAAMlE,IAFd,SAGewG,GAAMuB,KAAN,+BACXlF,IAJJ,OAOe,OAJZsE,EAHH,QAOIC,QAAgB,EACKD,EAAIU,KAApBjF,EADU,EACVA,MAAOC,EADG,EACHA,KACfwD,aAAakG,QAAQ,QAAS3J,GAC9ByD,aAAakG,QAAQ,OAAQC,KAAKC,UAAU5J,IAC5CyE,EAAS,CACLpD,KAAMlE,EACNuF,QAAS,CACL3C,QAAOC,WAIG,MAAfsE,EAAIC,QACHE,EAAS,CACLpD,KAAMlE,EACNuF,QAAS,CAAElC,MAAO8D,EAAIU,KAAKxE,SArBpC,2CAAP,sDI0BaqJ,CAJI,CACT1J,QAAO+I,gBAgBS,kBAAC,GAAD,CACIlB,MAAM,QACNI,YAAY,QACZF,MAAO/H,EACPkB,KAAK,QACL8G,SAAU,SAACqB,GAAD,OAAOP,EAASO,EAAEM,OAAO5B,UAGvC,kBAAC,GAAD,CACIF,MAAM,WACNI,YAAY,WACZF,MAAOgB,EACP7H,KAAK,WACL8G,SAAU,SAACqB,GAAD,OAAOL,EAAYK,EAAEM,OAAO5B,UAE1C,kBAAC6B,GAAA,EAAD,CAAQzD,QAAQ,UAAUjF,KAAK,UAA/B,gBC+Cb2I,GA9FA,SAACnE,GAAW,IAAD,EACUmD,mBAAS,IADnB,oBACjB/I,EADiB,KACNgK,EADM,OAEQjB,mBAAS,IAFjB,oBAEjB9I,EAFiB,KAEPgK,EAFO,OAGElB,mBAAS,IAHX,oBAGjB7I,EAHiB,KAGV8I,EAHU,OAIQD,mBAAS,IAJjB,oBAIjBE,EAJiB,KAIPC,EAJO,OAKEH,mBAAS,IALX,oBAMlB3G,GANkB,UAMXyD,aAAY,SAACxD,GAAD,OAAWA,EAAMD,SACpCrC,EAAO8F,aAAY,SAACxD,GAAD,OAAWA,EAAMtC,QACpCyE,EAAWsB,cAEjBoE,qBAAU,WACHnK,EAAKO,UACR0J,EAAa,IACbC,EAAY,IACZjB,EAAS,IACTE,EAAY,OAEb,CAACnJ,EAAKO,UAeT,OAAI8B,EAAKhC,aACA,kBAAC,IAAD,CAAUsG,GAAE,MAGjB3G,EAAKO,QACA,0CAIP,kBAAC,GAAD,KACE,kBAACkG,EAAA,EAAD,KACGzG,EAAKS,QACN,kBAAC4G,GAAA,EAAD,CAAKd,MAAO,CAAE6C,UAAW,SACvB,kBAAC9B,GAAA,EAAD,CAAKC,GAAI,CAAE8B,KAAM,EAAGC,OAAQ,IAC1B,kBAACxB,GAAA,EAAD,CAAMyB,SA3BG,SAACC,GAClBA,EAAEC,iBASFhF,ECxCkB,SAACzE,GAInB,OAFAwC,QAAQC,IAAIzC,GAEZ,uCAAO,WAAOyE,GAAP,iBAAAI,EAAA,6DAEHJ,EAAS,CAAEpD,KAAMjE,IAFd,SAGeuG,GAAMuB,KAAN,+BACXlF,IAJJ,OAOe,OAJZsE,EAHH,QAOIC,QACK9D,EAAY6D,EAAIU,KAAhBvE,QACRgE,EAAS,CACLpD,KAAMjE,EACNsF,QAAS,CAACjC,cAGI,MAAf6D,EAAIC,QACHE,EAAS,CACLpD,KAAMjE,EACNsF,QAAS,CAAElC,MAAO8D,EAAIU,KAAKxE,SAjBpC,2CAAP,sDDoCS4J,CAPI,CACXnK,YACAC,WACAC,QACA+I,gBAqBQ,kBAAC7B,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAKC,GAAI,GACP,kBAAC,GAAD,CACES,MAAM,aACNI,YAAY,aACZF,MAAOjI,EACPoB,KAAK,OACL8G,SAAU,SAACqB,GAAD,OAAOS,EAAaT,EAAEM,OAAO5B,WAG3C,kBAACZ,GAAA,EAAD,CAAKC,GAAI,GACP,kBAAC,GAAD,CACES,MAAM,YACNI,YAAY,YACZF,MAAOhI,EACPmB,KAAK,OACL8G,SAAU,SAACqB,GAAD,OAAOU,EAAYV,EAAEM,OAAO5B,YAK5C,kBAAC,GAAD,CACEF,MAAM,QACNI,YAAY,QACZF,MAAO/H,EACPkB,KAAK,QACL8G,SAAU,SAACqB,GAAD,OAAOP,EAASO,EAAEM,OAAO5B,UAGrC,kBAAC,GAAD,CACEF,MAAM,WACNI,YAAY,WACZF,MAAOgB,EACP7H,KAAK,WACL8G,SAAU,SAACqB,GAAD,OAAOL,EAAYK,EAAEM,OAAO5B,UAExC,kBAAC6B,GAAA,EAAD,CAAQzD,QAAQ,UAAUjF,KAAK,UAA/B,gB,UEnFCgJ,GAXM,SAAC,GAAqC,IAAzBC,EAAwB,EAAnCC,UAAyBC,EAAU,8BACtD,OAAO,kBAAC,IAAD,iBAAWA,EAAX,CAAiBD,UAAW,SAAC1E,GAEhC,OADctC,OAAOC,aAAaC,QAAQ,SAE/B,kBAAC6G,EAAczE,GAEf,kBAAC,IAAD,CAAUc,GAAE,iB,oBC6BhB8D,GA9BE,SAAC5E,GAChB,OACE,kBAAC6E,GAAA,EAAD,CAAOC,KAAM9E,EAAM8E,KAAMC,KAAM/E,EAAM+E,KAAMC,OAAQhF,EAAMiF,aACvD,kBAACJ,GAAA,EAAM9E,OAAP,CAAcmF,aAAW,GACvB,kBAACL,GAAA,EAAMM,MAAP,KAAcnF,EAAMoF,aAEtB,kBAACP,GAAA,EAAMQ,KAAP,KAAarF,EAAMvE,UACnB,kBAACoJ,GAAA,EAAMS,OAAP,KACGtF,EAAMuF,QACLvF,EAAMuF,QAAQ7F,KAAI,SAAC8F,EAAK7F,GAAN,OAChB,kBAACuE,GAAA,EAAD,CAAQxB,IAAK/C,EAAOc,QAAS+E,EAAIC,MAAOpE,QAASmE,EAAInE,SAClDmE,EAAIrD,UAIT,kBAAC+B,GAAA,EAAD,eACEzD,QAAQ,WACJT,EAFN,CAGEU,MAAO,CAAEgF,gBAAiB,QAC1B3E,UAAU,SACVM,QAASrB,EAAM0D,WALjB,WCwOKiC,I,OAjPE,SAAC3F,GAAW,IAAD,EACFmD,mBAAS,IADP,oBACnB7H,EADmB,KACbsK,EADa,OAEMzC,mBAAS,IAFf,oBAEnB0C,EAFmB,KAETC,EAFS,OAGA3C,mBAAS,IAHT,oBAGnB4C,EAHmB,KAGZC,EAHY,OAIY7C,mBAAS,IAJrB,oBAInB8C,EAJmB,KAINC,EAJM,OAKU/C,mBAAS,IALnB,oBAKnBgD,EALmB,KAKPC,EALO,OAMoBjD,mBAAS,IAN7B,oBAMnBkD,EANmB,KAMFC,EANE,OAOFnD,oBAAS,GAPP,oBAOnB4B,EAPmB,KAObwB,EAPa,OAQ0BpD,oBAAS,GARnC,oBAQnBqD,EARmB,KAQCC,EARD,OASkBtD,mBAAS,MAT3B,oBASnBuD,EATmB,KASHC,EATG,KAUpBzL,EAAW+E,aAAY,SAACxD,GAAD,OAAWA,EAAMvB,YACxC6B,EAAUkD,aAAY,SAACxD,GAAD,OAAWA,EAAMM,WACvC6B,EAAWsB,cAEX+E,EAAc,WAClBsB,GAAQ,IAGJK,EAAoB,WACxB,IAAM/G,EAAO,IAAIgH,SACjBhH,EAAKiH,OAAO,OAAQxL,GACpBuE,EAAKiH,OAAO,WAAYjB,GACxBhG,EAAKiH,OAAO,QAASf,GACrBlG,EAAKiH,OAAO,cAAeb,GAC3BpG,EAAKiH,OAAO,WAAYX,GANM,qBAQdE,GARc,IAQ9B,2BAAiC,CAAC,IAAzBU,EAAwB,QAC/BlH,EAAKiH,OAAO,iBAAkBC,IATF,8BAY9BnI,EdnBsB,SAACiB,GACzB,8CAAO,WAAOjB,GAAP,SAAAI,EAAA,sEAEHJ,EAAS,CAAEpD,KAAM/D,IAFd,SAGeqG,GAAMuB,KAAN,iBAA6BQ,GAH5C,OAIgB,MAJhB,OAIKnB,QACNE,EAAS,CAAEpD,KAAM/D,IACjBmH,EAASQ,OAETR,EAAS,CAAEpD,KAAM/D,IARhB,gDAWHkF,QAAQC,IAAR,MAXG,yDAAP,sDckBWoK,CAAWnH,IAAOoH,MAAK,kBAAMV,GAAQ,OAe1CW,GAAwB,SAACvD,GAC7B2C,EAAmB,GAAD,oBAAKD,GAAL,CAAsB1C,EAAEM,OAAOkD,MAAM,OA+GnDC,GAAiC,WACrCX,GAAsB,IAGlBY,GAA0B,SAACtK,GAC/B4J,EAAkB5J,GAClB0J,GAAsB,IAyDxB,OACE,kBAAC,GAAD,CAAQlF,SAAO,GACb,kBAACX,EAAA,EAAD,KACE,kBAACY,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAKC,GAAI,IACP,yBAAKhB,MAAO,CAAE4G,QAAS,OAAQC,eAAgB,kBAC7C,wCACA,4BAAQlG,QAnMD,kBAAMkF,GAAQ,KAmMrB,UAIN,kBAAC/E,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KArLJ,kBAAC+F,GAAA,EAAD,CAAO9G,MAAO,CAAE+G,SAAU,IAAMC,WAAW,MACzC,+BACE,4BACE,iCACA,oCACA,qCACA,wCACA,wCACA,yCAGJ,+BACG3K,EAAQjC,SAASe,OAAS,EACvBkB,EAAQjC,SAAS4E,KAAI,SAAC3C,EAAQ4C,GAAT,OACnB,wBAAI+C,IAAK3F,EAAQ1B,KACf,4BAAKsE,EAAQ,GACb,4BAAK5C,EAAQzB,MACb,4BAAKyB,EAAQgJ,OACb,4BAAKhJ,EAAQ8I,UACb,4BAAK9I,EAAQ7B,SAASI,MACtB,4BACE,4BAAQ+F,QAAS,kBAAMgG,GAAwBtK,KAA/C,QAGA,4BACEsE,QAAS,WACP,IAAMxE,EAAU,CACd8K,UAAW5K,EAAQ1B,MAKF,IAHAqC,OAAOkK,QACxB,wCAGFhJ,EdvDS,SAAC/B,GAChC,8CAAO,WAAO+B,GAAP,iBAAAI,EAAA,+EAEelB,GAAM+J,OAAN,4BAA0C,CAC1D1I,KAAM,CAAEtC,aAHP,OAEG4B,EAFH,OAKHG,EAAS,CAAEpD,KAAM/D,IACE,MAAfgH,EAAIC,QACNE,EAAS,CAAEpD,KAAM/D,IACjBmH,EAASQ,QAEDzE,EAAU8D,EAAIU,KAAdxE,MACRiE,EAAS,CACPpD,KAAM/D,EACNoF,QAAS,CACPlC,YAdH,gDAmBHgC,QAAQC,IAAR,MAnBG,yDAAP,sDcsD+BkL,CAAkBjL,MAT/B,YAkBN,UAQR,kBAAC,GAAD,CACEkI,KAAMA,EACNE,YAAaA,EACbG,WAAY,kBACZ1B,SAAUkD,GAEV,kBAAC,GAAD,CACEzE,MAAM,OACNE,MAAO/G,EACPiH,YAAW,eACXD,SAAU,SAACqB,GAAD,OAAOiC,EAAQjC,EAAEM,OAAO5B,UAEpC,kBAAC,GAAD,CACEF,MAAM,WACNE,MAAOwD,EACPtD,YAAW,WACXD,SAAU,SAACqB,GAAD,OAAOmC,EAAYnC,EAAEM,OAAO5B,UAExC,kBAAC,GAAD,CACEF,MAAM,QACNE,MAAO0D,EACPxD,YAAW,QACXD,SAAU,SAACqB,GAAD,OAAOqC,EAASrC,EAAEM,OAAO5B,UAErC,kBAAC,GAAD,CACEF,MAAM,cACNE,MAAO4D,EACP1D,YAAW,cACXD,SAAU,SAACqB,GAAD,OAAOuC,EAAevC,EAAEM,OAAO5B,UAE3C,4BACEtB,UAAU,eACVsB,MAAO8D,EACP7D,SAAU,SAACqB,GAAD,OAAOyC,EAAczC,EAAEM,OAAO5B,SAExC,mDAtGmB,SAArB0F,EAAsBhN,GAA8B,IAAD,EAAjByH,EAAiB,uDAAP,GAAO,eAClCzH,GADkC,IACvD,2BAAiC,CAAC,IAAzBG,EAAwB,QAC/BsH,EAAQ5G,KAAK,CAAEyG,MAAOnH,EAASG,IAAKC,KAAMJ,EAASI,OAC/CJ,EAASO,SAASI,OAAS,GAC7BkM,EAAmB7M,EAASO,SAAU+G,IAJa,8BAQvD,OAAOA,EA+FAuF,CAAmB7M,EAASH,YAAY2E,KAAI,SAAC+C,GAAD,OAC3C,4BAAQC,IAAKD,EAAOJ,MAAOA,MAAOI,EAAOJ,OACtCI,EAAOnH,UAIb+K,EAAgBxK,OAAS,EACtBwK,EAAgB3G,KAAI,SAACqH,EAAKpH,GAAN,OAClB,yBAAK+C,IAAK/C,GAAQoH,EAAIzL,SAExB,KACJ,2BACEE,KAAK,OACLF,KAAK,iBACLgH,SAAU4E,MAgBXR,EAKH,kBAAC,GAAD,CACE3B,KAAMyB,EACNvB,YAAamC,GACbhC,WAAY,kBACZN,KAAK,MAEL,kBAACtD,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAKC,GAAG,KACN,2BAAOX,UAAU,OAAjB,QACA,uBAAGA,UAAU,SAAS2F,EAAepL,OAEvC,kBAACmG,GAAA,EAAD,CAAKC,GAAG,KACN,2BAAOX,UAAU,OAAjB,SACA,uBAAGA,UAAU,SAAS2F,EAAeX,SAGzC,kBAACvE,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAKC,GAAG,KACN,2BAAOX,UAAU,OAAjB,YACA,uBAAGA,UAAU,SAAS2F,EAAeb,WAEvC,kBAACpE,GAAA,EAAD,CAAKC,GAAG,KACN,2BAAOX,UAAU,OAAjB,YACA,uBAAGA,UAAU,SAAS2F,EAAexL,SAASI,QAGlD,kBAACkG,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAKC,GAAG,MACN,2BAAOX,UAAU,OAAjB,eACA,uBAAGA,UAAU,SAAS2F,EAAeT,eAGzC,kBAACzE,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,2BAAOV,UAAU,OAAjB,oBACA,yBAAKL,MAAO,CAAE4G,QAAS,SACpBZ,EAAeL,gBAAgB3G,KAAI,SAACnF,GAAD,OAClC,yBAAKwG,UAAU,uBACb,yBAAKiH,IAAKzN,EAAQ0N,IAAKC,IAAI,aA1ChC,Q,wFCwBDC,IAhMqBC,IAAM3D,UAgMhB,CACf4D,KAAM,CACJ3C,gBAAiB,sBACjB4C,WAAY,gDACZb,SAAU,GACVc,QAAS,KAIb,SAASC,GAAcC,GACrB,OAAQA,EAAMC,WACZ,IAAK,aAAc,MAAO,wBAC1B,QAAS,OAAO,M,IAMpBC,G,oDACE,aAAe,IAAD,+BACZ,gBACKC,SAAW,SAACjF,GACfA,EAAEC,iBACF,EAAK5D,MAAM4I,SAAS,EAAK5I,MAAMU,QAJrB,E,sDASZ,IAAIK,EAAY,mCAKhB,OAJI8H,KAAK7I,MAAM8I,SACb/H,GAAa,4BAIb,0BAAMA,UAAWA,EAAWgI,YAAaF,KAAKD,UAC3CC,KAAK7I,MAAMmC,W,GAjBAiG,IAAM3D,WAyBzBuE,GAAc,CACb,CAAC7G,MAAO,KAAMzB,MAAO,cACrB,CAACyB,MAAO,KAAMzB,MAAO,cACrB,CAACyB,MAAO,KAAMzB,MAAO,gBACrB,CAACyB,MAAO,KAAMzB,MAAO,eACrB,CAACyB,MAAO,KAAMzB,MAAO,eACrB,CAACyB,MAAO,KAAMzB,MAAO,cACrB,CAACyB,MAAO,aAAczB,MAAO,cAC7B,CAACyB,MAAO,KAAMzB,MAAO,uBACrB,CAACyB,MAAO,KAAMzB,MAAO,qBACrB,CAACyB,MAAO,aAAczB,MAAO,eAK9BuI,GAAqB,SAACjJ,GAAW,IACzBkJ,EAAelJ,EAAfkJ,YACDC,EAAYD,EAAYE,eACxBC,EAAYH,EACfI,oBACAC,eAAeJ,EAAUK,eACzBd,UAEH,OACE,yBAAK3H,UAAU,uBACZiI,GAAYtJ,KAAI,SAAClE,GAAD,OACf,kBAAC,GAAD,CACEkH,IAAKlH,EAAK2G,MACV2G,OAAQtN,EAAKkF,QAAU2I,EACvBlH,MAAO3G,EAAK2G,MACZyG,SAAU5I,EAAM4I,SAChBlI,MAAOlF,EAAKkF,aAQvB+I,GAAgB,CACb,CAACtH,MAAO,OAAQzB,MAAO,QACvB,CAACyB,MAAO,SAAUzB,MAAO,UACzB,CAACyB,MAAO,YAAazB,MAAO,aAC5B,CAACyB,MAAO,YAAazB,MAAO,SAK9BgJ,GAAsB,SAAC1J,GACrB,IAAI2J,EAAe3J,EAAMkJ,YAAYU,wBACrC,OACE,yBAAK7I,UAAU,uBACZ0I,GAAc/J,KAAI,SAAAlE,GAAI,OACrB,kBAAC,GAAD,CACEkH,IAAKlH,EAAK2G,MACV2G,OAAQa,EAAaE,IAAIrO,EAAKkF,OAC9ByB,MAAO3G,EAAK2G,MACZyG,SAAU5I,EAAM4I,SAChBlI,MAAOlF,EAAKkF,a,gKCmpBboJ,GA95BD,SAAC9J,GAAW,IAAD,EAEDmD,mBAAS,MAFR,oBAEhB9H,EAFgB,KAEX0O,EAFW,OAGW5G,mBAAS,IAHpB,oBAGhB6G,EAHgB,KAGLC,EAHK,OAIiB9G,mBAAS,IAJ1B,oBAIhB+G,EAJgB,KAIFC,EAJE,OAKShH,mBAASiH,eAAYC,eAL9B,oBAKhBC,EALgB,KAKNC,EALM,OAOSpH,mBAAS,IAPlB,oBAOhBlI,EAPgB,KAONuP,EAPM,OAQSrH,mBAAS,IARlB,oBAQhBsH,EARgB,KAQNC,EARM,OAUWvH,mBAAS,IAVpB,oBAUhBwH,EAVgB,KAULC,EAVK,OAWWzH,oBAAS,GAXpB,oBAWhB0H,EAXgB,KAWLC,EAXK,OAYS3H,mBAAS,IAAI4H,MAZtB,oBAYhBC,EAZgB,KAYNC,EAZM,OAae9H,mBAAS,IAAI4H,MAb5B,oBAahBG,EAbgB,KAaHC,EAbG,OAcChI,oBAAS,GAdV,oBAchB4B,EAdgB,KAcVwB,EAdU,OAewBpD,oBAAS,GAfjC,oBAehBiI,GAfgB,KAeCC,GAfD,QAiBgBlI,mBAAS,MAjBzB,sBAiBhBmI,GAjBgB,MAiBHC,GAjBG,SAmBqBpI,mBAAS,MAnB9B,sBAuBjBhG,IAvBiB,YAuBR8C,aAAY,SAACxD,GAAD,OAAWA,EAAMU,WACtCC,GAAO6C,aAAY,SAACxD,GAAD,OAAWA,EAAMW,QAoB1CoO,YAAW,WACX,IAAIC,EAAaC,KAAE,cAAcC,UAC/B,CAACC,UAAU,EACTC,SAAS,EACT,WAAc,CAAC,CAAC,EAAG,GAAI,IAAK,GAAI,CAAC,EAAG,GAAI,GAAI,UAGhDJ,EAAaK,GAAG,sBAAsB,WACpCL,EAAaM,OAAO,EAAG,CAAEC,OAAQ,UAAWhP,MAAO,YAAaiP,QAAQC,MAAK,SAAUC,EAAMC,GACzFD,EAAKE,UAAYD,EAAI,QAE1BE,SAEA,KAQDhI,qBAAU,WACRiI,OAEC,IAEHjI,qBAAU,WACR,GAAIgH,GAAa,CAOfvB,EAAOuB,GAAYjQ,KACnB4O,EAAaqB,GAAYtB,WACzBG,EAAgBmB,GAAYpB,cAClC,IAEEvN,QAAQC,IAAIkH,KAAKC,UAAUuH,GAAYhB,WAMvC,IAAIkC,EAAgBC,0BAAenB,GAAYhB,UACvCoC,EAAetC,eAAYuC,kBAAkBH,GACjDjC,EAAYmC,GAQd,MAAOE,GACLjQ,QAAQC,IAAI,eAAegQ,GAI3BpC,EAAYc,GAAYrQ,UACxByP,EAAYY,GAAYnO,QACxByN,EAAaU,GAAYX,WACzBG,EAAaQ,GAAYT,WACzBM,EAAe0B,KAAWvB,GAAYJ,YAAa,aACnDD,EAAY4B,KAAWvB,GAAYN,SAAU,gBAa9C,CAACM,KAUJhH,qBAAU,cAER,IAOF,IA2CMiI,GAAiB,uCAAG,oCAAAvN,EAAA,yDACF,qBAAXtB,OADa,gCAEiB,kCAFjB,gBAELoP,EAFK,EAEdC,QAEJ/M,EAAMX,OACF2N,EAAeF,EAAY9M,EAAMX,KAAKiL,UAC5C3N,QAAQC,IAAI,eAAgBoQ,GACxBA,IACIC,EAAe3C,EAAS4C,qBAAqBF,EAAaG,eAC1DjE,EAAckB,eAAYuC,kBAAkBM,GAClDtQ,QAAQC,IAAIsM,GAEZqB,EAAYrB,KAZM,2CAAH,qDA6BjBkE,GAAmC,WACvC,IACE,MAAO,CAAEC,OAAQC,aAAYhD,EAAShB,sBACtC,MAAOiE,GAEP,OADA5Q,QAAQC,IAAI2Q,GACL,CAAEF,OAAQ,WAKfzO,GAAWsB,cAEX+E,GAAc,WAClBsB,GAAQ,IAaJiH,GAAiB,SAACC,GACtB,Ib7OsB5N,Ea6OhB6N,EAAW,IAAI7G,SACrB6G,EAAS5G,OAAO,YAAa2G,GAC7B7O,Ib/OsBiB,Ea+OF6N,Eb9OtB,uCAAO,WAAO9O,GAAP,mBAAAI,EAAA,6DACLrC,QAAQC,IAAIiD,GADP,SAGHjB,EAAS,CAAEpD,KAAM5C,GAAcU,mBAH5B,SAIewE,GAAMuB,KAAN,cAA0BQ,GAJzC,OAKgB,OADbpB,EAJH,QAKKC,QACES,EAASV,EAATU,KACFwO,EAAWxO,EAAKwO,SACvBhQ,aAAakG,QAAQ,WAAW8J,GAC/BhR,QAAQC,IAAI6B,IAKZG,EAAS,CAAEpD,KAAM5C,GAAcgV,qBAd9B,gDAiBHjR,QAAQC,IAAR,MAjBG,yDAAP,wDa8OiCqK,MAAK,kBAAM2D,EAAajN,aAAaC,QAAQ,iBAuBxEiQ,GAAkB,WACtB,GA5Ge,WAEf,GAAkB,KAAd7D,EAKN,GAAqB,KAAjBE,EAMN,GAAiB,KAAbI,EAAJ,CAKA,GAAiB,KAAbG,EAKF,OAAO,EAHPqD,MAAM,2BALNA,MAAM,6BANJA,MAAM,iCALJA,MAAM,yBAwGJC,GAAJ,CAIA,Ib7RoBlO,Ea6RdmO,EAAU,CACd3S,IAAKA,EACL2O,UAAWA,EACXE,aAAcA,EAGdI,SAAU2D,wBAAa3D,EAAShB,qBAEhCrO,SAAsB,IAAZA,EAAiB,KAAOA,EAClCkC,OAAoB,IAAZsN,EAAiB,KAAOA,EAChCI,UAAWA,EACXK,YAAaA,EACbF,SAASA,EACTL,UAAWA,GAGbhO,QAAQC,IAAI,SAAUoR,GACX,MAAP3S,EACFuD,Ib/SkBiB,Ea+SDmO,Eb9SrB,uCAAO,WAAOpP,GAAP,SAAAI,EAAA,6DACLrC,QAAQC,IAAIiD,GADP,SAGHjB,EAAS,CAAEpD,KAAM5C,GAAcU,mBAH5B,SAIewE,GAAMuB,KAAN,cAA0BQ,GAJzC,OAKgB,MALhB,OAKKnB,QACNE,EAAS,CAAEpD,KAAM5C,GAAcW,mBAC/BqF,EAASkB,OAETlB,EAAS,CAAEpD,KAAM5C,GAAcY,mBAT9B,gDAYHmD,QAAQC,IAAR,MAZG,yDAAP,wDa8S+BqK,MAAK,kBAAMV,GAAQ,MAG9C3H,GbxQoB,SAACiB,GACzB,8CAAO,WAAMjB,GAAN,iBAAAI,EAAA,6DACHJ,EAAS,CAAEpD,KAAM5C,GAAca,uBAD5B,SAEeqE,GAAMuB,KAAN,eAA2BQ,GAF1C,OAGgB,OADbpB,EAFH,QAGKC,QACJE,EAAS,CAAEpD,KAAM5C,GAAcc,uBAC/BkF,EAASkB,QAEDnF,EAAU8D,EAAIU,KAAdxE,MACRiE,EAAS,CACLpD,KAAM5C,GAAce,qBACpBkD,QAAS,CAAElC,YAVhB,2CAAP,sDauQauT,CAAYF,IAAU/G,MAAK,kBAAMoE,IAAoB,MAEhE3N,OAAOyQ,SAASC,WAgCHhG,IAAMiG,OAAO,MAmB5B,IAiBMC,GAjBkB,SAACjS,GAAyB,IAAlBmG,EAAiB,uDAAP,GAC5C,GAAW,MAARnG,EAAa,CAAC,IAAD,iBACIA,GADJ,IACZ,2BAAuB,CAAC,IAAfkS,EAAc,QACrB/L,EAAQ5G,KAAK,CACXyG,MAAOkM,EAAIlT,IACXC,KAAMiT,EAAIvE,UACV/O,SAAUsT,EAAItT,SACdO,KAAM+S,EAAI/S,QANF,+BAcZ,OAAOgH,EAESgM,CAAgBpR,GAAKf,OASjCoS,GAAmB,SAACrS,GAA2B,IAAD,EAAjBoG,EAAiB,uDAAP,GAAO,eAC/BpG,GAD+B,IAClD,2BAA4B,CAAC,IAApBe,EAAmB,QAC1BqF,EAAQ5G,KAAK,CAAEyG,MAAOlF,EAAO9B,IAAKC,KAAM6B,EAAOuR,cAFC,8BAQlD,OAAOlM,GA6QHmM,GAA+B,WACnCtD,IAAoB,IAGhBuD,GAAwB,SAACxR,GAC7BiO,IAAoB,GACpBE,GAAgBnO,IA4PlB,OACE,kBAAC,GAAD,CAAQmE,SAAO,GACb,kBAACX,EAAA,EAAD,KACE,kBAACY,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAKC,GAAI,IACP,yBAAKhB,MAAO,CAAE4G,QAAS,OAAQC,eAAgB,kBAC7C,qCACA,4BAAQlG,QA/kBD,WAnLjB0I,EAAO,MACPE,EAAa,IACbE,EAAgB,IAGhBI,EAAYH,eAAYC,eAExBG,EAAY,IACZE,EAAY,IACZE,EAAa,IACbE,GAAa,GACbK,EAAe,IAAIJ,MACnBE,EAAY,IAAIF,MAChBxE,GAAQ,GAwKRA,GAAQ,KA6kBE,UAIN,kBAAC/E,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KAxeJ,yBAAKV,UAAU,aACpB,2BAAOI,GAAG,YAAYJ,UAAU,uEAAwEL,MAAO,CAAE+G,SAAU,IAAMC,WAAW,MACrI,+BACE,4BAEE,iCACA,yCACA,4CACA,yCAEA,yCAGJ,+BAGgB,MAAZtK,GAAKf,OAAee,GAAKf,MAAMR,OAAS,EACtCuB,GAAKf,MAAMqD,KAAI,SAACtC,EAAMuC,GAAP,OAEf,wBAAI+C,IAAKtF,EAAK/B,KACZ,4BAAKsE,EAAQ,GACb,4BAAKvC,EAAK4M,WACV,4BAAK5M,EAAK8M,cACV,4BAAK9M,EAAKyR,iBAEV,4BACE,4BAAQxN,QAAS,kBAAMuN,GAAsBxR,KAA7C,QADF,gBAwBF,WAaR,kBAAC,GAAD,CACE0H,KAAK,KACLC,KAAMA,EACNE,YAAaA,GACbG,WAAY,gBACZ1B,SAAUmK,IAEV,kBAAC,GAAD,CACE1L,MAAM,YACNE,MAAO2H,EACPzH,YAAW,YACXD,SAAU,SAACqB,GAAD,OAAOsG,EAAatG,EAAEM,OAAO5B,UAEzC,kBAAC,GAAD,CACEF,MAAM,eACNE,MAAO6H,EACP3H,YAAW,eACXD,SAAU,SAACqB,GAAD,OAAOwG,EAAgBxG,EAAEM,OAAO5B,UAW5C,yBAAKtB,UAAU,mBAuBb,kBAAC,UAAD,CAAQmI,YAAaoB,EACnBwE,iBAAiB,gBACjBC,gBAAgB,eAChBC,iBAAiB,gBACjBC,aAAc,CAAEC,OAAQ,kBAAmBC,aAAc,QACzDC,YAAa,CAAEC,OAAQ,QAAS9G,QAAS,QACzC+G,QAAS,CAAEC,MAAO,CAAE/B,oBACpBgC,oBAAqB,SAAAtG,GAAW,OAAIqB,EAAYrB,OAapD,6BACC,yBAAKuG,wBAAyBrC,OAE/B,6BACA,+BAAQzC,GACR,yBAAKzC,IAAI,GAAGF,IAAKjO,GAAkB4Q,KACnC,4BACE5J,UAAU,eACVsB,MAAOpH,EACPqH,SAAU,SAACqB,GAAD,OAAO6G,EAAY7G,EAAEM,OAAO5B,SAEtC,iDACCiM,GAAU5O,KAAI,SAAC+C,GAAD,OACb,4BAAQC,IAAKD,EAAOJ,MAAOA,MAAOI,EAAOJ,OACtCI,EAAOnH,UAId,6BACA,4BACEyF,UAAU,eACVsB,MAAOoI,EACPnI,SAAU,SAACqB,GAAD,OAAO+G,EAAY/G,EAAEM,OAAO5B,SAEtC,iDACCoM,GAAiBtR,GAAOf,SAASsD,KAAI,SAAC+C,GAAD,OACpC,4BAAQC,IAAKD,EAAOJ,MAAOA,MAAOI,EAAOJ,OACtCI,EAAOnH,UAId,6BAmBC,2BAAOoU,QAAQ,eAAf,cACD,kBAAC,KAAD,CACCvO,GAAG,cACHgB,MAAM,YACNE,MAAO2I,EACL1I,SAAU,SAACqN,GAAD,OAAU1E,EAAY0E,MAInC,6BACD,2BAAOD,QAAQ,kBAAf,iBACC,kBAAC,KAAD,CACCvO,GAAG,iBACHgB,MAAM,eACNE,MAAO6I,EACL5I,SAAU,SAACqN,GAAD,OAAUxE,EAAewE,MAItC,6BACC,2BACCxO,GAAG,cACH3F,KAAK,WACLF,KAAK,YACL6G,MAAM,YACNE,MAAOwI,EACPlI,QAASkI,EACTvI,SAAU,SAACqB,GAAD,OAAOmH,EAAanH,EAAEM,OAAOtB,YAGzC,2BAAO+M,QAAQ,eAAf,cAkBCpE,GAKH,kBAAC,GAAD,CACEvG,KAAMqG,GACNnG,YAAa0J,GACbvJ,WAAY,qBACZ1B,SAAUmK,GACV/I,KAAK,MAEL,kBAAC,GAAD,CACEtJ,KAAK,SAEL6G,MAAOhH,IAET,kBAAC,GAAD,CACE8G,MAAM,YACNE,MAAO2H,EACPzH,YAAW,YACXD,SAAU,SAACqB,GAAD,OAAOsG,EAAatG,EAAEM,OAAO5B,UAEzC,kBAAC,GAAD,CACEF,MAAM,eACNE,MAAO6H,EACP3H,YAAW,eACXD,SAAU,SAACqB,GAAD,OAAOwG,EAAgBxG,EAAEM,OAAO5B,UAW5C,yBAAKtB,UAAU,mBAuBb,kBAAC,UAAD,CAOEmI,YAAaoB,EACbwE,iBAAiB,gBACjBC,gBAAgB,eAChBC,iBAAiB,gBACjBC,aAAc,CAAEC,OAAQ,kBAAmBC,aAAc,QACzDC,YAAa,CAAEC,OAAQ,QAAS9G,QAAS,QACzC+G,QAAS,CAAEC,MAAO,CAAE/B,oBACpBgC,oBAAqB,SAAAtG,GAAW,OAAIqB,EAAYrB,OAcpD,6BACA,yBAAKuG,wBAAyBrC,OAE9B,6BACA,+BAAQzC,GACR,yBAAKzC,IAAI,GAAGF,IAAKjO,GAAkB4Q,KACnC,4BACE5J,UAAU,eAEVsB,MAAOiJ,GAAYrQ,SACnBqH,SAAU,SAACqB,GAAD,OAAO6G,EAAY7G,EAAEM,OAAO5B,SAEtC,iDACCiM,GAAU5O,KAAI,SAAC+C,GAAD,OACb,4BAAQC,IAAKD,EAAOJ,MAAOA,MAAOI,EAAOJ,OACtCI,EAAOnH,UAId,6BACA,4BACEyF,UAAU,eACVsB,MAAOiJ,GAAYnO,OAEnBmF,SAAU,SAACqB,GAAD,OAAO+G,EAAY/G,EAAEM,OAAO5B,SAEtC,iDACCoM,GAAiBtR,GAAOf,SAASsD,KAAI,SAAC+C,GAAD,OACpC,4BAAQC,IAAKD,EAAOJ,MAAOA,MAAOI,EAAOJ,OACtCI,EAAOnH,UAId,6BA0BF,2BAAOoU,QAAQ,eAAf,cACE,kBAAC,KAAD,CACCvO,GAAG,cACHgB,MAAM,YACNE,MAAO2I,EACL1I,SAAU,SAACqN,GAAD,OAAU1E,EAAY0E,MAIlC,kBAAC,KAAD,CAKMC,UAAW5E,EACZ1I,SAAU,SAACqN,GAAD,OAAS1E,EAAa0E,IAEhCrU,KAAK,WACLyF,UAAU,QACV8O,gBAAgB,gBAEtB,6BACC,2BAAOH,QAAQ,kBAAf,iBACD,kBAAC,KAAD,CACEvO,GAAG,iBACJkB,MAAO6I,EACL5I,SAAU,SAACqN,GAAD,OAAUxE,EAAewE,MAIrC,kBAAC,KAAD,CAKMC,UAAW1E,EACZ5I,SAAU,SAACqN,GAAD,OAASxE,EAAgBwE,IAEnCrU,KAAK,cACLyF,UAAU,QACV8O,gBAAgB,gBAEtB,6BACC,2BACC1O,GAAG,cACH3F,KAAK,WACLF,KAAK,YACL6G,MAAM,YACNE,MAAOwI,EACPlI,QAASkI,EACTvI,SAAU,SAACqB,GAAD,OAAOmH,EAAanH,EAAEM,OAAOtB,YAGzC,2BAAO+M,QAAQ,eAAf,cAxMK,OCoPEI,I,OAx4BC,SAAC9P,GAAW,IAAD,EAEHmD,mBAAS,MAFN,oBAElB9H,EAFkB,KAEb0O,EAFa,OAGa5G,mBAAS,IAHtB,oBAGlB4M,EAHkB,KAGLC,EAHK,OAIW7M,mBAAS,IAJpB,oBAIlB8M,EAJkB,KAINC,EAJM,OAKqB/M,mBAAS,KAL9B,oBAKlBgN,EALkB,KAKDC,EALC,OAMejN,mBAAS,IANxB,oBAMlBkN,EANkB,KAMJC,EANI,OAOenN,mBAASiH,eAAYC,eAPpC,oBAOlBkG,EAPkB,KAOJC,EAPI,OAQOrN,mBAAS,IARhB,oBAQlBlI,EARkB,KAQRuP,EARQ,OASOrH,mBAAS,IAThB,oBASlBsH,EATkB,KASRC,EATQ,OAWqBvH,mBAAS,IAX9B,oBAWlBsN,EAXkB,KAWDC,EAXC,OAYSvN,oBAAS,GAZlB,oBAYlB0H,EAZkB,KAYPC,EAZO,OAaa3H,mBAAS,IAAI4H,MAb1B,oBAalBG,GAbkB,KAaLC,GAbK,QAcDhI,oBAAS,GAdR,sBAclB4B,GAdkB,MAcZwB,GAdY,SAe0BpD,oBAAS,GAfnC,sBAelBwN,GAfkB,MAeCC,GAfD,SAiBkBzN,mBAAS,MAjB3B,sBAiBlB0N,GAjBkB,MAiBHC,GAjBG,SAmBuB3N,mBAAS,MAnBhC,sBAuBnBhG,IAvBmB,YAuBV8C,aAAY,SAACxD,GAAD,OAAWA,EAAMU,WACtCF,GAASgD,aAAY,SAACxD,GAAD,OAAWA,EAAMQ,UAoB5CuO,YAAW,WACX,IAAIC,EAAaC,KAAE,cAAcC,UAC/B,CAACC,UAAU,EACTC,SAAS,EACT,WAAc,CAAC,CAAC,EAAG,GAAI,IAAK,GAAI,CAAC,EAAG,GAAI,GAAI,UAGhDJ,EAAaK,GAAG,sBAAsB,WACpCL,EAAaM,OAAO,EAAG,CAAEC,OAAQ,UAAWhP,MAAO,YAAaiP,QAAQC,MAAK,SAAUC,EAAMC,GACzFD,EAAKE,UAAYD,EAAI,QAE1BE,SAEA,KA0BDhI,qBAAU,WACRiI,OAEC,IAEHjI,qBAAU,WACR,GAAIuM,GAAe,CAOjB9G,EAAO8G,GAAcxV,KACrB2U,EAAea,GAAcd,aAC7BG,EAAcW,GAAcZ,YAC5BG,EAAmBS,GAAcV,iBACjCG,EAAgBO,GAAcR,cAG9B1T,QAAQC,IAAIkH,KAAKC,UAAU8M,GAAcN,eAEzC,IAAItD,EAAeR,0BAAeoE,GAAcN,cAC5CrH,EAAckB,eAAYuC,kBAAkBM,GAChDuD,EAAgBtH,GAIhBsB,EAAYqG,GAAc5V,UAC1ByP,EAAYmG,GAAc1T,QAC1BuT,EAAmBG,GAAcJ,iBACjC3F,EAAa+F,GAAchG,WAE3BM,GAAe0B,KAAWgE,GAAc3F,YAAa,aAIpDvO,QAAQC,IAAIiQ,KAAWgE,GAAc3F,YAAa,gBAQpD,CAAC2F,KAUJvM,qBAAU,cAER,IAOF,IA6CMiI,GAAiB,uCAAG,oCAAAvN,EAAA,yDACF,qBAAXtB,OADa,gCAEiB,kCAFjB,gBAELoP,EAFK,EAEdC,QAEJ/M,EAAMX,OACF2N,EAAeF,EAAY9M,EAAMX,KAAKkR,cAC5C5T,QAAQC,IAAI,eAAgBoQ,GACxBA,IACIC,EAAesD,EAAarD,qBAAqBF,EAAaG,eAC9DjE,EAAckB,eAAYuC,kBAAkBM,GAClDtQ,QAAQC,IAAIsM,GAEZsH,EAAgBtH,KAZE,2CAAH,qDA6BjBkE,GAAmC,WACvC,IACE,MAAO,CAAEC,OAAQC,aAAYiD,EAAajH,sBAC1C,MAAOiE,GAEP,OADA5Q,QAAQC,IAAI2Q,GACL,CAAEF,OAAQ,WAKfzO,GAAWsB,cAEX+E,GAAc,WAClBsB,IAAQ,IAaJiH,GAAiB,SAACC,GACtB,IhBtPyB5N,EgBsPnB6N,EAAW,IAAI7G,SACrB6G,EAAS5G,OAAO,kBAAmB2G,GACnC7O,IhBxPyBiB,EgBwPH6N,EhBvPxB,uCAAO,WAAO9O,GAAP,mBAAAI,EAAA,6DACLrC,QAAQC,IAAIiD,GADP,SAGHjB,EAAS,CAAEpD,KAAM9D,IAHd,SAIeoG,GAAMuB,KAAN,gBAA4BQ,GAJ3C,OAKgB,OADbpB,EAJH,QAKKC,QACES,EAASV,EAATU,KACFwO,EAAWxO,EAAKwO,SACvBhQ,aAAakG,QAAQ,WAAW8J,GAC/BhR,QAAQC,IAAI6B,IAKZG,EAAS,CAAEpD,KAAM9D,IAdhB,gDAiBHiF,QAAQC,IAAR,MAjBG,yDAAP,wDgBuPmCqK,MAAK,kBAAMyJ,EAAmB/S,aAAaC,QAAQ,iBAuBhFmT,GAAoB,WACxB,GAhHe,WAEf,GAAoB,KAAhBhB,EAKN,GAAmB,KAAfE,EAKN,GAAqB,KAAjBI,EAKJ,GAAqB,KAAjBE,EAAJ,CAKA,GAAiB,KAAb9F,EAKF,OAAO,EAHPqD,MAAM,2BALNA,MAAM,iCALNA,MAAM,iCALJA,MAAM,+BALJA,MAAM,2BA4GJC,GAAJ,CAIA,IhBtSsBlO,EgBsShBmO,EAAU,CACd3S,IAAKA,EACL0U,YAAaA,EACbE,WAAYA,EACZE,gBAAiBA,EACjBE,aAAcA,EACdE,aAActC,wBAAasC,EAAajH,qBACxCrO,SAAsB,IAAZA,EAAiB,KAAOA,EAClCkC,OAAoB,IAAZsN,EAAiB,KAAOA,EAChCI,UAAWA,EACXK,YAAaA,GACbuF,gBAAiBA,GAGnB9T,QAAQC,IAAI,SAAUoR,GACX,MAAP3S,EACFuD,IhBtToBiB,EgBsTDmO,EhBrTvB,uCAAO,WAAOpP,GAAP,SAAAI,EAAA,6DACLrC,QAAQC,IAAIiD,GADP,SAGHjB,EAAS,CAAEpD,KAAM9D,IAHd,SAIeoG,GAAMuB,KAAN,gBAA4BQ,GAJ3C,OAKgB,MALhB,OAKKnB,QACNE,EAAS,CAAEpD,KAAM9D,IACjBkH,EAASU,OAETV,EAAS,CAAEpD,KAAM9D,IAThB,gDAYHiF,QAAQC,IAAR,MAZG,yDAAP,wDgBqTiCqK,MAAK,kBAAMV,IAAQ,MAGhD3H,GhBhRsB,SAACiB,GAC3B,8CAAO,WAAMjB,GAAN,iBAAAI,EAAA,6DACHJ,EAAS,CAAEpD,KAAM9D,KADd,SAEeoG,GAAMuB,KAAN,iBAA6BQ,GAF5C,OAGgB,OADbpB,EAFH,QAGKC,QACJE,EAAS,CAAEpD,KAAM9D,KACjBkH,EAASU,QAED3E,EAAU8D,EAAIU,KAAdxE,MACRiE,EAAS,CACLpD,KAAM9D,GACNmF,QAAS,CAAElC,YAVhB,2CAAP,sDgB+QaqW,CAAchD,IAAU/G,MAAK,kBAAM2J,IAAsB,MAEpElT,OAAOyQ,SAASC,WA+BHhG,IAAMiG,OAAO,MAmB5B,IAiBMC,GAjBkB,SAACtS,GAA2B,IAAlBwG,EAAiB,uDAAP,GAC9C,GAAa,MAAVxG,EAAe,CAAC,IAAD,iBACEA,GADF,IACd,2BAAyB,CAAC,IAAjBuS,EAAgB,QACvB/L,EAAQ5G,KAAK,CACXyG,MAAOkM,EAAIlT,IACXC,KAAMiT,EAAIwB,YACV9U,SAAUsT,EAAItT,SACdO,KAAM+S,EAAI/S,QANA,+BAcd,OAAOgH,EAESgM,CAAgBvR,GAAOjB,SASnCyS,GAAmB,SAACrS,GAA2B,IAAD,EAAjBoG,EAAiB,uDAAP,GAAO,eAC/BpG,GAD+B,IAClD,2BAA4B,CAAC,IAApBe,EAAmB,QAC1BqF,EAAQ5G,KAAK,CAAEyG,MAAOlF,EAAO9B,IAAKC,KAAM6B,EAAOuR,cAFC,8BAQlD,OAAOlM,GA2QHyO,GAAiC,WACrCL,IAAsB,IAGlBM,GAA0B,SAACjU,GAC/B2T,IAAsB,GACtBE,GAAkB7T,IAmOpB,OACE,kBAAC,GAAD,CAAQsE,SAAO,GACb,kBAACX,EAAA,EAAD,KACE,kBAACY,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAKC,GAAI,IACP,yBAAKhB,MAAO,CAAE4G,QAAS,OAAQC,eAAgB,kBAC7C,uCACA,4BAAQlG,QApjBD,WAlLjB0I,EAAO,MACPiG,EAAe,IACfE,EAAc,IACdE,EAAmB,KACnBE,EAAgB,IAChBE,EAAgBpG,eAAYC,eAC5BG,EAAY,IACZE,EAAY,IACZgG,EAAmB,IACnB5F,GAAa,GACbK,GAAe,IAAIJ,MACnBxE,IAAQ,GAyKRA,IAAQ,KAkjBE,UAIN,kBAAC/E,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KA7cJ,yBAAKV,UAAU,aACpB,2BAAOI,GAAG,YAAYJ,UAAU,uEAAwEL,MAAO,CAAE+G,SAAU,IAAMC,WAAW,MACrI,+BACE,4BAEE,iCACA,2CACA,0CACA,yCAEA,yCAGJ,+BAGoB,MAAhBzK,GAAOjB,SAAiBiB,GAAOjB,QAAQH,OAAS,EAC9CoB,GAAOjB,QAAQ0D,KAAI,SAACzC,EAAQ0C,GAAT,OAEnB,wBAAI+C,IAAKzF,EAAO5B,KACd,4BAAKsE,EAAQ,GACb,4BAAK1C,EAAO8S,aACZ,4BAAK9S,EAAOgT,YACZ,4BAAKhT,EAAO4R,iBAEZ,4BACE,4BAAQxN,QAAS,kBAAM6P,GAAwBjU,KAA/C,QADF,WASI,kBAAC,IAAD,CAASyF,IAAKzF,EAAO5B,IAAKyF,GAAE,uBAAkB7D,EAAO5B,IAAzB,YAAgC4B,EAAO8S,cAAnE,mBAsBN,WAaR,kBAAC,GAAD,CACEjL,KAAK,KACLC,KAAMA,GACNE,YAAaA,GACbG,WAAY,kBACZ1B,SAAUqN,IAEV,kBAAC,GAAD,CACE5O,MAAM,cACNE,MAAO0N,EACPxN,YAAW,cACXD,SAAU,SAACqB,GAAD,OAAOqM,EAAerM,EAAEM,OAAO5B,UAE3C,kBAAC,GAAD,CACEF,MAAM,aACNE,MAAO4N,EACP1N,YAAW,aACXD,SAAU,SAACqB,GAAD,OAAOuM,EAAcvM,EAAEM,OAAO5B,UAE1C,kBAAC,GAAD,CACEF,MAAM,kBACN3G,KAAK,SACL6G,MAAO8N,EACP5N,YAAW,kBACXD,SAAU,SAACqB,GAAD,OAAOyM,EAAmBzM,EAAEM,OAAO5B,UAE/C,kBAAC,GAAD,CACEF,MAAM,eACNE,MAAOgO,EACP9N,YAAW,eACXD,SAAU,SAACqB,GAAD,OAAO2M,EAAgB3M,EAAEM,OAAO5B,UAS5C,yBAAKtB,UAAU,mBAuBb,kBAAC,UAAD,CAAQmI,YAAaqH,EACnBzB,iBAAiB,gBACjBC,gBAAgB,eAChBC,iBAAiB,gBACjBC,aAAc,CAAEC,OAAQ,kBAAmBC,aAAc,QACzDC,YAAa,CAAEC,OAAQ,QAAS9G,QAAS,QACzC+G,QAAS,CAAEC,MAAO,CAAE/B,oBACpBgC,oBAAqB,SAAAtG,GAAW,OAAIsH,EAAgBtH,OAGxD,6BACC,yBAAKuG,wBAAyBrC,OAE/B,6BACA,+BAAQqD,GACR,yBAAKvI,IAAI,GAAGF,IAAKjO,GAAkB0W,KACnC,4BACE1P,UAAU,eACVsB,MAAOpH,EACPqH,SAAU,SAACqB,GAAD,OAAO6G,EAAY7G,EAAEM,OAAO5B,SAEtC,iDACCiM,GAAU5O,KAAI,SAAC+C,GAAD,OACb,4BAAQC,IAAKD,EAAOJ,MAAOA,MAAOI,EAAOJ,OACtCI,EAAOnH,UAId,6BACA,4BACEyF,UAAU,eACVsB,MAAOoI,EACPnI,SAAU,SAACqB,GAAD,OAAO+G,EAAY/G,EAAEM,OAAO5B,SAEtC,iDACCoM,GAAiBtR,GAAOf,SAASsD,KAAI,SAAC+C,GAAD,OACpC,4BAAQC,IAAKD,EAAOJ,MAAOA,MAAOI,EAAOJ,OACtCI,EAAOnH,UAId,6BAmBD,2BAAOoU,QAAQ,kBAAf,iBACC,kBAAC,KAAD,CACCvO,GAAG,iBACHgB,MAAM,eACNE,MAAO6I,GACL5I,SAAU,SAACqN,GAAD,OAAUxE,GAAewE,MAItC,6BACC,2BACCxO,GAAG,cACH3F,KAAK,WACLF,KAAK,YACL6G,MAAM,YACNE,MAAOwI,EACPlI,QAASkI,EACTvI,SAAU,SAACqB,GAAD,OAAOmH,EAAanH,EAAEM,OAAOtB,YAGzC,2BAAO+M,QAAQ,eAAf,cAkBCmB,GAKH,kBAAC,GAAD,CACE9L,KAAM4L,GACN1L,YAAagM,GACb7L,WAAY,uBACZ1B,SAAUqN,GACVjM,KAAK,MAEL,kBAAC,GAAD,CACEtJ,KAAK,SAEL6G,MAAOhH,IAET,kBAAC,GAAD,CACE8G,MAAM,cACNE,MAAO0N,EACPxN,YAAW,cACXD,SAAU,SAACqB,GAAD,OAAOqM,EAAerM,EAAEM,OAAO5B,UAE3C,kBAAC,GAAD,CACEF,MAAM,aACNE,MAAO4N,EACP1N,YAAW,aACXD,SAAU,SAACqB,GAAD,OAAOuM,EAAcvM,EAAEM,OAAO5B,UAE1C,kBAAC,GAAD,CACEF,MAAM,kBACN3G,KAAK,SACL6G,MAAO8N,EACP5N,YAAW,kBACXD,SAAU,SAACqB,GAAD,OAAOyM,EAAmBzM,EAAEM,OAAO5B,UAE/C,kBAAC,GAAD,CACEF,MAAM,eACNE,MAAOgO,EACP9N,YAAW,eACXD,SAAU,SAACqB,GAAD,OAAO2M,EAAgB3M,EAAEM,OAAO5B,UAS5C,yBAAKtB,UAAU,mBAuBb,kBAAC,UAAD,CACEmI,YAAaqH,EACbzB,iBAAiB,gBACjBC,gBAAgB,eAChBC,iBAAiB,gBACjBC,aAAc,CAAEC,OAAQ,kBAAmBC,aAAc,QACzDC,YAAa,CAAEC,OAAQ,QAAS9G,QAAS,QACzC+G,QAAS,CAAEC,MAAO,CAAE/B,oBACpBgC,oBAAqB,SAAAtG,GAAW,OAAIsH,EAAgBtH,OAGxD,6BACA,yBAAKuG,wBAAyBrC,OAE9B,6BACA,yBAAKlF,IAAI,GAAGF,IAAKjO,GAAkB0W,KACnC,+BAAQA,GACR,4BACE1P,UAAU,eAEVsB,MAAOwO,GAAc5V,SACrBqH,SAAU,SAACqB,GAAD,OAAO6G,EAAY7G,EAAEM,OAAO5B,SAEtC,iDACCiM,GAAU5O,KAAI,SAAC+C,GAAD,OACb,4BAAQC,IAAKD,EAAOJ,MAAOA,MAAOI,EAAOJ,OACtCI,EAAOnH,UAId,6BACA,4BACEyF,UAAU,eACVsB,MAAOwO,GAAc1T,OAErBmF,SAAU,SAACqB,GAAD,OAAO+G,EAAY/G,EAAEM,OAAO5B,SAEtC,iDACCoM,GAAiBtR,GAAOf,SAASsD,KAAI,SAAC+C,GAAD,OACpC,4BAAQC,IAAKD,EAAOJ,MAAOA,MAAOI,EAAOJ,OACtCI,EAAOnH,UAId,6BA0BC,2BAAOoU,QAAQ,kBAAf,iBACD,kBAAC,KAAD,CACEvO,GAAG,iBACH7F,KAAK,cACLyF,UAAU,QACXsB,MAAO6I,GACP0E,UAAW1E,GACT5I,SAAU,SAACqN,GAAD,OAAUxE,GAAewE,MAIrC,kBAAC,KAAD,CAKMC,UAAW1E,GACZ5I,SAAU,SAACqN,GAAD,OAASxE,GAAgBwE,IAEnCrU,KAAK,cACLyF,UAAU,QACV8O,gBAAgB,gBAEtB,6BACC,2BACC1O,GAAG,cACH3F,KAAK,WACLF,KAAK,YACL6G,MAAM,YACNE,MAAOwI,EACPlI,QAASkI,EACTvI,SAAU,SAACqB,GAAD,OAAOmH,EAAanH,EAAEM,OAAOtB,YAGzC,2BAAO+M,QAAQ,eAAf,cA/KK,QCnrBEyB,GAPF,SAACnR,GACZ,OACE,sC,OC4FWwH,ICy4BA4J,GA18BK,SAACpR,GAAW,IAAD,EAEKmD,mBAAS,MAFd,oBAEtB3D,EAFsB,KAEX6R,EAFW,OAGSlO,mBAAS,MAHlB,oBAGtB4M,EAHsB,KAGTC,EAHS,OAIP7M,mBAAS,MAJF,oBAItB9H,EAJsB,KAIjB0O,EAJiB,OAKG5G,mBAAS,IALZ,oBAKpBmO,EALoB,KAKXC,EALW,OAMKpO,mBAAS,KANd,oBAMpBqO,EANoB,KAMVC,EANU,OAOetO,mBAASiH,eAAYC,eAPpC,oBAOpBqH,EAPoB,KAOLC,EAPK,OAQKxO,mBAAS,IARd,oBAQpBlI,EARoB,KAQVuP,EARU,OASqBrH,mBAAS,IAT9B,oBASpBjH,EAToB,KASF0V,EATE,OAUOzO,mBAAS,IAVhB,oBAUpB0O,EAVoB,KAUTC,EAVS,OAWL3O,mBAAS,IAXJ,oBAWpB4O,EAXoB,KAWfC,EAXe,OAYL7O,mBAAS,IAZJ,oBAYpB8O,EAZoB,KAYfC,EAZe,OAa0B/O,mBAAS,MAbnC,oBAapBgP,EAboB,KAaAC,GAbA,QAcOjP,oBAAS,GAdhB,sBAcpB0H,GAdoB,MAcTC,GAdS,SAeW3H,mBAAS,IAAI4H,MAfxB,sBAepBG,GAfoB,MAePC,GAfO,SAgBHhI,oBAAS,GAhBN,sBAgBpB4B,GAhBoB,MAgBdwB,GAhBc,SAiB6BpD,oBAAS,GAjBtC,sBAiBpBkP,GAjBoB,MAiBAC,GAjBA,SAmBqBnP,mBAAS,MAnB9B,sBAmBpBoP,GAnBoB,MAmBJC,GAnBI,MA0BrBtV,GAAa+C,aAAY,SAACxD,GAAD,OAAWA,EAAMS,cAEhDoH,qBAAU,WACTsN,EAAoB1V,KACpB,CAACgB,GAAWjB,cAqBfqI,qBAAU,WACR5G,OAAO+U,SAAS,EAAG,GACnB,IAAMjT,EAAYQ,EAAM0S,MAAMC,OAAOnT,UAC/BuQ,EAAc/P,EAAM0S,MAAMC,OAAO5C,YAG3CsB,EAAa7R,GACbwQ,EAAeD,GACfnR,GAASW,GAAmBC,MAGxB,CAACQ,EAAM0S,MAAMC,OAAOnT,UAAUQ,EAAM0S,MAAMC,OAAO5C,cAEnDzL,qBAAU,WAERkH,YAAW,WACX,GAA4B,MAAxBtO,GAAWjB,YAAmB,CAGhC,IAAIwP,EAAaC,KAAE,4BAA4BC,UAC7C,CAACC,UAAU,EACTC,SAAS,EACT,WAAc,CAAC,CAAC,EAAG,GAAI,IAAK,GAAI,CAAC,EAAG,GAAI,GAAI,UAGhDJ,EAAaK,GAAG,sBAAsB,WACpCL,EAAaM,OAAO,EAAG,CAAEC,OAAQ,UAAWhP,MAAO,YAAaiP,QAAQC,MAAK,SAAUC,EAAMC,GACzFD,EAAKE,UAAYD,EAAI,QAE1BE,UAKF,OAKA,CAACtM,EAAM0S,MAAMC,OAAOnT,YAEzB8E,qBAAU,WAEJpH,GAAWhB,mBACb0V,EAAoB1U,GAAWhB,kBAC/B0V,EAAoB1U,GAAWhB,qBAEjC,CAACgB,GAAWhB,mBAEVoI,qBAAU,WACR,GAAIiO,GAAgB,CAIlBlB,EAAakB,GAAetV,QAC5B8M,EAAOwI,GAAelX,KACtBkW,EAAWgB,GAAejB,SAC1BG,EAAYc,GAAef,UAK3B,IAAIvE,EAAeR,0BAAe8F,GAAeb,eAC7CxI,EAAckB,eAAYuC,kBAAkBM,GAChD0E,EAAiBzI,GAGjBsB,EAAY+H,GAAetX,UAE3B6P,GAAayH,GAAe1H,WAC5BM,GAAe0B,KAAW0F,GAAerH,YAAa,aACtD0G,EAAoBW,GAAerW,kBAGlCS,QAAQC,IAAIiQ,KAAW0F,GAAerH,YAAa,gBAOrD7P,GAMH,IAkDM+R,GAAmC,WACvC,IACE,MAAO,CAAEC,OAAQC,aAAYoE,EAAcpI,sBAC3C,MAAOiE,GAEP,OADA5Q,QAAQC,IAAI2Q,GACL,CAAEF,OAAQ,WAKfzO,GAAWsB,cAEX0S,GAAc,WAClBrM,IAAQ,IAWJiH,GAAiB,SAACC,GACtB,IAAMC,EAAW,IAAI7G,SACrB6G,EAAS5G,OAAO,mBAAoB2G,GACpC7O,GAASgB,GAAe8N,IAAWzG,MAAK,kBAAM2K,EAAoBjU,aAAaC,QAAQ,iBAuBnFiV,GAAiB,WACrB,GAvEuB,WACvB,GAAY,KAARZ,GAAsB,KAARF,EAAlB,CAOJ,GAAkB,KAAdF,EAMF,OAAO,EAJP/D,MAAM,8BAPFA,MAAM,0BAoEJgF,GAAJ,CAIA,IAAMpF,EAAW,IAAI7G,SAMrB6G,EAAS5G,OAAO,MAAOzL,GACvBqS,EAAS5G,OAAO,sBAAuBqL,GAEvCzE,EAAS5G,OAAO,MAAOmL,GACvBvE,EAAS5G,OAAO,YAAa+K,GAC7BnE,EAAS5G,OAAO,MAAOiL,GACvBpV,QAAQC,IAAI8Q,GACZ9O,GAASgB,GAAe8N,IAAWzG,MAAK,WACtCmL,GAAuB,MAC/BF,EAAO,IACPJ,EAAa,IACbE,EAAO,IACPpT,GAASa,GAAmBpE,IAC3B4L,MAAK,kBAAI8L,aA6BAC,GAAwB,WAC5B,GA9Ie,WAEf,GAAgB,KAAZ1B,EAAJ,CAOJ,GAAsB,KAAlBI,EAMF,OAAO,EAJP5D,MAAM,kCAPFA,MAAM,uBA0IJC,GAAJ,CAIA,IlBzRwBlO,EkByRlBmO,EAAU,CACd3S,IAAKA,EACL4B,OAAOuC,EACP8R,QAASA,EACTE,SAAUA,EACVE,cAAezD,wBAAayD,EAAcpI,qBAC1CrO,SAAsB,IAAZA,EAAiB,KAAOA,EAClC4P,UAAWA,GACXK,YAAaA,IAIfvO,QAAQC,IAAI,SAAUoR,GACX,MAAP3S,EACFuD,IlBvSsBiB,EkBuSCmO,ElBtS7B,uCAAO,WAAOpP,GAAP,SAAAI,EAAA,6DACLrC,QAAQC,IAAIiD,GADP,SAGHjB,EAAS,CAAEpD,KAAM7D,KAHd,SAIemG,GAAMuB,KAAN,oBAAgCQ,GAJ/C,OAKgB,MALhB,OAKKnB,OACNE,EAAS,CAAEpD,KAAM7D,KAGjBiH,EAAS,CAAEpD,KAAM7D,KAThB,gDAYHgF,QAAQC,IAAR,MAZG,yDAAP,wDkBsSuCqK,MAAK,kBAAMV,IAAQ,MAGpD3H,GlBxOwB,SAACiB,GAC/B,8CAAO,WAAMjB,GAAN,iBAAAI,EAAA,6DACHJ,EAAS,CAAEpD,KAAM7D,KADd,SAEemG,GAAMuB,KAAN,qBAAiCQ,GAFhD,OAGgB,OADbpB,EAFH,QAGKC,OACJE,EAAS,CAAEpD,KAAM7D,MAGTgD,EAAU8D,EAAIU,KAAdxE,MACRiE,EAAS,CACLpD,KAAM7D,GACNkF,QAAS,CAAElC,YAVhB,2CAAP,sDkBuOesY,CAAkBjF,IAAU/G,MAAK,kBAAMqL,IAA0B,MAE5E5U,OAAOyQ,SAASC,WA+BHhG,IAAMiG,OAAO,MAmB5B,IAiBM6E,GAjBuB,SAACjX,GAA+B,IAAlBuG,EAAiB,uDAAP,GACvD,GAAiB,MAAdvG,EAAmB,CAAC,IAAD,iBACFA,GADE,IAClB,2BAA6B,CAAC,IAArBsS,EAAoB,QAC3B/L,EAAQ5G,KAAK,CACXyG,MAAOkM,EAAIlT,IACXC,KAAMiT,EAAI+C,QACVrW,SAAUsT,EAAItT,SACdO,KAAM+S,EAAI/S,QANI,+BAclB,OAAOgH,EAEc2Q,CAAqBjW,GAAWjB,aAoBjDmX,GAAyB,SAACzP,GAC9BuO,EAAOvO,EAAEM,OAAOkD,MAAM,KAiHlB4L,GAA6B,WAGjC,OACE,yBAAKhS,UAAU,aACpB,2BAAOI,GAAG,eAAeJ,UAAU,uEAAwEL,MAAO,CAAE+G,SAAU,IAAMC,WAAW,MACxI,+BACE,4BAEE,iCACA,wCACC,mCACD,mCACA,yCAGJ,+BAGsB,MAAlBxL,GAA0BA,EAAiBL,OAAS,EAClDK,EAAiBwD,KAAI,SAAC2T,EAAU1T,GAAX,OAEZ,MAAV0T,EACC,wBAAI3Q,IAAK2Q,EAAShY,IAAKsE,EAAQ,GAC7B,4BAAKA,EAAQ,GACb,4BAAK0T,EAASxB,WACd,4BAAKwB,EAAStB,KACd,4BAAKsB,EAASpB,KAEd,4BACE,4BAAQ5Q,QAAS,kBAAMiS,GAAgBD,KAAvC,QADF,WASE,4BACEhS,QAAS,WACP,IAAMxE,EAAU,CACd2C,UAAYnE,EACZ8W,oBAAqBkB,EAAShY,MAKb,IAHAqC,OAAOkK,QACxB,wCAKAhJ,GlB9fU,SAAC/B,GACnC,8CAAO,WAAO+B,GAAP,eAAAI,EAAA,6DACLrC,QAAQC,IAAI,cAAekH,KAAKC,UAAWlH,IADtC,SAGH+B,EAAS,CAAEpD,KAAM7D,KAHd,SAIemG,GAAM+J,OAAN,0BAAwC,CACxD1I,KAAK,CAACtC,aALL,OAOgB,OAHb4B,EAJH,QAOKC,QAIL/B,QAAQC,IAAI6B,GACbG,EAASa,GAAmB5C,EAAQ2C,aAIpCZ,EAAS,CAAEpD,KAAM7D,KAhBhB,gDAmBHgF,QAAQC,IAAR,MAnBG,yDAAP,sDkB6fiC2W,CAAqB1W,IAC7BoK,MAAK,kBAAI2K,EAAoB1U,GAAWf,eAAeD,uBAb9D,SAsBJ,4BAAI,2CAGJ,SA+INsX,GAAqC,WACzClB,IAA0B,IAGtBmB,GAA8B,SAACvW,GACnCoV,IAA0B,GAC1BE,GAAsBtV,IAMlBoW,GAAkB,SAACD,GACvBjB,GAAuBiB,EAAShY,KACjC6W,EAAOmB,EAASpB,KAChBH,EAAauB,EAASxB,WACtBG,EAAOqB,EAAStB,MAkNjB,OAEE,kBAAC,GAAD,CAAQxQ,SAAO,GACb,kBAACX,EAAA,EAAD,KACE,kBAACY,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAKC,GAAI,IACP,yBAAKhB,MAAO,CAAE4G,QAAS,OAAQC,eAAgB,kBAC7C,2CADF,IACuB,4BAAKwI,GAC1B,4BAAQ1O,QAtmBD,WAEjBkF,IAAQ,KAomBE,UAIN,kBAAC/E,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KA5fJ,yBAAKV,UAAU,aACpB,2BAAOI,GAAG,YAAYJ,UAAU,uEAAwEL,MAAO,CAAE+G,SAAU,IAAMC,WAAW,MACrI,+BACE,4BAEE,iCACA,uCACC,wCACD,yCACA,yCAGJ,+BAG4B,MAAxBxK,GAAWjB,aAAqBiB,GAAWjB,YAAYJ,OAAS,EAC9DqB,GAAWjB,YAAYyD,KAAI,SAACxC,EAAYyC,GAAb,OAE3B,wBAAI+C,IAAKxF,EAAW7B,KAClB,4BAAKsE,EAAQ,GACb,4BAAKzC,EAAWoU,SAChB,4BAAKpU,EAAWsU,UAChB,4BAAKtU,EAAW2N,WAEhB,4BACE,4BAAQxJ,QAAS,kBAAMoS,GAA4BvW,KAAnD,QADF,gBA4BF,WAuFR,kBAAC,GAAD,CACE4H,KAAK,KACLC,KAAMA,GACNE,YAAa2N,GACbxN,WAAY,sBACZ1B,SAAUsP,IAGV,4BAAKjD,GACL,kBAAC,GAAD,CACE5N,MAAM,UACNE,MAAOiP,EACP/O,YAAW,UACXD,SAAU,SAACqB,GAAD,OAAO4N,EAAW5N,EAAEM,OAAO5B,UAGvC,kBAAC,GAAD,CACEF,MAAM,WACN3G,KAAK,SACL6G,MAAOmP,EACPjP,YAAW,WACXD,SAAU,SAACqB,GAAD,OAAO8N,EAAY9N,EAAEM,OAAO5B,UAUxC,yBAAKtB,UAAU,mBAuBb,kBAAC,UAAD,CAAQmI,YAAawI,EACnB5C,iBAAiB,gBACjBC,gBAAgB,eAChBC,iBAAiB,gBACjBC,aAAc,CAAEC,OAAQ,kBAAmBC,aAAc,QACzDC,YAAa,CAAEC,OAAQ,QAAS9G,QAAS,QACzC+G,QAAS,CAAEC,MAAO,CAAE/B,oBACpBgC,oBAAqB,SAAAtG,GAAW,OAAIyI,EAAiBzI,OAGzD,6BACC,yBAAKuG,wBAAyBrC,OAE/B,6BACA,+BAAQlR,GACR,4BACE6E,UAAU,eACVsB,MAAOpH,EACPqH,SAAU,SAACqB,GAAD,OAAO6G,EAAY7G,EAAEM,OAAO5B,SAEtC,iDACC6Q,GAAexT,KAAI,SAAC+C,GAAD,OAClB,4BAAQC,IAAKD,EAAOJ,MAAOA,MAAOI,EAAOJ,OACtCI,EAAOnH,UAId,6BAaA,6BAUD,2BAAOoU,QAAQ,kBAAf,iBACC,kBAAC,KAAD,CACCvO,GAAG,iBACHgB,MAAM,eACNE,MAAO6I,GACL5I,SAAU,SAACqN,GAAD,OAAUxE,GAAewE,MAItC,6BACC,2BACCxO,GAAG,cACH3F,KAAK,WACLF,KAAK,YACL6G,MAAM,YACNE,MAAOwI,GACPlI,QAASkI,GACTvI,SAAU,SAACqB,GAAD,OAAOmH,GAAanH,EAAEM,OAAOtB,YAGzC,2BAAO+M,QAAQ,eAAf,cA6BC6C,GAKH,kBAAC,GAAD,CACExN,KAAMsN,GACNpN,YAAauO,GACbpO,WAAY,2BACZ1B,SAAUsP,GACVlO,KAAK,MAEL,4BAAKiL,GAEL,kBAAC,GAAD,CACE5N,MAAM,UACNE,MAAOiP,EACP/O,YAAW,UACXD,SAAU,SAACqB,GAAD,OAAO4N,EAAW5N,EAAEM,OAAO5B,UAGvC,kBAAC,GAAD,CACEF,MAAM,WACN3G,KAAK,SACL6G,MAAOmP,EACPjP,YAAW,WACXD,SAAU,SAACqB,GAAD,OAAO8N,EAAY9N,EAAEM,OAAO5B,UAUxC,yBAAKtB,UAAU,mBAuBb,kBAAC,UAAD,CACEmI,YAAawI,EACb5C,iBAAiB,gBACjBC,gBAAgB,eAChBC,iBAAiB,gBACjBC,aAAc,CAAEC,OAAQ,kBAAmBC,aAAc,QACzDC,YAAa,CAAEC,OAAQ,QAAS9G,QAAS,QACzC+G,QAAS,CAAEC,MAAO,CAAE/B,oBACpBgC,oBAAqB,SAAAtG,GAAW,OAAIyI,EAAiBzI,OAGzD,6BACA,yBAAKuG,wBAAyBrC,OAE9B,6BAEA,4BACErM,UAAU,eAEVsB,MAAOpH,EACPqH,SAAU,SAACqB,GAAD,OAAO6G,EAAY7G,EAAEM,OAAO5B,SAEtC,iDACC6Q,GAAexT,KAAI,SAAC+C,GAAD,OAClB,4BAAQC,IAAKD,EAAOJ,MAAOA,MAAOI,EAAOJ,OACtCI,EAAOnH,UAId,6BAcA,6BA0BC,2BAAOoU,QAAQ,kBAAf,iBACD,kBAAC,KAAD,CAGE3O,UAAU,QACXsB,MAAQ6I,GACR0E,UAAW1E,GACT5I,SAAU,SAACqN,GAAD,OAAUxE,GAAewE,MAIrC,kBAAC,KAAD,CAIKtN,MAAO6I,GACN0E,UAAW1E,GACZ5I,SAAU,SAACqN,GAAD,OAASxE,GAAgBwE,IAEnCrU,KAAK,cACLyF,UAAU,QACV8O,gBAAgB,gBAEtB,6BACC,2BACC1O,GAAG,cACH3F,KAAK,WACLF,KAAK,YACL6G,MAAM,YACNE,MAAOwI,GACPlI,QAASkI,GACTvI,SAAU,SAACqB,GAAD,OAAOmH,GAAanH,EAAEM,OAAOtB,YAGzC,2BAAO+M,QAAQ,eAAf,aACA,6BAOG,kBAAC,GAAD,CACDvN,MAAM,YACNE,MAAOwP,EACPtP,YAAW,YACXD,SAAU,SAACqB,GAAD,OAAOmO,EAAanO,EAAEM,OAAO5B,UAEvC,kBAAC,GAAD,CACAF,MAAM,MACNE,MAAO0P,EACPxP,YAAW,MACXD,SAAU,SAACqB,GAAD,OAAOqO,EAAOrO,EAAEM,OAAO5B,UAErC,2BACI7G,KAAK,OACLF,KAAK,MACLgH,SAAU8Q,KAEZ,2BACA5X,KAAK,SACLF,KAAK,SACL+G,MAAM,SACNhB,QAASwR,KAGT,kBAACjS,EAAA,EAAD,KAEA,kBAACY,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KAAMsR,SApMH,OCvvBAW,I,OAfF,SAAC1T,GACZ,OACE,uCAAKe,UAAU,QAAWf,IACtBA,EAAM2T,YAAc3T,EAAM4T,cAC1B,yBAAK7S,UAAU,cACZf,EAAM2T,YAAc,6BAAM3T,EAAM2T,YAChC3T,EAAM4T,aAAe5T,EAAM4T,aAI/B5T,EAAMvE,YC2HEoY,I,OAhIA,SAAC7T,GACd,IAAMhD,EAAQiD,aAAY,SAACxD,GAAD,OAAWA,EAAMO,SADnB,EAEAmG,mBAAS,IAFT,oBAEjB3H,EAFiB,KAEXsY,EAFW,KAGlBlV,EAAWsB,cAEX6T,EAAgB,SAACC,GAKrBpV,ECIuB,SAAC/B,GAC1B,8CAAO,WAAO+B,GAAP,iBAAAI,EAAA,6DACLJ,EAAS,CAAEpD,KAAM3B,KADZ,kBAGeiE,GAAMuB,KAAK,gBAAiBxC,GAH3C,OAIgB,OADb4B,EAHH,QAIKC,QACNE,EAAS,CAAEpD,KAAM3B,KACjB+E,EA9BN,uCAAO,WAAOA,GAAP,mBAAAI,EAAA,6DACLJ,EAAS,CAAEpD,KAAM3B,KADZ,kBAGeiE,GAAMuB,KAAK,4BAH1B,OAIgB,OADbZ,EAHH,QAIKC,QACE5C,EAAW2C,EAAIU,KAAfrD,OACR8C,EAAS,CACPpD,KAAM3B,GACNgD,QAAS,CAAEf,cAGLnB,EAAU8D,EAAIU,KAAdxE,MACRiE,EAAS,CACPpD,KAAM3B,GACNgD,QAAS,CAAElC,YAdZ,gDAkBHgC,QAAQC,IAAR,MAlBG,yDAAP,yDAgCcjC,EAAU8D,EAAIU,KAAdxE,MACRiE,EAAS,CACPpD,KAAM3B,GACNgD,QAAS,CAAElC,YAXZ,gDAeHgC,QAAQC,IAAR,MAfG,yDAAP,sDDLWqX,CAJO,CACdD,UACAxY,WAaJ,OACE,kBAAC,GAAD,CAAQ+F,SAAO,GACZvE,EAAMlB,OAAO4D,KAAI,SAACwU,EAAWvU,GAAZ,OAChB,kBAAC,GAAD,CACEe,MAAO,CACLyT,OAAQ,UAEVzR,IAAK/C,EACLgU,WAAYO,EAAU7Y,KAEtB,yBACEqF,MAAO,CACL4G,QAAS,OACTC,eAAgB,gBAChBgB,QAAS,YACT6L,WAAY,WAGd,6BACE,yBAAKrT,UAAU,SAAf,SACCmT,EAAUG,MAAM3U,KAAI,SAAC4U,EAAM3U,GAAP,OACnB,yBAAKoB,UAAU,QAAQ2B,IAAK/C,GACzB2U,EAAK3M,UAAUrM,UAItB,6BACE,0BAAMyF,UAAU,SAAhB,eACA,6BACA,0BAAMA,UAAU,SAASmT,EAAUK,cAErC,6BACE,0BAAMxT,UAAU,SAAhB,gBADF,IAC8C,6BAC5C,0BAAMA,UAAU,SAASmT,EAAUM,cAErC,6BACE,0BAAMzT,UAAU,SAAhB,kBADF,IACgD,6BAC9C,0BAAMA,UAAU,SAASmT,EAAUO,iBAGvC,yBACE/T,MAAO,CACLgU,UAAW,aACXnM,QAAS,QACTjB,QAAS,OACT8M,WAAY,WAGd,yBAAKrT,UAAU,cACZmT,EAAUS,YAAYjV,KAAI,SAAChB,GAAD,OACzB,yBACEqC,UAAS,sBACPrC,EAAOkW,YAAc,SAAW,KAGlC,yBACE7T,UAAS,gBAAWrC,EAAOkW,YAAc,SAAW,MAEtD,yBAAK7T,UAAU,aACb,yBAAKA,UAAU,UAAUrC,EAAOlD,MAChC,yBAAKuF,UAAU,QApEd,SAAC4O,GAClB,GAAIA,EAAM,CACR,IAAMkF,EAAI,IAAI9J,KAAK4E,GACnB,MAAM,GAAN,OAAUkF,EAAEC,cAAZ,YAA6BD,EAAEE,WAAa,EAA5C,YAAiDF,EAAEG,WAErD,MAAO,GA+DgCC,CAAWvW,EAAOiR,aAOjD,yBACEjP,MAAO,CACL6H,QAAS,SACTmM,UAAW,eAGb,4BAAQpS,SAAU,SAACqB,GAAD,OAAOmQ,EAAQnQ,EAAEM,OAAO5B,SACxC,4BAAQA,MAAO,IAAf,iBACC6R,EAAUS,YAAYjV,KAAI,SAAChB,GAC1B,OACE,oCACIA,EAAOkW,YAIL,KAHF,4BAAQlS,IAAKhE,EAAOlD,KAAM6G,MAAO3D,EAAOlD,MACrCkD,EAAOlD,YAUtB,yBACEkF,MAAO,CACL6H,QAAS,SACTmM,UAAW,eAGb,4BAAQrT,QAAS,kBAAM0S,EAAcG,EAAU7Y,OAA/C,oB,wCEXC6Z,I,OAjHe,SAAClV,GAAW,IAGlC+E,EASA/E,EATA+E,KACAE,EAQAjF,EARAiF,YACAG,EAOApF,EAPAoF,WACAN,EAMA9E,EANA8E,KACAqQ,EAKAnV,EALAmV,cACAC,EAIApV,EAJAoV,aACAC,EAGArV,EAHAqV,oBACAnW,EAEAc,EAFAd,aACAwE,EACA1D,EADA0D,SAKJ,OAFA/G,QAAQC,IAAI,CAACuY,gBAAeC,iBAGxB,kBAAC,GAAD,CACIrQ,KAAMA,EACNE,YAAaA,EACbvB,SAAUA,EACV0B,WAAYA,EACZN,KAAMA,GAEN,kBAACtD,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,KACI,0CAIJ0T,EAActZ,OAAS,GACvBsZ,EAAczV,KAAI,SAAC4U,EAAM3U,GAAP,OACd,kBAAC6B,GAAA,EAAD,CAAKkB,IAAK/C,GACN,kBAAC8B,GAAA,EAAD,KACI,kBAAC,GAAD,CACIY,MAAOiS,EAAKhZ,KACZiH,YAAW,gBACXD,SAAU,SAACqB,GAAD,OAAO0R,EAAoB,OAAQ1R,EAAEM,OAAO5B,MAAO1C,EAAO,gBAG5E,kBAAC8B,GAAA,EAAD,KACI,4BACIV,UAAU,eACVsB,MAAOiS,EAAKrZ,SACZqH,SAAU,SAACqB,GAAD,OAAO0R,EAAoB,WAAY1R,EAAEM,OAAO5B,MAAO1C,EAAO,cACxE,mDAEIT,EAAaQ,KAAI,SAAA+C,GAAM,OACnB,4BAAQC,IAAKD,EAAOJ,MAAOA,MAAOI,EAAOJ,OAAQI,EAAOnH,WAKxE,kBAACmG,GAAA,EAAD,KACI,4BACIV,UAAU,eACVsB,MAAOiS,EAAK9Y,KACZ8G,SAAU,SAACqB,GAAD,OAAO0R,EAAoB,OAAQ1R,EAAEM,OAAO5B,MAAO1C,EAAO,cAEpE,4BAAQ0C,MAAM,IAAd,eACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,WAAd,WACA,4BAAQA,MAAM,QAAd,cAMpB,kDAEI+S,EAAavZ,OAAS,GACtBuZ,EAAa1V,KAAI,SAAC4U,EAAM3U,GAAP,OACb,kBAAC6B,GAAA,EAAD,CAAKkB,IAAK/C,GACN,kBAAC8B,GAAA,EAAD,KACI,kBAAC,GAAD,CACIY,MAAOiS,EAAKhZ,KACZiH,YAAW,gBACXD,SAAU,SAACqB,GAAD,OAAO0R,EAAoB,OAAQ1R,EAAEM,OAAO5B,MAAO1C,EAAO,eAG5E,kBAAC8B,GAAA,EAAD,KACI,4BACIV,UAAU,eACVsB,MAAOiS,EAAKrZ,SACZqH,SAAU,SAACqB,GAAD,OAAO0R,EAAoB,WAAY1R,EAAEM,OAAO5B,MAAO1C,EAAO,aACxE,mDAEIT,EAAaQ,KAAI,SAAA+C,GAAM,OACnB,4BAAQC,IAAKD,EAAOJ,MAAOA,MAAOI,EAAOJ,OAAQI,EAAOnH,WAKxE,kBAACmG,GAAA,EAAD,KACI,4BACIV,UAAU,eACVsB,MAAOiS,EAAK9Y,KACZ8G,SAAU,SAACqB,GAAD,OAAO0R,EAAoB,OAAQ1R,EAAEM,OAAO5B,MAAO1C,EAAO,aAGpE,4BAAQ0C,MAAM,IAAd,eACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,WAAd,WACA,4BAAQA,MAAM,QAAd,iBChDjBiT,GAvDU,SAACtV,GAAW,IAG7B+E,EAUA/E,EAVA+E,KACAE,EASAjF,EATAiF,YACAG,EAQApF,EARAoF,WACAmQ,EAOAvV,EAPAuV,aACAC,EAMAxV,EANAwV,gBACAC,EAKAzV,EALAyV,iBACAC,EAIA1V,EAJA0V,oBACAxW,EAGAc,EAHAd,aACAyW,EAEA3V,EAFA2V,oBACAjS,EACA1D,EADA0D,SAGJ,OACI,kBAAC,GAAD,CACIqB,KAAMA,EACNE,YAAaA,EACbvB,SAAUA,EACV0B,WAAYA,GAEZ,kBAAC5D,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,KACI,kBAAC,GAAD,CACIY,MAAOkT,EACPhT,YAAW,gBACXD,SAAU,SAACqB,GAAD,OAAO6R,EAAgB7R,EAAEM,OAAO5B,QAC1CtB,UAAU,qBAGlB,kBAACU,GAAA,EAAD,KACI,4BACIV,UAAU,+BACVsB,MAAOoT,EACPnT,SAAU,SAACqB,GAAD,OAAO+R,EAAoB/R,EAAEM,OAAO5B,SAC9C,mDAEInD,EAAaQ,KAAI,SAAA+C,GAAM,OACnB,4BAAQC,IAAKD,EAAOJ,MAAOA,MAAOI,EAAOJ,OAAQI,EAAOnH,YAK5E,kBAACkG,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,KACI,2BAAOjG,KAAK,OAAOF,KAAK,gBAAgBgH,SAAUqT,QC+OvDC,I,OAnQE,SAAC5V,GAEd,IAAM9E,EAAW+E,aAAY,SAAAxD,GAAK,OAAIA,EAAMvB,YAFpB,EAIgBiI,mBAAS,IAJzB,oBAIjBoS,EAJiB,KAIHC,EAJG,OAKwBrS,mBAAS,IALjC,oBAKjBsS,EALiB,KAKCC,EALD,OAMkBvS,mBAAS,IAN3B,oBAMjB0S,EANiB,KAMFC,EANE,OAOA3S,oBAAS,GAPT,oBAOjB4B,EAPiB,KAOXwB,EAPW,OAQMpD,mBAAS,IARf,oBAQjBR,EARiB,KAQRoT,EARQ,OASQ5S,mBAAS,IATjB,oBASjB6S,EATiB,KASPC,EATO,OAUgB9S,mBAAS,IAVzB,oBAUjBiS,EAViB,KAUHc,EAVG,OAWkB/S,mBAAS,IAX3B,oBAWjBgS,EAXiB,KAWFgB,EAXE,OAY8BhT,oBAAS,GAZvC,oBAYjBiT,EAZiB,KAYIC,EAZJ,QAa8BlT,oBAAS,GAbvC,sBAajBmT,GAbiB,MAaIC,GAbJ,MAclB3X,GAAWsB,cAEjBoE,qBAAU,WAEDpJ,EAASR,SACV6L,GAAQ,KAGb,CAACrL,EAASR,UAGb,IAkCMqN,GAAqB,SAArBA,EAAsBhN,GAA8B,IAAD,EAAjByH,EAAiB,uDAAP,GAAO,eAEhCzH,GAFgC,IAErD,2BAAiC,CAAC,IAAzBG,EAAwB,QAC7BsH,EAAQ5G,KAAK,CACTyG,MAAOnH,EAASG,IAChBC,KAAMJ,EAASI,KACfL,SAAUC,EAASD,SACnBO,KAAMN,EAASM,OAEfN,EAASO,SAASI,OAAS,GAC3BkM,EAAmB7M,EAASO,SAAU+G,IAVO,8BAcrD,OAAOA,GAYLgU,GAAqC,WACvC,IAAMzb,EAAagN,GAAmB7M,EAASH,YACzCqa,EAAe,GACfD,EAAgB,GACtBxS,EAAQ9G,OAAS,GAAK8G,EAAQ8T,SAAQ,SAACtQ,EAAYxG,GAC/C,IAAMzE,EAAWH,EAAW2b,MAAK,SAACxb,EAAUyb,GAAX,OAAsBxQ,GAAcjL,EAASmH,SAC9EnH,GAAYka,EAAaxZ,KAAKV,MAElC8a,EAASna,OAAS,GAAKma,EAASS,SAAQ,SAACtQ,EAAYxG,GACjD,IAAMzE,EAAWH,EAAW2b,MAAK,SAACxb,EAAUyb,GAAX,OAAsBxQ,GAAcjL,EAASmH,SAC9EnH,GAAYia,EAAcvZ,KAAKV,MAEnCgb,EAAgBd,GAChBe,EAAiBhB,IAwCfyB,GAAmB,WACrB,I3BvGyBC,E2BuGnBC,EAAkB1B,EAAa1V,KAAI,SAAC4U,EAAM3U,GAAP,MAAkB,CAAEtE,IAAKiZ,EAAKjS,UAC9C8S,EAAczV,KAAI,SAAC4U,EAAM3U,GAAP,MAAkB,CAAEtE,IAAKiZ,EAAKjS,UACvC0U,OAAOD,GAErCA,EAAgBjb,OAAS,GACzB+C,I3B5GqBiY,E2B4GWC,E3B3GxC,uCAAO,WAAMlY,GAAN,iBAAAI,EAAA,6DACHJ,EAAS,CAAEpD,KAAMhE,IADd,SAEesG,GAAMuB,KAAN,mBAA+B,CAC7CxC,QAAS,CACLga,SAJL,OAOe,MALZpY,EAFH,QAOKC,QACJE,EAASG,MACTH,EAAS,CAAEpD,KAAMhE,MAETmD,EAAU8D,EAAIU,KAAdxE,MACRiE,EAAS,CACLpD,KAAMhE,EACNqF,QAAS,CAAElC,YAdhB,2CAAP,wD2B4GasM,MAAK,SAAA+P,GACEA,IACApY,GAASG,MACTwX,IAAuB,OAKvCA,IAAuB,IAqCrBrX,GAAe6I,GAAmB7M,EAASH,YAEjD,OACI,kBAAC,GAAD,CAAQwG,SAAO,GACX,kBAACX,EAAA,EAAD,KACI,kBAACY,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAKC,GAAI,IACL,yBAAKhB,MAAO,CAAE4G,QAAS,OAAQC,eAAgB,kBAC3C,wCACA,yBAAKxG,UAAU,sBACX,2CACA,4BAAQM,QA9JjB,kBAAMkF,GAAQ,KA8JwB,kBAAC,KAAD,MAA7B,IAA0C,sCAC1C,4BAAQlF,QArEb,WACnBmV,KACAD,IAAuB,KAmEkC,kBAAC,KAAD,MAAjC,IAAgD,yCAChD,4BAAQlV,QA3Hb,WACnBmV,KACAH,GAAuB,KAyHkC,kBAAC,KAAD,MAAjC,IAAsD,2CAOtE,kBAAC7U,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAKC,GAAI,IACL,kBAAC,KAAD,CACIuK,MAxKC,SAAnBgL,EAAoBlc,GACtB,IADqC,EACjCI,EAAe,GADkB,eAEhBJ,GAFgB,IAErC,2BAAiC,CAAC,IAAzBG,EAAwB,QAC7BC,EAAaS,KACT,CACIuG,MAAOjH,EAASI,KAChB+G,MAAOnH,EAASG,IAChBI,SAAUP,EAASO,SAASI,OAAS,GAAKob,EAAiB/b,EAASO,aAP3C,8BAWrC,OAAON,EA6JoB8b,CAAiB/b,EAASH,YACjC4H,QAASA,EACTqT,SAAUA,EACVkB,QAAS,SAAAvU,GAAO,OAAIoT,EAAWpT,IAC/BwU,SAAU,SAAAnB,GAAQ,OAAIC,EAAYD,IAClCoB,MAAO,CACHC,MAAO,kBAAC,KAAD,MACPC,QAAS,kBAAC,KAAD,MACTC,UAAW,kBAAC,KAAD,MACXC,YAAa,kBAAC,KAAD,MACbC,WAAY,kBAAC,KAAD,YAMhC,kBAAC,GAAD,CACI1S,KAAMA,EACNE,YAAa,kBAAMsB,GAAQ,IAC3B7C,SA/MQ,WAEhB,IAAM7D,EAAO,IAAIgH,SAEjB,GAAqB,KAAjB0O,EAGA,OAFAzH,MAAM,kCACNvH,GAAQ,GAIZ1G,EAAKiH,OAAO,OAAQyO,GACpB1V,EAAKiH,OAAO,WAAY2O,GACxB5V,EAAKiH,OAAO,gBAAiB+O,GAC7BjX,G3B1CmB,SAACiB,GACxB,8CAAO,WAAMjB,GAAN,eAAAI,EAAA,6DACHJ,EAAS,CAAEpD,KAAMhE,IADd,kBAGmBsG,GAAMuB,KAAN,mBAA+BQ,GAHlD,OAIoB,OADbpB,EAHP,QAISC,OACJE,EAAS,CACLpD,KAAMhE,EACNqF,QAAS,CAAE3B,SAAUuD,EAAIU,KAAKjE,YAGlC0D,EAAS,CACLpD,KAAMhE,EACNqF,QAAS4B,EAAIU,KAAKxE,QAZ3B,gDAgBCgC,QAAQC,IAAI,KAAM4B,UAhBnB,yDAAP,sD2ByCakZ,CAAY7X,IACrB2V,EAAgB,IAChBE,EAAoB,IACpBnP,GAAQ,IAgMAnB,WAAY,mBACZmQ,aAAcA,EACdC,gBAAiBA,EACjBC,iBAAkBA,EAClBC,oBAAqBA,EACrBxW,aAAcA,GACdyW,oBAnKgB,SAAChS,GACzBmS,EAAiBnS,EAAEM,OAAOkD,MAAM,OAoK5B,kBAAC,GAAD,CACIpC,KAAMqR,EACNnR,YAAa,kBAAMoR,GAAuB,IAC1C3S,SAlIiB,WACzB,IAAM7D,EAAO,IAAIgH,SAEjBsO,EAAcsB,SAAQ,SAACnC,EAAM3U,GACzBE,EAAKiH,OAAO,MAAOwN,EAAKjS,OACxBxC,EAAKiH,OAAO,OAAQwN,EAAKhZ,MACzBuE,EAAKiH,OAAO,WAAYwN,EAAKrZ,SAAWqZ,EAAKrZ,SAAW,IACxD4E,EAAKiH,OAAO,OAAQwN,EAAK9Y,SAE7B4Z,EAAaqB,SAAQ,SAACnC,EAAM3U,GACxBE,EAAKiH,OAAO,MAAOwN,EAAKjS,OACxBxC,EAAKiH,OAAO,OAAQwN,EAAKhZ,MACzBuE,EAAKiH,OAAO,WAAYwN,EAAKrZ,SAAWqZ,EAAKrZ,SAAW,IACxD4E,EAAKiH,OAAO,OAAQwN,EAAK9Y,SAE7BoD,G3B9GwB,SAACiB,GAC7B,8CAAO,WAAMjB,GAAN,iBAAAI,EAAA,6DACHJ,EAAS,CAAEpD,KAAMhE,IADd,SAEesG,GAAMuB,KAAN,mBAA+BQ,GAF9C,OAGgB,OADbpB,EAFH,QAGKC,QACJE,EAAS,CAAEpD,KAAMhE,IACjBoH,EAASG,QAEDpE,EAAU8D,EAAIU,KAAdxE,MACRiE,EAAS,CACLpD,KAAMhE,EACNqF,QAAS,CAAElC,YAVhB,2CAAP,sD2B6Gagd,CAAiB9X,KAoHlBuF,WAAY,oBACZN,KAAK,KACLqQ,cAAeA,EACfC,aAAcA,EACdC,oBApJgB,SAAC3S,EAAKL,EAAO1C,EAAOnE,GAE5C,GADAmB,QAAQC,IAAIyF,GACA,WAAR7G,EAAmB,CACnB,IAAMoc,EAAsBxC,EAAa1V,KAAI,SAAC4U,EAAMqC,GAAP,OACzChX,GAASgX,EAAT,2BAAuBrC,GAAvB,mBAA8B5R,EAAML,IAAUiS,KAClD4B,EAAgB0B,QACb,GAAY,YAARpc,EAAoB,CAC3B,IAAMqc,EAAuB1C,EAAczV,KAAI,SAAC4U,EAAMqC,GAAP,OAC3ChX,GAASgX,EAAT,2BAAuBrC,GAAvB,mBAA8B5R,EAAML,IAAUiS,KAClD6B,EAAiB0B,KA4Ib3Y,aAAcA,KA1FlB,kBAAC,GAAD,CACIkG,WAAW,UACXL,KAAMuR,GACNrR,YAAa,kBAAMsR,IAAuB,IAC1ChR,QAAS,CACL,CACIpD,MAAO,KACPsD,MAAO,UACPpE,QAAS,WACLyM,MAAM,QAGd,CACI3L,MAAO,MACPsD,MAAO,SACPpE,QAASuV,MAMjB,wCACEzB,EAAczV,KAAI,SAAC4U,EAAM3U,GAAP,OAAiB,0BAAM+C,IAAK/C,GAAQ2U,EAAKhZ,SAC7D,uCACE8Z,EAAa1V,KAAI,SAAC4U,EAAM3U,GAAP,OAAiB,0BAAM+C,IAAK/C,GAAQ2U,EAAKhZ,aCvM7Dwc,GAjBU,SAAnBA,EAAoB/c,GAA8B,IAAD,EAAjByH,EAAiB,uDAAP,GAAO,eAE9BzH,GAF8B,IAEnD,2BAAiC,CAAC,IAAzBG,EAAwB,QAC7BsH,EAAQ5G,KAAK,CACTyG,MAAOnH,EAASG,IAChBC,KAAMJ,EAASI,KACfL,SAAUC,EAASD,SACnBO,KAAMN,EAASM,OAEfN,EAASO,SAASI,OAAS,GAC3Bic,EAAiB5c,EAASO,SAAU+G,IAVO,8BAcnD,OAAOA,GCiMIuV,GAjMC,SAAC/X,GAAW,IAAD,EAEemD,oBAAS,GAFxB,oBAEhB6U,EAFgB,KAEHC,EAFG,OAGG9U,mBAAS,IAHZ,oBAGhB+U,EAHgB,KAGTC,EAHS,KAIjBjd,EAAW+E,aAAY,SAAAxD,GAAK,OAAIA,EAAMvB,YAJrB,EAKaiI,mBAAS,IALtB,oBAKhBpI,EALgB,KAKJqd,EALI,OAMajV,mBAAS,IANtB,oBAMhBgD,EANgB,KAMJC,EANI,OAOCjD,mBAAS,IAPV,oBAOhBkV,EAPgB,KAOVC,EAPU,OAQCnV,mBAAS,IARV,oBAQhB3H,EARgB,KAQVsY,EARU,OASO3Q,mBAAS,IAThB,oBAShBoV,EATgB,KASPC,EATO,OAUSrV,mBAAS,IAVlB,oBAUhBrI,EAVgB,KAUN2d,EAVM,KAWjB7Z,EAAWsB,cACXnE,EAAOkE,aAAY,SAAAxD,GAAK,OAAIA,EAAMV,QAGxCuI,qBAAU,WACN8T,EAAcN,GAAiB5c,EAASH,eACzC,CAACG,IAEJoJ,qBAAU,WACN3H,QAAQC,IAAIb,GACRA,EAAKrB,UACLud,GAAe,GACfE,EAAS,IACT/R,EAAc,IACdkS,EAAQ,IACRG,EAAY,IACZD,EAAW,OAEhB,CAACzc,IAEJ,IAAM2c,EAAmB,SAAC/U,GACtB,IAAMzI,EAAWH,EAAW2b,MAAK,SAAAxb,GAAQ,OAAIA,EAASmH,OAASsB,EAAEM,OAAO5B,SACxE+D,EAAczC,EAAEM,OAAO5B,OACvByR,EAAQ5Y,EAASM,OAGfmd,EAAqB,SAAChV,GACxBhH,QAAQC,IAAI+G,GACZ6U,EAAW,GAAD,oBAAKD,GAAL,CAAc5U,EAAEM,OAAOkD,MAAM,OAGrCyR,EAAsB,SAACjV,GACzBhH,QAAQC,IAAI+G,GACZ8U,EAAY,GAAD,oBAAK3d,GAAL,CAAe6I,EAAEM,OAAOkD,MAAM,OAGvC0R,EAAiB,SAAClV,GAGpB,GAAa,KAAVuU,EAGC,OAFApK,MAAM,0BACNmK,GAAe,GAInB,IAAMpY,EAAO,IAAIgH,SACjBhH,EAAKiH,OAAO,QAASoR,GACrBrY,EAAKiH,OAAO,cAAeuR,GAC3BxY,EAAKiH,OAAO,WAAYX,GACxBtG,EAAKiH,OAAO,OAAQtL,GACpB+c,EAAQ9B,SAAQ,SAACqC,EAAQnZ,GACrBE,EAAKiH,OAAO,UAAWgS,MAE3Bhe,EAAS2b,SAAQ,SAAC1Z,EAAS4C,GACvBE,EAAKiH,OAAO,WAAY/J,MAG5B6B,EC/EkB,SAACiB,GACvB,8CAAO,WAAMjB,GAAN,eAAAI,EAAA,6DACHJ,EAAS,CAAEpD,KAAM5B,KADd,kBAGmBkE,GAAMuB,KAAK,eAAgBQ,GAH9C,OAImB,OADZpB,EAHP,QAIQC,OACHE,EAAS,CACLpD,KAAM5B,GACNiD,QAAS,CAAEd,KAAM0C,EAAIU,KAAKpD,QAG9B6C,EAAS,CACLpD,KAAM5B,GACNiD,QAAS,CAAElC,MAAO8D,EAAIU,KAAKxE,SAZpC,gDAgBCgC,QAAQC,IAAR,MAhBD,yDAAP,sDD8Eamc,CAAWlZ,KA4GxB,OACI,kBAAC,GAAD,CAAQ0B,SAAO,GAEPxF,EAAKrB,QACL,0DAEA,oCA3GJ,kBAAC,GAAD,CACIqK,KAAMiT,EACN5S,WAAY,kBACZH,YAAa,kBAAMgT,GAAe,IAClCvU,SAAUmV,GAEV,kBAACjY,EAAA,EAAD,KACI,kBAACY,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,KAaI,kBAAC,GAAD,CACIjG,KAAK,SACL6G,MAAO8D,EACP7D,SAAUoW,EACVlW,QAASzH,EACTwH,YAAa,sBAKzB,kBAACf,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,KACI,kBAAC,GAAD,CACIY,MAAO6V,EACP5V,SAAU,SAACqB,GAAD,OAAOwU,EAASxU,EAAEM,OAAO5B,QACnCE,YAAa,aACbxB,UAAU,OAKtB,kBAACS,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,KACI,kBAAC,GAAD,CACIY,MAAOgW,EACP/V,SAAU,SAACqB,GAAD,OAAO2U,EAAQ3U,EAAEM,OAAO5B,QAClCE,YAAa,YACbxB,UAAU,OAMdwX,EAAQ1c,OAAS,EACjB0c,EAAQ7Y,KAAI,SAACoZ,EAAQnZ,GAAT,OACR,kBAAC6B,GAAA,EAAD,CAAKkB,IAAK/C,GACN,kBAAC8B,GAAA,EAAD,KAAMqX,EAAOxd,UAEjB,KAEZ,kBAACkG,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,KACI,kBAAC,GAAD,CACIV,UAAU,eACVvF,KAAK,OACLF,KAAK,UACLgH,SAAUqW,MAMd7d,EAASe,OAAS,EAClBf,EAAS4E,KAAI,SAAC3C,EAAS4C,GAAV,OACT,kBAAC6B,GAAA,EAAD,CAAKkB,IAAK/C,GACN,kBAAC8B,GAAA,EAAD,KAAM1E,EAAQzB,UAElB,KAEZ,kBAACkG,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,KACI,kBAAC,GAAD,CACIV,UAAU,eACVvF,KAAK,OACLF,KAAK,WACLgH,SAAUsW,QAuBtB,4BAAQvX,QAAS,kBAAM4W,GAAe,KAAtC,kBE1HLe,OA/Cf,WAEE,IAAMpa,EAAWsB,cACX1D,EAAOyD,aAAY,SAAAxD,GAAK,OAAIA,EAAMD,QAsBxC,OAlBA8H,qBAAU,WACH9H,EAAKhC,cACRoE,EzBFF,uCAAO,WAAMA,GAAN,iBAAAI,EAAA,uDACG9E,EAAQyD,aAAaC,QAAQ,WAEzBzD,EAAO2J,KAAKmV,MAAMtb,aAAaC,QAAQ,SAC7CgB,EAAS,CACLpD,KAAMlE,EACNuF,QAAS,CACL3C,QAAOC,WAIfyE,EAAS,CACLpD,KAAMlE,EACNuF,QAAS,CAAElC,MAAO,qBAbvB,2CAAP,uDyBIG6B,EAAKhC,cACNoE,EC7BJ,uCAAO,WAAOA,GAAP,mCAAAI,EAAA,sEACalB,GAAMuB,KAAN,gBADb,OAEc,OADbZ,EADD,QAEGC,SAAiB,EAC2FD,EAAIU,KAA9GpE,EADc,EACdA,WAAYD,EADE,EACFA,SAAUgB,EADR,EACQA,OAAOE,EADf,EACeA,QAAQkd,EADvB,EACuBA,iBAAmB9c,EAD1C,EAC0CA,QAAQ+c,EADlD,EACkDA,iBAAiB9c,EADnE,EACmEA,MAAM+c,EADzE,EACyEA,eAC/Fxa,EAAS,CACPpD,KAAMhE,EACNqF,QAAS,CAAE9B,gBAEb6D,EAAS,CACPpD,KAAM/D,EACNoF,QAAS,CAAE/B,cAEb8D,EAAS,CACPpD,KAAM3B,GACNgD,QAAS,CAAEf,YAEb8C,EAAS,CACPpD,KAAM9D,EACNmF,QAAS,CAAEb,aAEb4C,EAAS,CACPpD,KAAM9D,EACNmF,QAAS,CAAEqc,sBAEbta,EAAS,CACPpD,KAAM5D,GAAgBE,wBACtB+E,QAAS,CAAET,aAEbwC,EAAS,CACPpD,KAAM5D,GAAgBK,kCACtB4E,QAAS,CAAEsc,sBAGfva,EAAS,CACPpD,KAAM5C,GAAcE,sBACpB+D,QAAS,CAAER,WAEbuC,EAAS,CACPpD,KAAM5C,GAAcK,gCACpB4D,QAAS,CAAEuc,qBAKbzc,QAAQC,IAAI6B,GA5CP,2CAAP,yDDwCG,CAACjC,EAAKhC,eAGP,yBAAKuG,UAAU,OACb,kBAAC,IAAD,KACE,kBAAC,GAAD,CAAcsY,KAAK,IAAI1X,OAAK,EAAC+C,UAAW5C,KACxC,kBAAC,GAAD,CAAcuX,KAAK,QAAQ3U,UAAWqT,KACtC,kBAAC,GAAD,CAAcsB,KAAK,YAAY3U,UAAWkR,KAC1C,kBAAC,GAAD,CAAcyD,KAAK,YAAY3U,UAAWiB,KAC1C,kBAAC,GAAD,CAAc0T,KAAK,SAAS3U,UAAWoF,KACvC,kBAAC,GAAD,CAAcuP,KAAK,WAAW3U,UAAWoL,KACzC,kBAAC,GAAD,CAAcuJ,KAAK,sBAAsB3U,UAAW4U,KACpD,kBAAC,GAAD,CAAcD,KAAK,uCAAuC3U,UAAW0M,KACrE,kBAAC,GAAD,CAAciI,KAAK,UAAU3U,UAAWmP,KAIxC,kBAAC,IAAD,CAAOwF,KAAK,UAAU3U,UAAWxB,KACjC,kBAAC,IAAD,CAAOmW,KAAK,UAAU3U,UAAWP,QE1DrBoV,QACW,cAA7B7b,OAAOyQ,SAASqL,UAEe,UAA7B9b,OAAOyQ,SAASqL,UAEhB9b,OAAOyQ,SAASqL,SAAS9G,MACvB,2DCTNhV,OAAOL,MAAQA,GAEfoc,IAASC,OACP,kBAAC,IAAD,CAAUrc,MAAOA,IACf,kBAAC,IAAD,KACE,kBAAC,IAAMsc,WAAP,KACE,kBAAC,GAAD,SAINC,SAASC,eAAe,SDgHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB/S,MAAK,SAAAgT,GACJA,EAAaC,gBAEdC,OAAM,SAAAxf,GACLgC,QAAQhC,MAAMA,EAAMC,c","file":"static/js/main.e1e5f1f0.chunk.js","sourcesContent":["export const authConstants = {\n  LOGIN_REQUEST: \"LOGIN_REQUEST\",\n  LOGIN_FAILURE: \"LOGIN_FAILURE\",\n  LOGIN_SUCCESS: \"LOGIN_SUCCESS\",\n  LOGOUT_REQUEST: \"LOGOUT_REQUEST\",\n  LOGOUT_SUCCESS: \"LOGOUT_SUCCESS\",\n  LOGOUT_FAILURE: \"LOGOUT_FAILURE\",\n\n  UPLOAD_REQUEST: \"UPLOAD_REQUEST\",\n  UPLOAD_FAILURE: \"UPLOAD_FAILURE\",\n  UPLOAD_SUCCESS: \"UPLOAD_SUCCESS\",\n};\n\nexport const userContants = {\n  USER_REGISTER_REQUEST: \"USER_REGISTER_REQUEST\",\n  USER_REGISTER_SUCCESS: \"USER_REGISTER_SUCCESS\",\n  USER_REGISTER_FAILURE: \"USER_REGISTER_FAILURE\",\n};\n\nexport const categoryConstansts = {\n  GET_ALL_CATEGORIES_REQUEST: \"GET_ALL_CATEGORIES_REQUEST\",\n  GET_ALL_CATEGORIES_SUCCESS: \"GET_ALL_CATEGORIES_SUCCESS\",\n  GET_ALL_CATEGORIES_FAILURE: \"GET_ALL_CATEGORIES_FAILURE\",\n  ADD_NEW_CATEGORY_REQUEST: \"ADD_NEW_CATEGORY_REQUEST\",\n  ADD_NEW_CATEGORY_SUCCESS: \"ADD_NEW_CATEGORY_SUCCESS\",\n  ADD_NEW_CATEGORY_FAILURE: \"ADD_NEW_CATEGORY_FAILURE\",\n  UPDATE_CATEGORIES_REQUEST: \"UPDATE_CATEGORIES_REQUEST\",\n  UPDATE_CATEGORIES_SUCCESS: \"UPDATE_CATEGORIES_SUCCESS\",\n  UPDATE_CATEGORIES_FAILURE: \"UPDATE_CATEGORIES_FAILURE\",\n  DELETE_CATEGORIES_REQUEST: \"DELETE_CATEGORIES_REQUEST\",\n  DELETE_CATEGORIES_SUCCESS: \"DELETE_CATEGORIES_SUCCESS\",\n  DELETE_CATEGORIES_FAILURE: \"DELETE_CATEGORIES_FAILURE\",\n};\n\nexport const productConstants = {\n  GET_ALL_PRODUCTS_REQUEST: \"GET_ALL_PRODUCTS_REQUEST\",\n  GET_ALL_PRODUCTS_SUCCESS: \"GET_ALL_PRODUCTS_SUCCESS\",\n  GET_ALL_PRODUCTS_FAILURE: \"GET_ALL_PRODUCTS_FAILURE\",\n\n  DELETE_PRODUCT_BY_ID_REQUEST: \"DELETE_PRODUCT_BY_ID_REQUEST\",\n  DELETE_PRODUCT_BY_ID_SUCCESS: \"DELETE_PRODUCT_BY_ID_SUCCESS\",\n  DELETE_PRODUCT_BY_ID_FAILURE: \"DELETE_PRODUCT_BY_ID_FAILURE\",\n\n  ADD_PRODUCT_REQUEST: \"ADD_PRODUCT_REQUEST\",\n  ADD_PRODUCT_SUCCESS: \"ADD_PRODUCT_REQUEST\",\n  ADD_PRODUCT_FAILURE: \"ADD_PRODUCT_FAILURE\",\n};\n\nexport const courseConstants = {\n  GET_ALL_COURSES_REQUEST: \"GET_ALL_COURSES_REQUEST\",\n  GET_ALL_COURSES_SUCCESS: \"GET_ALL_COURSES_SUCCESS\",\n  GET_ALL_COURSES_FAILURE: \"GET_ALL_COURSES_FAILURE\",\n\n  GET_ALL_COURSES_PUBLISHED_REQUEST: \"GET_ALL_COURSES_PUBLISHED_REQUEST\",\n  GET_ALL_COURSES_PUBLISHED_SUCCESS: \"GET_ALL_COURSES_PUBLISHED_SUCCESS\",\n  GET_ALL_COURSES_PUBLISHED_FAILURE: \"GET_ALL_COURSES_PUBLISHED_FAILURE\",\n\n  DELETE_COURSE_BY_ID_REQUEST: \"DELETE_COURSE_BY_ID_REQUEST\",\n  DELETE_COURSE_BY_ID_SUCCESS: \"DELETE_COURSE_BY_ID_SUCCESS\",\n  DELETE_COURSE_BY_ID_FAILURE: \"DELETE_COURSE_BY_ID_FAILURE\",\n\n  ADD_COURSE_REQUEST: \"ADD_COURSE_REQUEST\",\n  ADD_COURSE_SUCCESS: \"ADD_COURSE_REQUEST\",\n  ADD_COURSE_FAILURE: \"ADD_COURSE_FAILURE\",\n\n  UPDATE_COURSES_REQUEST: \"UPDATE_COURSES_REQUEST\",\n  UPDATE_COURSES_SUCCESS: \"UPDATE_COURSES_SUCCESS\",\n  UPDATE_COURSES_FAILURE: \"UPDATE_COURSES_FAILURE\",\n};\n\nexport const curriculumConstants = {\n  GET_ALL_CURRICULUMS_REQUEST: \"GET_ALL_CURRICULUMS_REQUEST\",\n  GET_ALL_CURRICULUMS_SUCCESS: \"GET_ALL_CURRICULUMS_SUCCESS\",\n  GET_ALL_CURRICULUMS_FAILURE: \"GET_ALL_CURRICULUMS_FAILURE\",\n\n  GET_ONE_CURRICULUMS_REQUEST: \"GET_ONE_CURRICULUMS_REQUEST\",\n  GET_ONE_CURRICULUMS_SUCCESS: \"GET_ONE_CURRICULUMS_SUCCESS\",\n  GET_ONE_CURRICULUMS_FAILURE: \"GET_ONE_CURRICULUMS_FAILURE\",\n\n  GET_ALL_CURRICULUMS_PUBLISHED_REQUEST: \"GET_ALL_CURRICULUMS_PUBLISHED_REQUEST\",\n  GET_ALL_CURRICULUMS_PUBLISHED_SUCCESS: \"GET_ALL_CURRICULUMS_PUBLISHED_SUCCESS\",\n  GET_ALL_CURRICULUMS_PUBLISHED_FAILURE: \"GET_ALL_CURRICULUMS_PUBLISHED_FAILURE\",\n\n  DELETE_CURRICULUM_BY_ID_REQUEST: \"DELETE_CURRICULUM_BY_ID_REQUEST\",\n  DELETE_CURRICULUM_BY_ID_SUCCESS: \"DELETE_CURRICULUM_BY_ID_SUCCESS\",\n  DELETE_CURRICULUM_BY_ID_FAILURE: \"DELETE_CURRICULUM_BY_ID_FAILURE\",\n\n  ADD_CURRICULUM_REQUEST: \"ADD_CURRICULUM_REQUEST\",\n  ADD_CURRICULUM_SUCCESS: \"ADD_CURRICULUM_REQUEST\",\n  ADD_CURRICULUM_FAILURE: \"ADD_CURRICULUM_FAILURE\",\n\n  UPDATE_CURRICULUMS_REQUEST: \"UPDATE_CURRICULUMS_REQUEST\",\n  UPDATE_CURRICULUMS_SUCCESS: \"UPDATE_CURRICULUMS_SUCCESS\",\n  UPDATE_CURRICULUMS_FAILURE: \"UPDATE_CURRICULUMS_FAILURE\",\n};\n\nexport const authorConstants = {\n  GET_ALL_AUTHORS_REQUEST: \"GET_ALL_AUTHORS_REQUEST\",\n  GET_ALL_AUTHORS_SUCCESS: \"GET_ALL_AUTHORS_SUCCESS\",\n  GET_ALL_AUTHORS_FAILURE: \"GET_ALL_AUTHORS_FAILURE\",\n\n  GET_ALL_AUTHORS_PUBLISHED_REQUEST: \"GET_ALL_AUTHORS_PUBLISHED_REQUEST\",\n  GET_ALL_AUTHORS_PUBLISHED_SUCCESS: \"GET_ALL_AUTHORS_PUBLISHED_SUCCESS\",\n  GET_ALL_AUTHORS_PUBLISHED_FAILURE: \"GET_ALL_AUTHORS_PUBLISHED_FAILURE\",\n\n  DELETE_AUTHOR_BY_ID_REQUEST: \"DELETE_AUTHOR_BY_ID_REQUEST\",\n  DELETE_AUTHOR_BY_ID_SUCCESS: \"DELETE_AUTHOR_BY_ID_SUCCESS\",\n  DELETE_AUTHOR_BY_ID_FAILURE: \"DELETE_AUTHOR_BY_ID_FAILURE\",\n\n  ADD_AUTHOR_REQUEST: \"ADD_AUTHOR_REQUEST\",\n  ADD_AUTHOR_SUCCESS: \"ADD_AUTHOR_REQUEST\",\n  ADD_AUTHOR_FAILURE: \"ADD_AUTHOR_FAILURE\",\n\n  UPDATE_AUTHOR_REQUEST: \"UPDATE_AUTHOR_REQUEST\",\n  UPDATE_AUTHOR_SUCCESS: \"UPDATE_AUTHOR_SUCCESS\",\n  UPDATE_AUTHOR_FAILURE: \"UPDATE_AUTHOR_FAILURE\",\n};\n\n\nexport const blogConstants = {\n  GET_ALL_BLOGS_REQUEST: \"GET_ALL_BLOGS_REQUEST\",\n  GET_ALL_BLOGS_SUCCESS: \"GET_ALL_BLOGS_SUCCESS\",\n  GET_ALL_BLOGS_FAILURE: \"GET_ALL_BLOGS_FAILURE\",\n\n  GET_ALL_BLOGS_PUBLISHED_REQUEST: \"GET_ALL_BLOGS_PUBLISHED_REQUEST\",\n  GET_ALL_BLOGS_PUBLISHED_SUCCESS: \"GET_ALL_BLOGS_PUBLISHED_SUCCESS\",\n  GET_ALL_BLOGS_PUBLISHED_FAILURE: \"GET_ALL_BLOGS_PUBLISHED_FAILURE\",\n\n  DELETE_BLOG_BY_ID_REQUEST: \"DELETE_BLOG_BY_ID_REQUEST\",\n  DELETE_BLOG_BY_ID_SUCCESS: \"DELETE_BLOG_BY_ID_SUCCESS\",\n  DELETE_BLOG_BY_ID_FAILURE: \"DELETE_BLOG_BY_ID_FAILURE\",\n\n  ADD_BLOG_REQUEST: \"ADD_BLOG_REQUEST\",\n  ADD_BLOG_SUCCESS: \"ADD_BLOG_REQUEST\",\n  ADD_BLOG_FAILURE: \"ADD_BLOG_FAILURE\",\n\n  UPDATE_BLOGS_REQUEST: \"UPDATE_BLOGS_REQUEST\",\n  UPDATE_BLOGS_SUCCESS: \"UPDATE_BLOGS_SUCCESS\",\n  UPDATE_BLOGS_FAILURE: \"UPDATE_BLOGS_FAILURE\",\n};\n\nexport const initialDataConstants = {\n  GET_ALL_INITIAL_DATA_REQUEST: \"GET_ALL_INITIAL_DATA_REQUEST\",\n  GET_ALL_INITIAL_DATA_SUCCESS: \"GET_ALL_INITIAL_DATA_SUCCESS\",\n  GET_ALL_INITIAL_DATA_FAILURE: \"GET_ALL_INITIAL_DATA_FAILURE\",\n};\n\nexport const pageConstants = {\n  CREATE_PAGE_REQUEST: \"CREATE_PAGE_REQUEST\",\n  CREATE_PAGE_SUCCESS: \"CREATE_PAGE_SUCCESS\",\n  CREATE_PAGE_FAILURE: \"CREATE_PAGE_FAILURE\",\n};\n\nexport const orderConstants = {\n  GET_CUSTOMER_ORDER_REQUEST: \"GET_CUSTOMER_ORDER_REQUEST\",\n  GET_CUSTOMER_ORDER_SUCCESS: \"GET_CUSTOMER_ORDER_SUCCESS\",\n  GET_CUSTOMER_ORDER_FAILURE: \"GET_CUSTOMER_ORDER_FAILURE\",\n\n  UPDATE_CUSTOMER_ORDER_REQUEST: \"UPDATE_CUSTOMER_ORDER_REQUEST\",\n  UPDATE_CUSTOMER_ORDER_SUCCESS: \"UPDATE_CUSTOMER_ORDER_SUCCESS\",\n  UPDATE_CUSTOMER_ORDER_FAILURE: \"UPDATE_CUSTOMER_ORDER_FAILURE\",\n};\n","//const baseUrl = process.env.API || \"https://flipkart-rest-server.herokuapp.com\";\nconst baseUrl = \"http://localhost:2000\";\n\nexport const api = `${baseUrl}/api`;\n\nexport const generatePublicUrl = (fileName) => {\n  return `${baseUrl}/public/${fileName}`;\n};\n","import { authConstants } from \"../actions/constants\";\n\nconst initState = {\n    token: null,\n    user: {\n        firstName: '',\n        lastName: '',\n        email: '',\n        picture: ''\n    },\n    authenticate: false,\n    authenticating: false,\n    loading: false,\n    error: null,\n    message: ''\n};\n\nexport default (state = initState, action) => {\n\n    console.log(action);\n\n    switch (action.type) {\n        case authConstants.LOGIN_REQUEST:\n            state = {\n                ...state,\n                authenticating: true\n            }\n            break;\n        case authConstants.LOGIN_SUCCESS:\n            state = {\n                ...state,\n                user: action.payload.user,\n                token: action.payload.token,\n                authenticate: true,\n                authenticating: false\n            }\n            break;\n        case authConstants.LOGOUT_REQUEST:\n            state = {\n                ...state,\n                loading: true\n            }\n            break;\n        case authConstants.LOGOUT_SUCCESS:\n            state = {\n                ...initState\n            }\n            break;\n        case authConstants.LOGOUT_FAILURE:\n            state = {\n                ...state,\n                error: action.payload.error,\n                loading: false\n            }\n            break;\n\n    }\n\n\n    return state;\n}","import { userContants } from \"../actions/constants\"\n\nconst initState = {\n    error: null,\n    message: '',\n    loading: false\n}\n\nexport default (state = initState, action) => {\n    switch(action.type){\n        case userContants.USER_REGISTER_REQUEST:\n            state = {\n                ...state,\n                loading: true\n            }\n            break;\n        case userContants.USER_REGISTER_SUCCESS:\n            state = {\n                ...state,\n                loading: false,\n                message: action.payload.message\n            }\n            break;\n        case userContants.USER_REGISTER_FAILURE:\n            state = {\n                ...state,\n                loading: false,\n                error: action.payload.error\n            }\n            break;\n    }\n\n    return state;\n}","import { productConstants } from \"../actions/constants\";\n\nconst initialState = {\n    products: []\n};\n\nexport default (state = initialState, action) => {\n    switch(action.type){\n        case productConstants.GET_ALL_PRODUCTS_SUCCESS:\n            state = {\n                ...state,\n                products: action.payload.products\n            }\n            break;\n    }\n\n    return state;\n}","import { categoryConstansts } from \"../actions/constants\";\n\nconst initState = {\n    categories: [],\n    loading: false,\n    error: null\n};\n\n\nconst buildNewCategories = (parentId, categories, category) => {\n    let myCategories = [];\n\n    if(parentId == undefined){\n        return [\n            ...categories,\n            {\n                _id: category._id,\n                name: category.name,\n                slug: category.slug,\n                type: category.type,\n                children: []\n            }\n        ];\n    }\n    \n    for(let cat of categories){\n\n        if(cat._id == parentId){\n            const newCategory = {\n                _id: category._id,\n                name: category.name,\n                slug: category.slug,\n                parentId: category.parentId,\n                type: category.type,\n                children: []\n            };\n            myCategories.push({\n                ...cat,\n                children: cat.children.length > 0 ? [...cat.children, newCategory] : [newCategory]\n            })\n        }else{\n            myCategories.push({\n                ...cat,\n                children: cat.children ? buildNewCategories(parentId, cat.children, category) : []\n            });\n        }\n\n        \n    }\n\n\n    return myCategories;\n}\n\n\nexport default (state = initState, action) => {\n    switch(action.type){\n        case categoryConstansts.GET_ALL_CATEGORIES_SUCCESS:\n            state = {\n                ...state,\n                categories: action.payload.categories\n            }\n            break;\n        case categoryConstansts.ADD_NEW_CATEGORY_REQUEST:\n            state = {\n                ...state,\n                loading: true\n            }\n            break;\n        case categoryConstansts.ADD_NEW_CATEGORY_SUCCESS:\n            const category = action.payload.category;\n            const updatedCategories = buildNewCategories(category.parentId, state.categories, category);\n            console.log('updated categoires', updatedCategories);\n            \n            state = {\n                ...state,\n                categories: updatedCategories,\n                loading: false,\n            }\n            break;\n        case categoryConstansts.ADD_NEW_CATEGORY_FAILURE:\n            state = {\n                ...initState,\n                loading: false,\n                error: action.payload.error\n            }\n            break;\n        case categoryConstansts.UPDATE_CATEGORIES_REQUEST:\n            state = {\n                ...state,\n                loading: true\n            }\n            break;\n        case categoryConstansts.UPDATE_CATEGORIES_SUCCESS:\n            state = {\n                ...state,\n                loading: false\n            }\n            break;\n        case categoryConstansts.UPDATE_CATEGORIES_FAILURE:\n            state = {\n                ...state,\n                error: action.payload.error,\n                loading: false\n            }\n            break;\n        case categoryConstansts.DELETE_CATEGORIES_REQUEST:\n            state = {\n                ...state,\n                loading: true\n            }\n            break;\n        case categoryConstansts.DELETE_CATEGORIES_SUCCESS:\n            state = {\n                ...state,\n                loading: false\n            }\n            break;\n        case categoryConstansts.DELETE_CATEGORIES_FAILURE:\n            state = {\n                ...state,\n                loading: false,\n                error: action.payload.error\n            }\n            break;\n    }\n\n    return state;\n}","import { orderConstants } from \"../actions/constants\";\n\nconst initState = {\n  orders: [],\n};\n\nexport default (state = initState, action) => {\n  switch (action.type) {\n    case orderConstants.GET_CUSTOMER_ORDER_SUCCESS:\n      state = {\n        ...state,\n        orders: action.payload.orders,\n      };\n      break;\n  }\n\n  return state;\n};\n","import { pageConstants } from \"../actions/constants\"\n\nconst initState = {\n    error: null,\n    loading: false,\n    page: {}\n}\n\nexport default (state = initState, action) => {\n    switch (action.type) {\n        case pageConstants.CREATE_PAGE_REQUEST:\n            state = {\n                ...state,\n                loading: true\n            }\n            break;\n        case pageConstants.CREATE_PAGE_SUCCESS:\n            state = {\n                ...state,\n                loading: false\n            }\n            break;\n        case pageConstants.CREATE_PAGE_FAILURE:\n            state = {\n                ...state,\n                loading: false,\n                error: action.payload.error\n            }\n            break;\n    }\n\n    return state;\n}","import { courseConstants } from \"../actions/constants\";\r\n\r\nconst initialState = {\r\n    courses: []\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch(action.type){\r\n        case courseConstants.GET_ALL_COURSES_SUCCESS:\r\n            state = {\r\n                ...state,\r\n                courses: action.payload.courses            }\r\n            break;\r\n    }\r\n\r\n    return state;\r\n}","import { curriculumConstants } from \"../actions/constants\";\r\n\r\nconst initialState = {\r\n    curriculums: [],\r\n    lessionResources: [],\r\n    curriculumList:[]\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch(action.type){\r\n        case curriculumConstants.GET_ALL_CURRICULUMS_SUCCESS:\r\n            state = {\r\n                ...state,\r\n                curriculums: action.payload.curriculums            }\r\n            break;\r\n            case curriculumConstants.GET_ONE_CURRICULUMS_SUCCESS:\r\n            state = {\r\n                ...state,\r\n                curriculumList: action.payload.curriculumList  ,\r\n                lessionResources:action.payload.lessionResources\r\n            }\r\n            break;\r\n        // default:\r\n        //     state={\r\n        //         ...state\r\n        //     }    \r\n    }\r\n\r\n    return state;\r\n}","import { authorConstants } from \"../actions/constants\";\r\n\r\nconst initialState = {\r\n    authors: []\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch(action.type){\r\n        case authorConstants.GET_ALL_AUTHORS_SUCCESS:\r\n            state = {\r\n                ...state,\r\n                authors: action.payload.authors\r\n            }\r\n            break;\r\n    }\r\n\r\n    return state;\r\n}","import { blogConstants } from \"../actions/constants\";\r\n\r\nconst initialState = {\r\n    blogs: []\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch(action.type){\r\n        case blogConstants.GET_ALL_BLOGS_SUCCESS:\r\n            state = {\r\n                ...state,\r\n                blogs: action.payload.blogs\r\n            }\r\n            break;\r\n    }\r\n\r\n    return state;\r\n}","import authReducer from './auth.reducers';\nimport userReducer from './user.reducer';\nimport productReducer from './product.reducer';\nimport categoryReducer from './category.reducer';\nimport orderReducer from './order.reducer';\nimport pageReducer from './page.reducer';\nimport courseReducer from './course.reducer';\nimport curriculumReducer from './curriculum.reducer';\nimport authorReducer from './author.reducer';\nimport blogReducer from './blog.reducer';\nimport { combineReducers } from 'redux';\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    user: userReducer,\n    category: categoryReducer,\n    product: productReducer,\n    order: orderReducer,\n    page: pageReducer,\n    course: courseReducer,\n    curriculum:curriculumReducer,\n    author: authorReducer,\n    blog: blogReducer\n});\n\nexport default rootReducer;","import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from '../reducers';\nimport thunk from \"redux-thunk\";\n\nconst store = createStore(rootReducer, composeWithDevTools(\n    applyMiddleware(thunk)\n));\n\nexport default store;","import axios from 'axios';\nimport { api } from '../urlConfig';\nimport store from '../store';\nimport { authConstants } from '../actions/constants';\n\nconst token = window.localStorage.getItem('token');\n\nconst axiosIntance = axios.create({\n    baseURL: api,\n    headers: {\n        'Authorization': token ? `Bearer ${token}` : ''\n    }\n});\n\naxiosIntance.interceptors.request.use((req) => {\n    const { auth } = store.getState();\n    if(auth.token){\n        req.headers.Authorization = `Bearer ${auth.token}`;\n    }\n    return req;\n})\n\naxiosIntance.interceptors.response.use((res) => {\n    return res;\n}, (error) => {\n    console.log(error.response);\n    const status = error.response ? error.response.status : 500;\n    if(status && status === 500){\n        localStorage.clear();\n        store.dispatch({ type: authConstants.LOGOUT_SUCCESS });\n    }\n    return Promise.reject(error);\n})\n\nexport default axiosIntance;","import axios from \"../helpers/axios\";\nimport { categoryConstansts } from \"./constants\";\n\nconst getAllCategory = () => {\n    return async dispatch => {\n\n        dispatch({ type: categoryConstansts.GET_ALL_CATEGORIES_REQUEST });\n        const res = await axios.get(`category/getcategory`);\n        console.log(res);\n        if (res.status === 200) {\n\n            const { categoryList } = res.data;\n\n            dispatch({\n                type: categoryConstansts.GET_ALL_CATEGORIES_SUCCESS,\n                payload: { categories: categoryList }\n            });\n        } else {\n            dispatch({\n                type: categoryConstansts.GET_ALL_CATEGORIES_FAILURE,\n                payload: { error: res.data.error }\n            });\n        }\n\n\n    }\n}\n\nexport const addCategory = (form) => {\n    return async dispatch => {\n        dispatch({ type: categoryConstansts.ADD_NEW_CATEGORY_REQUEST });\n        try {\n            const res = await axios.post(`/category/create`, form);\n            if (res.status === 201) {\n                dispatch({\n                    type: categoryConstansts.ADD_NEW_CATEGORY_SUCCESS,\n                    payload: { category: res.data.category }\n                });\n            } else {\n                dispatch({\n                    type: categoryConstansts.ADD_NEW_CATEGORY_FAILURE,\n                    payload: res.data.error\n                });\n            }\n        } catch (error) {   \n            console.log(error.response);\n        }\n\n    }\n}\n\nexport const updateCategories = (form) => {\n    return async dispatch => {\n        dispatch({ type: categoryConstansts.UPDATE_CATEGORIES_REQUEST });\n        const res = await axios.post(`/category/update`, form);\n        if (res.status === 201) {\n            dispatch({ type: categoryConstansts.UPDATE_CATEGORIES_SUCCESS });\n            dispatch(getAllCategory());\n        } else {\n            const { error } = res.data;\n            dispatch({\n                type: categoryConstansts.UPDATE_CATEGORIES_FAILURE,\n                payload: { error }\n            });\n        }\n    }\n}\n\nexport const deleteCategories = (ids) => {\n    return async dispatch => {\n        dispatch({ type: categoryConstansts.DELETE_CATEGORIES_REQUEST });\n        const res = await axios.post(`/category/delete`, {\n            payload: {\n                ids\n            }\n        });\n        if (res.status == 201) {\n            dispatch(getAllCategory());\n            dispatch({ type: categoryConstansts.DELETE_CATEGORIES_SUCCESS });\n        } else {\n            const { error } = res.data;\n            dispatch({\n                type: categoryConstansts.DELETE_CATEGORIES_FAILURE,\n                payload: { error }\n            });\n        }\n    }\n}\n\nexport {\n    getAllCategory\n}","import axios from \"../helpers/axios\";\nimport { productConstants } from \"./constants\";\n\n// new action\nconst getProducts = () => {\n  return async (dispatch) => {\n    try {\n      dispatch({ type: productConstants.GET_ALL_PRODUCTS_REQUEST });\n      const res = await axios.post(`product/getProducts`);\n      if (res.status === 200) {\n        const { products } = res.data;\n        dispatch({\n          type: productConstants.GET_ALL_PRODUCTS_SUCCESS,\n          payload: { products },\n        });\n      } else {\n        dispatch({ type: productConstants.GET_ALL_PRODUCTS_FAILURE });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\n// modified actrion\nexport const addProduct = (form) => {\n  return async (dispatch) => {\n    try {\n      dispatch({ type: productConstants.ADD_PRODUCT_REQUEST });\n      const res = await axios.post(`product/create`, form);\n      if (res.status === 201) {\n        dispatch({ type: productConstants.ADD_PRODUCT_SUCCESS });\n        dispatch(getProducts());\n      } else {\n        dispatch({ type: productConstants.ADD_PRODUCT_FAILURE });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\n// new action\nexport const deleteProductById = (payload) => {\n  return async (dispatch) => {\n    try {\n      const res = await axios.delete(`product/deleteProductById`, {\n        data: { payload },\n      });\n      dispatch({ type: productConstants.DELETE_PRODUCT_BY_ID_REQUEST });\n      if (res.status === 202) {\n        dispatch({ type: productConstants.DELETE_PRODUCT_BY_ID_SUCCESS });\n        dispatch(getProducts());\n      } else {\n        const { error } = res.data;\n        dispatch({\n          type: productConstants.DELETE_PRODUCT_BY_ID_FAILURE,\n          payload: {\n            error,\n          },\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n","import axios from \"../helpers/axios\";\r\nimport { courseConstants } from \"./constants\";\r\n\r\n// new action\r\nconst findAllCourses = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch({ type: courseConstants.GET_ALL_COURSES_REQUEST });\r\n      const res = await axios.get(`course/findAll`);\r\n      if (res.status === 200) {\r\n        const { courses } = res.data;\r\n        dispatch({\r\n          type: courseConstants.GET_ALL_COURSES_SUCCESS,\r\n          payload: { courses },\r\n        });\r\n      } else {\r\n        dispatch({ type: courseConstants.GET_ALL_COURSES_FAILURE });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n\r\n// modified actrion\r\nexport const addCourse = (form) => {\r\n  return async (dispatch) => {\r\n    console.log(form);\r\n    try {\r\n      dispatch({ type: courseConstants.ADD_COURSE_REQUEST });\r\n      const res = await axios.post(`course/create`, form);\r\n      if (res.status === 201) {\r\n        dispatch({ type: courseConstants.ADD_COURSE_SUCCESS });\r\n        dispatch(findAllCourses());\r\n      } else {\r\n        dispatch({ type: courseConstants.ADD_COURSE_FAILURE });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const UploadCourse = (form) => {\r\n  return async (dispatch) => {\r\n    console.log(form);\r\n    try {\r\n      dispatch({ type: courseConstants.ADD_COURSE_REQUEST });\r\n      const res = await axios.post(`course/upload`, form);\r\n      if (res.status === 201) {\r\n        const { data } = res;\r\n        const filename = data.filename;\r\n       localStorage.setItem(\"filename\",filename) ;\r\n        console.log(res);\r\n       \r\n       \r\n        \r\n      } else {\r\n        dispatch({ type: courseConstants.ADD_COURSE_FAILURE });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const updateCourses= (form) => {\r\n  return async dispatch => {\r\n      dispatch({ type: courseConstants.UPDATE_COURSES_REQUEST });\r\n      const res = await axios.post(`/course/update`, form);\r\n      if (res.status === 201) {\r\n          dispatch({ type: courseConstants.UPDATE_COURSES_SUCCESS });\r\n          dispatch(findAllCourses());\r\n      } else {\r\n          const { error } = res.data;\r\n          dispatch({\r\n              type: courseConstants.UPDATE_COURSES_FAILURE,\r\n              payload: { error }\r\n          });\r\n      }\r\n  }\r\n}\r\n\r\n// new action\r\nexport const deleteCourseById = (payload) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const res = await axios.delete(`course/deleteCourseById`, {\r\n        data: { payload },\r\n      });\r\n      dispatch({ type: courseConstants.DELETE_COURSE_BY_ID_REQUEST });\r\n      if (res.status === 202) {\r\n        dispatch({ type: courseConstants.DELETE_COURSE_BY_ID_SUCCESS });\r\n        dispatch(findAllCourses());\r\n      } else {\r\n        const { error } = res.data;\r\n        dispatch({\r\n          type: courseConstants.DELETE_COURSE_BY_ID_FAILURE,\r\n          payload: {\r\n            error,\r\n          },\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n\r\n\r\nexport{\r\n  findAllCourses\r\n}","import axios from \"../helpers/axios\";\r\nimport { curriculumConstants } from \"./constants\";\r\n\r\n// new action\r\nconst findAllCurriculums = (course_id) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch({ type: curriculumConstants.GET_ALL_CURRICULUMS_REQUEST });\r\n      const res = await axios.get(`curriculum/findAll?course_id=${course_id}`);\r\n      if (res.status === 200) {\r\n        console.log(res.data);\r\n        const { curriculums } = res.data;\r\n        dispatch({\r\n          type: curriculumConstants.GET_ALL_CURRICULUMS_SUCCESS,\r\n          payload: { curriculums },\r\n        });\r\n      } else {\r\n        dispatch({ type: curriculumConstants.GET_ALL_CURRICULUMS_FAILURE });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const findOneCurriculums = (_id) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch({ type: curriculumConstants.GET_ONE_CURRICULUMS_REQUEST });\r\n      const res = await axios.get(`curriculum/findOne?_id=${_id}`);\r\n      if (res.status === 200) {\r\n        console.log(res.data);\r\n        const { curriculumList } = res.data;\r\n        const lessionResources =  curriculumList.map((curriculum, index) => (\r\n          curriculum.lessionResources\r\n        ))\r\n        \r\n        dispatch({\r\n          type: curriculumConstants.GET_ONE_CURRICULUMS_SUCCESS,\r\n          payload: { curriculumList,lessionResources },\r\n        });\r\n      } else {\r\n        dispatch({ type: curriculumConstants.GET_ONE_CURRICULUMS_FAILURE });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n\r\n// modified actrion\r\nexport const addCurriculum = (form) => {\r\n  return async (dispatch) => {\r\n    console.log(form);\r\n    try {\r\n      dispatch({ type: curriculumConstants.ADD_CURRICULUM_REQUEST });\r\n      const res = await axios.post(`curriculum/create`, form);\r\n      if (res.status === 201) {\r\n        dispatch({ type: curriculumConstants.ADD_CURRICULUM_SUCCESS });\r\n       // dispatch(findAllCurriculums(form.course));\r\n      } else {\r\n        dispatch({ type: curriculumConstants.ADD_CURRICULUM_FAILURE });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const UploadDocument = (form) => {\r\n  return async (dispatch) => {\r\n   // console.log(form);\r\n    try {\r\n      dispatch({ type: curriculumConstants.ADD_CURRICULUM_REQUEST });\r\n      const res = await axios.post(`curriculum/upload`, form);\r\n      if (res.status === 201) {\r\n      //   const { data } = res;\r\n      //   const filename = data.filename;\r\n      //  localStorage.setItem(\"filename\",filename) ;\r\n      //   console.log(res);\r\n      //  dispatch(findOneCurriculums(form._id));\r\n       \r\n        \r\n      } else {\r\n        dispatch({ type: curriculumConstants.ADD_CURRICULUM_FAILURE });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const UploadDocumentDelete = (payload) => {\r\n  return async (dispatch) => {\r\n    console.log(\"doc delete \"+ JSON.stringify( payload));\r\n    try {\r\n      dispatch({ type: curriculumConstants.ADD_CURRICULUM_REQUEST });\r\n      const res = await axios.delete(`curriculum/uploaddelete`, {\r\n        data:{payload},\r\n      });\r\n      if (res.status === 202) {\r\n      //   const { data } = res;\r\n      //   const filename = data.filename;\r\n      //  localStorage.setItem(\"filename\",filename) ;\r\n         console.log(res);\r\n        dispatch(findOneCurriculums(payload.course_id));\r\n       \r\n        \r\n      } else {\r\n        dispatch({ type: curriculumConstants.ADD_CURRICULUM_FAILURE });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const updateCurriculums= (form) => {\r\n  return async dispatch => {\r\n      dispatch({ type: curriculumConstants.UPDATE_CURRICULUMS_REQUEST });\r\n      const res = await axios.post(`/curriculum/update`, form);\r\n      if (res.status === 201) {\r\n          dispatch({ type: curriculumConstants.UPDATE_CURRICULUMS_SUCCESS });\r\n         // dispatch(findAllCurriculums(form.course));\r\n      } else {\r\n          const { error } = res.data;\r\n          dispatch({\r\n              type: curriculumConstants.UPDATE_CURRICULUMS_FAILURE,\r\n              payload: { error }\r\n          });\r\n      }\r\n  }\r\n}\r\n\r\n// new action\r\nexport const deleteCurriculumById = (payload) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const res = await axios.delete(`curriculum/deleteCurriculumById`, {\r\n        data: { payload },\r\n      });\r\n      dispatch({ type: curriculumConstants.DELETE_CURRICULUM_BY_ID_REQUEST });\r\n      if (res.status === 202) {\r\n        dispatch({ type: curriculumConstants.DELETE_CURRICULUM_BY_ID_SUCCESS });\r\n        dispatch(findAllCurriculums());\r\n      } else {\r\n        const { error } = res.data;\r\n        dispatch({\r\n          type: curriculumConstants.DELETE_CURRICULUM_BY_ID_FAILURE,\r\n          payload: {\r\n            error,\r\n          },\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n\r\n\r\nexport{\r\n  findAllCurriculums\r\n}","import axios from \"../helpers/axios\";\r\nimport { blogConstants } from \"./constants\";\r\n\r\n// new action\r\nconst findAllBlogs = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch({ type: blogConstants.GET_ALL_BLOGS_REQUEST });\r\n      const res = await axios.get(`blog/findAll`);\r\n      if (res.status === 200) {\r\n        const { blogs } = res.data;\r\n        dispatch({\r\n          type: blogConstants.GET_ALL_BLOGS_SUCCESS,\r\n          payload: { blogs },\r\n        });\r\n      } else {\r\n        dispatch({ type: blogConstants.GET_ALL_BLOGS_FAILURE });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n\r\n// modified actrion\r\nexport const addBlog = (form) => {\r\n  return async (dispatch) => {\r\n    console.log(form);\r\n    try {\r\n      dispatch({ type: blogConstants.ADD_BLOG_REQUEST });\r\n      const res = await axios.post(`blog/create`, form);\r\n      if (res.status === 201) {\r\n        dispatch({ type: blogConstants.ADD_BLOG_SUCCESS });\r\n        dispatch(findAllBlogs());\r\n      } else {\r\n        dispatch({ type: blogConstants.ADD_BLOG_FAILURE });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const UploadBlog= (form) => {\r\n  return async (dispatch) => {\r\n    console.log(form);\r\n    try {\r\n      dispatch({ type: blogConstants.ADD_BLOG_REQUEST });\r\n      const res = await axios.post(`blog/upload`, form);\r\n      if (res.status === 201) {\r\n        const { data } = res;\r\n        const filename = data.filename;\r\n       localStorage.setItem(\"filename\",filename) ;\r\n        console.log(res);\r\n       \r\n       \r\n        \r\n      } else {\r\n        dispatch({ type: blogConstants.ADD_COURSE_FAILURE });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n\r\n\r\nexport const updateBlogs= (form) => {\r\n  return async dispatch => {\r\n      dispatch({ type: blogConstants.UPDATE_BLOGS_REQUEST });\r\n      const res = await axios.post(`/blog/update`, form);\r\n      if (res.status === 201) {\r\n          dispatch({ type: blogConstants.UPDATE_BLOGS_SUCCESS });\r\n          dispatch(findAllBlogs());\r\n      } else {\r\n          const { error } = res.data;\r\n          dispatch({\r\n              type: blogConstants.UPDATE_BLOGS_FAILURE,\r\n              payload: { error }\r\n          });\r\n      }\r\n  }\r\n}\r\n\r\n// new action\r\nexport const deleteBlogById = (payload) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const res = await axios.delete(`blog/deleteBlogById`, {\r\n        data: { payload },\r\n      });\r\n      dispatch({ type: blogConstants.DELETE_BLOG_BY_ID_REQUEST });\r\n      if (res.status === 202) {\r\n        dispatch({ type: blogConstants.DELETE_BLOG_BY_ID_SUCCESS });\r\n        dispatch(findAllBlogs());\r\n      } else {\r\n        const { error } = res.data;\r\n        dispatch({\r\n          type: blogConstants.DELETE_BLOG_BY_ID_FAILURE,\r\n          payload: {\r\n            error,\r\n          },\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n\r\n\r\nexport{\r\n  findAllBlogs\r\n}","import React from \"react\";\nimport { Navbar, Nav, NavDropdown, Container } from \"react-bootstrap\";\nimport { NavLink, Link } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { signout } from \"../../actions\";\n\n/**\n * @author\n * @function Header\n **/\n\nconst Header = (props) => {\n  const auth = useSelector((state) => state.auth);\n  const dispatch = useDispatch();\n\n  const logout = () => {\n    dispatch(signout());\n  };\n\n  const renderLoggedInLinks = () => {\n    return (\n      <Nav>\n        <li className=\"nav-item\">\n          <span className=\"nav-link\" onClick={logout}>\n            Signout\n          </span>\n        </li>\n      </Nav>\n    );\n  };\n\n  const renderNonLoggedInLinks = () => {\n    return (\n      <Nav>\n        {/* <Nav.Link href=\"#deets\">Signin</Nav.Link> */}\n        <li className=\"nav-item\">\n          <NavLink to=\"signin\" className=\"nav-link\">\n            Signin\n          </NavLink>\n        </li>\n        <li className=\"nav-item\">\n          <NavLink to=\"signup\" className=\"nav-link\">\n            Signup\n          </NavLink>\n        </li>\n      </Nav>\n    );\n  };\n\n  return (\n    <Navbar\n      collapseOnSelect\n      fixed=\"top\"\n      expand=\"lg\"\n      bg=\"dark\"\n      variant=\"dark\"\n      style={{ zIndex: 1 }}\n    >\n      <Container fluid>\n        {/* <Navbar.Brand href=\"#home\">Admin Dashboard</Navbar.Brand> */}\n        <Link to=\"/\" className=\"navbar-brand\">\n          Admin Dashboard\n        </Link>\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            {/* <NavDropdown title=\"Dropdown\" id=\"collasible-nav-dropdown\">\n                            <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n                            <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n                            <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n                            <NavDropdown.Divider />\n                            <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n                            </NavDropdown> */}\n          </Nav>\n          {auth.authenticate ? renderLoggedInLinks() : renderNonLoggedInLinks()}\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  );\n};\n\nexport default Header;\n","import { authConstants } from \"./constants\";\nimport axios from \"../helpers/axios\";\n\nexport const login = (user) => {\n\n    console.log(user)\n\n    return async (dispatch) => {\n\n        dispatch({ type: authConstants.LOGIN_REQUEST });\n        const res = await axios.post(`/admin/signin`, {\n            ...user\n        });\n\n        if(res.status === 200){\n            const { token, user } = res.data;\n            localStorage.setItem('token', token);\n            localStorage.setItem('user', JSON.stringify(user));\n            dispatch({\n                type: authConstants.LOGIN_SUCCESS,\n                payload: {\n                    token, user\n                }\n            });\n        }else{\n            if(res.status === 400){\n                dispatch({\n                    type: authConstants.LOGIN_FAILURE,\n                    payload: { error: res.data.error }\n                });\n            }\n        }\n    }\n}\n\nexport const isUserLoggedIn = () => {\n    return async dispatch => {\n        const token = localStorage.getItem('token');\n        if(token){\n            const user = JSON.parse(localStorage.getItem('user'));\n            dispatch({\n                type: authConstants.LOGIN_SUCCESS,\n                payload: {\n                    token, user\n                }\n            });\n        }else{\n            dispatch({\n                type: authConstants.LOGIN_FAILURE,\n                payload: { error: 'Failed to login' }\n            });\n        }\n    }\n}\n\nexport const signout = () => {\n    return async dispatch => {\n\n        dispatch({ type: authConstants.LOGOUT_REQUEST });\n        const res = await axios.post(`/admin/signout`);\n\n        if(res.status === 200){\n            localStorage.clear();\n            dispatch({ type: authConstants.LOGOUT_SUCCESS });\n        }else{\n            dispatch({\n                type: authConstants.LOGOUT_FAILURE,\n                payload: { error: res.data.error }\n            });\n        }\n\n        \n    }\n}\n\n\n\nexport const upload = () => {\n    return async dispatch => {\n\n        dispatch({ type: authConstants.UPLOAD_REQUEST });\n        const res = await axios.post(`/upload`);\n\n        if(res.status === 200){\n            localStorage.clear();\n            dispatch({ type: authConstants.UPLOAD_SUCCESS });\n        }else{\n            dispatch({\n                type: authConstants.UPLOAD_FAILURE,\n                payload: { error: res.data.error }\n            });\n        }\n\n        \n    }\n}","import React from 'react';\nimport Header from '../Header';\nimport { Container, Row, Col } from 'react-bootstrap'; \nimport { NavLink } from 'react-router-dom';\nimport './style.css';\n\n/**\n* @author\n* @function Layout\n**/\n\nconst Layout = (props) => {\n  return(\n    <>\n       <Header />\n       {\n         props.sidebar ?\n         <Container fluid>\n          <Row>\n            <Col md={2} className=\"sidebar\">\n              <ul>\n                <li><NavLink exact to={`/`}>Home</NavLink></li>\n                <li><NavLink to={`/page`}>Page</NavLink></li>\n                <li><NavLink to={`/category`}>Category</NavLink></li>\n                <li><NavLink to={`/products`}>Products</NavLink></li>\n                <li><NavLink to={`/orders`}>Orders</NavLink></li>\n                <li><NavLink to={`/blogs`}>Blogs</NavLink></li>\n                <li><NavLink to={`/courses`}>Courses</NavLink></li>\n              </ul>\n            </Col>\n            <Col md={10} style={{ marginLeft: 'auto', paddingTop: '60px' }}>\n              {props.children}\n            </Col>\n          </Row>\n        </Container>\n        :\n        props.children\n       }\n        \n        \n    </>\n   )\n\n }\n\nexport default Layout;","import React from 'react';\nimport Layout from '../../components/Layout';\nimport { Jumbotron, Row, Col, Container } from 'react-bootstrap';\nimport './style.css';\nimport { NavLink } from 'react-router-dom';\n\n/**\n* @author\n* @function Home\n**/\n\nconst Home = (props) => {\n\n  return (\n    <Layout sidebar>\n\n      \n      \n  \n\n      {/* <Jumbotron style={{margin: '5rem', background: '#fff'}} className=\"text-center\">\n            <h1>Welcome to Admin Dashboard</h1>\n            <p>It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a sear</p>\n        </Jumbotron> */}\n    </Layout>\n  )\n\n}\n\nexport default Home","import React from 'react';\nimport { Form } from 'react-bootstrap';\n\n/**\n* @author\n* @function Input\n**/\n\nconst Input = (props) => {\n\n  let input = null;\n  let checkbox = null;\n  switch(props.type){\n    case 'select':\n      input = <Form.Group>\n                {props.label && <Form.Label>{props.label}</Form.Label>}\n                <select\n                  className=\"form-control form-control-sm\"\n                  value={props.value}\n                  onChange={props.onChange}\n                >\n                  <option value=\"\">{props.placeholder}</option>\n                  {\n                    props.options.length > 0 ?\n                    props.options.map((option, index) =>\n                      <option key={index} value={option.value}>{option.name}</option>\n                    ) : null\n                  }\n                </select>\n            </Form.Group>\n      break;\n    case 'checkbox':\n      checkbox = \n      \n      <checkbox\n                  type={props.type} \n                 checked={props.checked}\n                 value={props.value}\n          onChange={props.onChange}\n          inputRef={ref => props.myCheckbox = ref} \n          {...props}/>\n        // <Form.Button type=\"button\" onClick={props.handleToggle}>{props.label}</Form.Button>\n        // <Form.Button type=\"button\" onClick={props.handleIsItChecked}>Is it checked?</Form.Button>\n            \n        break;  \n    case 'text':\n    default:\n      input = <Form.Group>\n                {props.label && <Form.Label>{props.label}</Form.Label>}\n                <Form.Control \n                    type={props.type} \n                    placeholder={props.placeholder} \n                    checked={props.checked}\n                    value={props.value}\n                    onChange={props.onChange}\n                    {...props}\n                />\n                <Form.Text className=\"text-muted\">\n                  {props.errorMessage}\n                </Form.Text>\n            </Form.Group>\n  }\n\n\n  return input;\n\n }\n\nexport default Input","import React, { useState, useEffect } from 'react';\nimport Layout from '../../components/Layout';\nimport { Container, Form, Row, Col, Button } from 'react-bootstrap';\nimport Input from '../../components/UI/Input';\nimport { login } from '../../actions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\n/**\n* @author\n* @function Signin\n**/\n\nconst Signin = (props) => {\n\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [error, setError] = useState('');\n    const auth = useSelector(state => state.auth);\n\n    const dispatch = useDispatch();\n\n    \n\n\n    const userLogin = (e) => {\n\n        e.preventDefault();\n\n        const user = {\n            email, password\n        }\n\n        dispatch(login(user));\n    }\n\n    if(auth.authenticate){\n        return <Redirect to={`/`} />\n    }\n\n    return (\n        <Layout>\n            <Container>\n                <Row style={{ marginTop: '50px' }}>\n                    <Col md={{span: 6, offset: 3}}>\n                        <Form onSubmit={userLogin}>\n                            <Input \n                                label=\"Email\"\n                                placeholder=\"Email\"\n                                value={email}\n                                type=\"email\"\n                                onChange={(e) => setEmail(e.target.value)}\n                            />\n\n                            <Input \n                                label=\"Password\"\n                                placeholder=\"Password\"\n                                value={password}\n                                type=\"password\"\n                                onChange={(e) => setPassword(e.target.value)}\n                            />\n                            <Button variant=\"primary\" type=\"submit\">\n                                Submit\n                            </Button>\n                        </Form>\n                    </Col>\n                </Row>\n                \n            </Container>\n        </Layout>\n    )\n\n}\n\nexport default Signin","import React, { useState } from \"react\";\nimport Layout from \"../../components/Layout\";\nimport { Container, Form, Row, Col, Button } from \"react-bootstrap\";\nimport Input from \"../../components/UI/Input\";\nimport { Redirect } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { signup } from \"../../actions\";\nimport { useEffect } from \"react\";\n\n/**\n * @author\n * @function Signup\n **/\n\nconst Signup = (props) => {\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const auth = useSelector((state) => state.auth);\n  const user = useSelector((state) => state.user);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!user.loading) {\n      setFirstName(\"\");\n      setLastName(\"\");\n      setEmail(\"\");\n      setPassword(\"\");\n    }\n  }, [user.loading]);\n\n  const userSignup = (e) => {\n    e.preventDefault();\n\n    const user = {\n      firstName,\n      lastName,\n      email,\n      password,\n    };\n\n    dispatch(signup(user));\n  };\n\n  if (auth.authenticate) {\n    return <Redirect to={`/`} />;\n  }\n\n  if (user.loading) {\n    return <p>Loading...!</p>;\n  }\n\n  return (\n    <Layout>\n      <Container>\n        {user.message}\n        <Row style={{ marginTop: \"50px\" }}>\n          <Col md={{ span: 6, offset: 3 }}>\n            <Form onSubmit={userSignup}>\n              <Row>\n                <Col md={6}>\n                  <Input\n                    label=\"First Name\"\n                    placeholder=\"First Name\"\n                    value={firstName}\n                    type=\"text\"\n                    onChange={(e) => setFirstName(e.target.value)}\n                  />\n                </Col>\n                <Col md={6}>\n                  <Input\n                    label=\"Last Name\"\n                    placeholder=\"Last Name\"\n                    value={lastName}\n                    type=\"text\"\n                    onChange={(e) => setLastName(e.target.value)}\n                  />\n                </Col>\n              </Row>\n\n              <Input\n                label=\"Email\"\n                placeholder=\"Email\"\n                value={email}\n                type=\"email\"\n                onChange={(e) => setEmail(e.target.value)}\n              />\n\n              <Input\n                label=\"Password\"\n                placeholder=\"Password\"\n                value={password}\n                type=\"password\"\n                onChange={(e) => setPassword(e.target.value)}\n              />\n              <Button variant=\"primary\" type=\"submit\">\n                Submit\n              </Button>\n            </Form>\n          </Col>\n        </Row>\n      </Container>\n    </Layout>\n  );\n};\n\nexport default Signup;\n","import { authConstants, userContants } from \"./constants\";\nimport axios from \"../helpers/axios\";\n\nexport const signup = (user) => {\n\n    console.log(user)\n\n    return async (dispatch) => {\n\n        dispatch({ type: userContants.USER_REGISTER_REQUEST });\n        const res = await axios.post(`/admin/signup`, {\n            ...user\n        });\n\n        if(res.status === 201){\n            const { message } = res.data;\n            dispatch({\n                type: userContants.USER_REGISTER_SUCCESS,\n                payload: {message}\n            });\n        }else{\n            if(res.status === 400){\n                dispatch({\n                    type: userContants.USER_REGISTER_FAILURE,\n                    payload: { error: res.data.error }\n                });\n            }\n        }\n    }\n}","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst PrivateRoute = ({component: Component, ...rest}) => {\n    return <Route {...rest} component={(props) => {\n        const token = window.localStorage.getItem('token');\n        if(token){\n            return <Component {...props} />\n        }else{\n            return <Redirect to={`/signin`} />\n        }\n    }} />\n}\n\nexport default PrivateRoute;","import React from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\n\n/**\n * @author\n * @function Modal\n **/\n\nconst NewModal = (props) => {\n  return (\n    <Modal size={props.size} show={props.show} onHide={props.handleClose}>\n      <Modal.Header closeButton>\n        <Modal.Title>{props.modalTitle}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>{props.children}</Modal.Body>\n      <Modal.Footer>\n        {props.buttons ? (\n          props.buttons.map((btn, index) => (\n            <Button key={index} variant={btn.color} onClick={btn.onClick}>\n              {btn.label}\n            </Button>\n          ))\n        ) : (\n          <Button\n            variant=\"primary\"\n            {...props}\n            style={{ backgroundColor: \"#333\" }}\n            className=\"btn-sm\"\n            onClick={props.onSubmit}\n          >\n            Save\n          </Button>\n        )}\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default NewModal;\n","import React, { useState } from \"react\";\nimport Layout from \"../../components/Layout\";\nimport { Container, Row, Col, Table } from \"react-bootstrap\";\nimport Input from \"../../components/UI/Input\";\nimport Modal from \"../../components/UI/Modal\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { addProduct, deleteProductById } from \"../../actions\";\nimport \"./style.css\";\n\n/**\n * @author\n * @function Products\n **/\n\nconst Products = (props) => {\n  const [name, setName] = useState(\"\");\n  const [quantity, setQuantity] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [categoryId, setCategoryId] = useState(\"\");\n  const [productPictures, setProductPictures] = useState([]);\n  const [show, setShow] = useState(false);\n  const [productDetailModal, setProductDetailModal] = useState(false);\n  const [productDetails, setProductDetails] = useState(null);\n  const category = useSelector((state) => state.category);\n  const product = useSelector((state) => state.product);\n  const dispatch = useDispatch();\n\n  const handleClose = () => {\n    setShow(false);\n  };\n\n  const submitProductForm = () => {\n    const form = new FormData();\n    form.append(\"name\", name);\n    form.append(\"quantity\", quantity);\n    form.append(\"price\", price);\n    form.append(\"description\", description);\n    form.append(\"category\", categoryId);\n\n    for (let pic of productPictures) {\n      form.append(\"productPicture\", pic);\n    }\n\n    dispatch(addProduct(form)).then(() => setShow(false));\n  };\n  const handleShow = () => setShow(true);\n\n  const createCategoryList = (categories, options = []) => {\n    for (let category of categories) {\n      options.push({ value: category._id, name: category.name });\n      if (category.children.length > 0) {\n        createCategoryList(category.children, options);\n      }\n    }\n\n    return options;\n  };\n\n  const handleProductPictures = (e) => {\n    setProductPictures([...productPictures, e.target.files[0]]);\n  };\n\n  const renderProducts = () => {\n    return (\n      <Table style={{ fontSize: 12 }} responsive=\"sm\">\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>Name</th>\n            <th>Price</th>\n            <th>Quantity</th>\n            <th>Category</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {product.products.length > 0\n            ? product.products.map((product,index) => (\n                <tr key={product._id}>\n                  <td>{index + 1}</td>\n                  <td>{product.name}</td>\n                  <td>{product.price}</td>\n                  <td>{product.quantity}</td>\n                  <td>{product.category.name}</td>\n                  <td>\n                    <button onClick={() => showProductDetailsModal(product)}>\n                      info\n                    </button>\n                    <button\n                      onClick={() => {\n                        const payload = {\n                          productId: product._id,\n                        };\n                        const confirmBox = window.confirm(\n                          \"Do you really want to delete this ?\"\n                        )\n                        if (confirmBox === true) {\n                        dispatch(deleteProductById(payload));\n                        }\n                      }}\n                    >\n                      del\n                    </button>\n                  </td>\n                </tr>\n              ))\n            : null}\n        </tbody>\n      </Table>\n    );\n  };\n\n  const renderAddProductModal = () => {\n    return (\n      <Modal\n        show={show}\n        handleClose={handleClose}\n        modalTitle={\"Add New Product\"}\n        onSubmit={submitProductForm}\n      >\n        <Input\n          label=\"Name\"\n          value={name}\n          placeholder={`Product Name`}\n          onChange={(e) => setName(e.target.value)}\n        />\n        <Input\n          label=\"Quantity\"\n          value={quantity}\n          placeholder={`Quantity`}\n          onChange={(e) => setQuantity(e.target.value)}\n        />\n        <Input\n          label=\"Price\"\n          value={price}\n          placeholder={`Price`}\n          onChange={(e) => setPrice(e.target.value)}\n        />\n        <Input\n          label=\"Description\"\n          value={description}\n          placeholder={`Description`}\n          onChange={(e) => setDescription(e.target.value)}\n        />\n        <select\n          className=\"form-control\"\n          value={categoryId}\n          onChange={(e) => setCategoryId(e.target.value)}\n        >\n          <option>select category</option>\n          {createCategoryList(category.categories).map((option) => (\n            <option key={option.value} value={option.value}>\n              {option.name}\n            </option>\n          ))}\n        </select>\n        {productPictures.length > 0\n          ? productPictures.map((pic, index) => (\n              <div key={index}>{pic.name}</div>\n            ))\n          : null}\n        <input\n          type=\"file\"\n          name=\"productPicture\"\n          onChange={handleProductPictures}\n        />\n      </Modal>\n    );\n  };\n\n  const handleCloseProductDetailsModal = () => {\n    setProductDetailModal(false);\n  };\n\n  const showProductDetailsModal = (product) => {\n    setProductDetails(product);\n    setProductDetailModal(true);\n  };\n\n  const renderProductDetailsModal = () => {\n    if (!productDetails) {\n      return null;\n    }\n\n    return (\n      <Modal\n        show={productDetailModal}\n        handleClose={handleCloseProductDetailsModal}\n        modalTitle={\"Product Details\"}\n        size=\"lg\"\n      >\n        <Row>\n          <Col md=\"6\">\n            <label className=\"key\">Name</label>\n            <p className=\"value\">{productDetails.name}</p>\n          </Col>\n          <Col md=\"6\">\n            <label className=\"key\">Price</label>\n            <p className=\"value\">{productDetails.price}</p>\n          </Col>\n        </Row>\n        <Row>\n          <Col md=\"6\">\n            <label className=\"key\">Quantity</label>\n            <p className=\"value\">{productDetails.quantity}</p>\n          </Col>\n          <Col md=\"6\">\n            <label className=\"key\">Category</label>\n            <p className=\"value\">{productDetails.category.name}</p>\n          </Col>\n        </Row>\n        <Row>\n          <Col md=\"12\">\n            <label className=\"key\">Description</label>\n            <p className=\"value\">{productDetails.description}</p>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <label className=\"key\">Product Pictures</label>\n            <div style={{ display: \"flex\" }}>\n              {productDetails.productPictures.map((picture) => (\n                <div className=\"productImgContainer\">\n                  <img src={picture.img} alt=\"\" />\n                  \n                </div>\n              ))}\n            </div>\n          </Col>\n        </Row>\n      </Modal>\n    );\n  };\n  return (\n    <Layout sidebar>\n      <Container>\n        <Row>\n          <Col md={12}>\n            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n              <h3>Products</h3>\n              <button onClick={handleShow}>Add</button>\n            </div>\n          </Col>\n        </Row>\n        <Row>\n          <Col>{renderProducts()}</Col>\n        </Row>\n      </Container>\n      {renderAddProductModal()}\n      {renderProductDetailsModal()}\n    </Layout>\n  );\n};\n\nexport default Products;\n","import React, { Component } from 'react';\r\nimport 'draft-js/dist/Draft.css';\r\nimport debounce from 'lodash/debounce';\r\nimport {\r\n  Editor, \r\n  EditorState,\r\n  RichUtils,\r\n  convertFromRaw, \r\n  convertToRaw\r\n} from 'draft-js';\r\n\r\n\r\nconst MAX_LENGTH = 10;\r\n\r\n class RichEditorExample extends React.Component {\r\n        constructor(props) {\r\n          super(props);\r\n          this.state = {\r\n            editorState: EditorState.createEmpty()\r\n          };\r\n\r\n          this.onChange = this.onChange.bind(this);\r\n          this._getLengthOfSelectedText = this._getLengthOfSelectedText.bind(this);\r\n          this._handleBeforeInput = this._handleBeforeInput.bind(this);\r\n\r\n          this.focus = () => this.refs.editor.focus();\r\n         \r\n          this.handleKeyCommand = (command) => this._handleKeyCommand(command);\r\n          this.onTab = (e) => this._onTab(e);\r\n          this.toggleBlockType = (type) => this._toggleBlockType(type);\r\n          this.toggleInlineStyle = (style) => this._toggleInlineStyle(style);\r\n        }\r\n\r\n        onChange = (editorState) => {\r\n          const contentState = editorState.getCurrentContent();\r\n          console.log('content state', convertToRaw(contentState));\r\n           this.saveContent(contentState);\r\n          this.setState({editorState});\r\n        }\r\n\r\n\r\n\r\n        saveContent = debounce((content) => {\r\nwindow.localStorage.setItem('content',JSON.stringify((convertToRaw(content))));\r\n        }, 1000);\r\n\r\n        // saveContent = (content) => {\r\n        //   window.localStorage.setItem('content', JSON.stringify(convertToRaw(content)));\r\n        // }\r\n\r\n\r\n      _getLengthOfSelectedText = () => {\r\n        console.log('say');\r\n  \tconst currentSelection = this.state.editorState.getSelection();\r\n    const isCollapsed = currentSelection.isCollapsed();\r\n    \r\n    let length = 0;\r\n    \r\n    if (!isCollapsed) {\r\n      const currentContent = this.state.editorState.getCurrentContent();\r\n      const startKey = currentSelection.getStartKey();\r\n      const endKey = currentSelection.getEndKey();\r\n      const isBackward = currentSelection.getIsBackward();\r\n    \tconst blockMap = currentContent.getBlockMap();\r\n      const startBlock = currentContent.getBlockForKey(startKey);\r\n      const endBlock = currentContent.getBlockForKey(endKey);\r\n      const isStartAndEndBlockAreTheSame = startKey === endKey;\r\n      const startBlockTextLength = startBlock.getLength();\r\n      const endBlockTextLength = endBlock.getLength();\r\n      const startSelectedTextLength = startBlockTextLength - currentSelection.getStartOffset();\r\n      const endSelectedTextLength = currentSelection.getEndOffset();\r\n      const keyAfterEnd = currentContent.getKeyAfter(endKey);\r\n      \r\n      if (isStartAndEndBlockAreTheSame) {\r\n      \tlength += currentSelection.getEndOffset() - currentSelection.getStartOffset();\r\n      } else {\r\n      \tlet currentKey = startKey;\r\n      \tlet counter = 0;\r\n\r\n        while (currentKey && currentKey !== keyAfterEnd) {\r\n \t\t\t\t\tif (currentKey === startKey) {\r\n          \tlength += startSelectedTextLength + 1;\r\n          } else if (currentKey === endKey) {\r\n            length += endSelectedTextLength;\r\n          } else {\r\n          \tlength += currentContent.getBlockForKey(currentKey).getLength() + 1;\r\n          }\r\n\r\n          currentKey = currentContent.getKeyAfter(currentKey);\r\n        };\r\n      }\r\n    }\r\n    \r\n    return length;\r\n  }\r\n\r\n  _handleBeforeInput = () => {\r\n    console.log('hello');\r\n  \tconst currentContent = this.state.editorState.getCurrentContent();\r\n    const currentContentLength = currentContent.getPlainText('').length\r\n\r\n  \tif (currentContentLength > MAX_LENGTH - 1) {\r\n    \tconsole.log('you can type max ten characters');\r\n\r\n    \treturn 'handled';\r\n    }\r\n  }\r\n  \r\n  _handlePastedText = (pastedText) => {\r\n  \tconst currentContent = this.state.editorState.getCurrentContent();\r\n    const currentContentLength = currentContent.getPlainText('').length;\r\n    const selectedTextLength = this._getLengthOfSelectedText();\r\n\r\n  \tif (currentContentLength + pastedText.length - selectedTextLength > MAX_LENGTH) {\r\n    \tconsole.log('you can type max ten characters');\r\n\r\n    \treturn 'handled';\r\n    }\r\n  } \r\n\r\n        _handleKeyCommand(command) {\r\n          const {editorState} = this.state;\r\n          const newState = RichUtils.handleKeyCommand(editorState, command);\r\n          if (newState) {\r\n            this.onChange(newState);\r\n            return true;\r\n          }\r\n          return false;\r\n        }\r\n\r\n        _onTab(e) {\r\n          const maxDepth = 4;\r\n          this.onChange(RichUtils.onTab(e, this.state.editorState, maxDepth));\r\n        }\r\n\r\n        _toggleBlockType(blockType) {\r\n          this.onChange(\r\n            RichUtils.toggleBlockType(\r\n              this.state.editorState,\r\n              blockType\r\n            )\r\n          );\r\n        }\r\n\r\n        _toggleInlineStyle(inlineStyle) {\r\n          this.onChange(\r\n            RichUtils.toggleInlineStyle(\r\n              this.state.editorState,\r\n              inlineStyle\r\n            )\r\n          );\r\n        }\r\n\r\n        render() {\r\n          const {editorState} = this.state;\r\n\r\n          // If the user changes block type before entering any text, we can\r\n          // either style the placeholder or hide it. Let's just hide it now.\r\n          let className = 'RichEditor-editor';\r\n          var contentState = editorState.getCurrentContent();\r\n          if (!contentState.hasText()) {\r\n            if (contentState.getBlockMap().first().getType() !== 'unstyled') {\r\n              className += ' RichEditor-hidePlaceholder';\r\n            }\r\n          }\r\n\r\n\r\nif (!this.state.editorState) {\r\n      return (\r\n        <h3 className=\"loading\">Loading...</h3>\r\n      );\r\n    }\r\n    return (\r\n      <div>\r\n <div className=\"RichEditor-root\">\r\n              <BlockStyleControls\r\n                editorState={editorState}\r\n                onToggle={this.toggleBlockType}\r\n              />\r\n              <InlineStyleControls\r\n                editorState={editorState}\r\n                onToggle={this.toggleInlineStyle}\r\n              />\r\n              <div className={className} onClick={this.focus}>\r\n                <Editor\r\n                  blockStyleFn={getBlockStyle}\r\n                  customStyleMap={styleMap}\r\n                  editorState={editorState}\r\n                  handleKeyCommand={this.handleKeyCommand}\r\n                  onChange={this.onChange}\r\n                  onTab={this.onTab}\r\n                  placeholder=\"Tell a story...\"\r\n                  ref=\"editor\"\r\n                  spellCheck={true}\r\n                />\r\n              </div>\r\n            </div>\r\n      </div>\r\n    );\r\n\r\n        }\r\n      }\r\n\r\n\r\n\r\n // Custom overrides for \"code\" style.\r\n      const styleMap = {\r\n        CODE: {\r\n          backgroundColor: 'rgba(0, 0, 0, 0.05)',\r\n          fontFamily: '\"Inconsolata\", \"Menlo\", \"Consolas\", monospace',\r\n          fontSize: 16,\r\n          padding: 2,\r\n        },\r\n      };\r\n\r\n      function getBlockStyle(block) {\r\n        switch (block.getType()) {\r\n          case 'blockquote': return 'RichEditor-blockquote';\r\n          default: return null;\r\n        }\r\n      }\r\n\r\n\r\n\r\nclass StyleButton extends React.Component {\r\n        constructor() {\r\n          super();\r\n          this.onToggle = (e) => {\r\n            e.preventDefault();\r\n            this.props.onToggle(this.props.style);\r\n          };\r\n        }\r\n\r\n        render() {\r\n          let className = 'RichEditor-styleButton ui button';\r\n          if (this.props.active) {\r\n            className += ' RichEditor-activeButton';\r\n          }\r\n\r\n          return (\r\n            <span className={className} onMouseDown={this.onToggle}>\r\n              {this.props.label}\r\n            </span>\r\n          );\r\n        }\r\n      }\r\n\r\n\r\n\r\n const BLOCK_TYPES = [\r\n        {label: 'H1', style: 'header-one'},\r\n        {label: 'H2', style: 'header-two'},\r\n        {label: 'H3', style: 'header-three'},\r\n        {label: 'H4', style: 'header-four'},\r\n        {label: 'H5', style: 'header-five'},\r\n        {label: 'H6', style: 'header-six'},\r\n        {label: 'Blockquote', style: 'blockquote'},\r\n        {label: 'UL', style: 'unordered-list-item'},\r\n        {label: 'OL', style: 'ordered-list-item'},\r\n        {label: 'Code Block', style: 'code-block'},\r\n      ];\r\n\r\n\r\n\r\n const BlockStyleControls = (props) => {\r\n        const {editorState} = props;\r\n        const selection = editorState.getSelection();\r\n        const blockType = editorState\r\n          .getCurrentContent()\r\n          .getBlockForKey(selection.getStartKey())\r\n          .getType();\r\n\r\n        return (\r\n          <div className=\"RichEditor-controls\">\r\n            {BLOCK_TYPES.map((type) =>\r\n              <StyleButton\r\n                key={type.label}\r\n                active={type.style === blockType}\r\n                label={type.label}\r\n                onToggle={props.onToggle}\r\n                style={type.style}\r\n              />\r\n            )}\r\n          </div>\r\n        );\r\n      };\r\n\r\n\r\n var INLINE_STYLES = [\r\n        {label: 'Bold', style: 'BOLD'},\r\n        {label: 'Italic', style: 'ITALIC'},\r\n        {label: 'Underline', style: 'UNDERLINE'},\r\n        {label: 'Monospace', style: 'CODE'},\r\n      ];\r\n\r\n\r\n\r\nconst InlineStyleControls = (props) => {\r\n        var currentStyle = props.editorState.getCurrentInlineStyle();\r\n        return (\r\n          <div className=\"RichEditor-controls\">\r\n            {INLINE_STYLES.map(type =>\r\n              <StyleButton\r\n                key={type.label}\r\n                active={currentStyle.has(type.style)}\r\n                label={type.label}\r\n                onToggle={props.onToggle}\r\n                style={type.style}\r\n              />\r\n            )}\r\n          </div>\r\n        );\r\n      };\r\n\r\n\r\n\r\n      export default RichEditorExample;","import React, { useState, useEffect,useRef } from \"react\";\r\nimport Layout from \"../../components/Layout\";\r\nimport { Container, Row, Col, Table } from \"react-bootstrap\";\r\nimport Input from \"../../components/UI/Input\";\r\nimport Modal from \"../../components/UI/Modal\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { upload, findAllBlogs, UploadBlog, addBlog, updateBlogs, deleteBlogById } from \"../../actions\";\r\n\r\nimport RichEditorExample from '../../components/UI/Input/draft';\r\nimport \"./style.css\";\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport { EditorState, convertToRaw, convertFromRaw, uploadCallback, embedCallback } from \"draft-js\";\r\nimport '../../../node_modules/react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\nimport { stateToHTML } from 'draft-js-export-html';\r\nimport dateFormat from 'dateformat';\r\nimport DatePicker from 'react-date-picker';\r\nimport ReactDatePicker from 'react-datepicker';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport {generatePublicUrl} from '../../urlConfig';\r\n// import DataTable from \"react-data-table-component\";\r\n// import \"bootstrap\";\r\n\r\n// import \"../../../node_modules/bootstrap/dist/css/bootstrap.min.css\";\r\n\r\n//import {stateToHTML} from 'draft-js-export-html'\r\nimport draftToHtml from 'draftjs-to-html';\r\n\r\n\r\n//Bootstrap and jQuery libraries\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'jquery/dist/jquery.min.js';\r\n//Datatable Modules\r\nimport \"datatables.net-dt/js/dataTables.dataTables\"\r\nimport \"datatables.net-dt/css/jquery.dataTables.min.css\"\r\nimport $ from 'jquery'; \r\n/**\r\n* @author\r\n* @function Blogs\r\n**/\r\n\r\nconst Blogs = (props) => {\r\n\r\n  const [_id, set_id] = useState(null);\r\n  const [blogTitle, setblogTitle] = useState(\"\");\r\n  const [blogCategory, setblogCategory] = useState(\"\");\r\n  const [blogText, setblogText] = useState(EditorState.createEmpty());\r\n // const [blogDetail, setblogDetail] = useState(EditorState.createEmpty());\r\n  const [parentId, setparentId] = useState(\"\");\r\n  const [authorId, setauthorId] = useState(\"\");\r\n  //const [blogImage, setblogImage] = useState([]);\r\n  const [blogImage, setblogImage] = useState(\"\");\r\n  const [published, setpublished] = useState(false);\r\n  const [postedOn, setpostedOn] = useState(new Date());\r\n  const [publishedOn, setpublishedOn] = useState(new Date());\r\n  const [show, setShow] = useState(false);\r\n  const [blogDetailModal, setBlogsDetailModal] = useState(false);\r\n\r\n  const [blogDetails, setBlogsDetails] = useState(null);\r\n\r\n  const [blogsDatatable, setblogsDatatable] = useState(null);\r\n\r\n\r\n\r\n  const author = useSelector((state) => state.author);\r\n  const blog = useSelector((state) => state.blog);\r\n\r\n\r\n//Declare data store variables\r\n// constructor(props) {\r\n  // super(props)\r\n  //   this.state = {\r\n  //     data: [],\r\n  //     cols:[]\r\n  //           }\r\n  //  }\r\n\r\n  //Get all users details and table columns names in bootstrap table\r\n  // axios.get('http://localhost/reactimageupload.php').then(res => \r\n  // {\r\n  // //Storing users detail in state array object\r\n  // this.setState({data: res.data.rows, cols: res.data.cols});\r\n  //    }); \r\n    \r\n  //init Datatable  \r\n  setTimeout(()=>{                        \r\n  var Workingtable=$('#dataTable').DataTable(\r\n    {retrieve: true,\r\n      destroy: true,\r\n      \"lengthMenu\": [[5, 10, 15, -1], [5, 10, 15, \"All\"]]\r\n    }\r\n  );\r\n  Workingtable.on('order.dt search.dt', function () {\r\n    Workingtable.column(0, { search: 'applied', order: 'applied' }).nodes().each(function (cell, i) {\r\n        cell.innerHTML = i + 1;\r\n    });\r\n}).draw();\r\n\r\n}, 2000);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    dynamicImportFunc()\r\n    //fetchCategories()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (blogDetails) {\r\n\r\n\r\n      //console.log(\"PARAM: \", props.match.params.id)\r\n      // fetch(`http://localhost:5000/api/posts/${props.match.params.id}`)\r\n      //     .then(res => res.json())\r\n      //     .then(data => {\r\n      set_id(blogDetails._id);\r\n      setblogTitle(blogDetails.blogTitle);\r\n      setblogCategory(blogDetails.blogCategory);\r\ntry{\r\n\r\n  console.log(JSON.stringify(blogDetails.blogText));\r\n\r\n  // let contentState = convertFromRaw(blogDetails.blogDetail);\r\n  // let editorState = EditorState.createWithContent(contentState);\r\n  // setblogDetail(editorState);\r\n\r\n  let contentState1 = convertFromRaw(blogDetails.blogText);\r\n      let editorState1 = EditorState.createWithContent(contentState1);\r\n      setblogText(editorState1);\r\n      // let contentState = convertFromRaw(blogDetails.blogText)\r\n      // console.log(contentState);\r\n      // let editorState = EditorState.createWithContent(contentState)\r\n      // console.log(editorState);\r\n      // setblogText(editorState)\r\n \r\n    }\r\n    catch( ex)\r\n    { console.log(\"blog detail \"+ex);}\r\n      //  setTimeut(()=> {\r\n      //setCurrentValue(4);\r\n\r\n      setparentId(blogDetails.parentId);\r\n      setauthorId(blogDetails.author);//\r\n      setblogImage(blogDetails.blogImage);\r\n      setpublished(blogDetails.published);\r\n      setpublishedOn(dateFormat(blogDetails.publishedOn, 'm/d/yyyy'));\r\n      setpostedOn(dateFormat(blogDetails.postedOn, 'm/d/yyyy'));\r\n      //setpublishedOn(dateFormat(blogDetails.publishedOn, 'mm-DD-yyyy'))\r\n      // }, 4000);\r\n      // console.log(blogDetails.parentId);\r\n      // console.log(blogDetails.author);\r\n      // console.log(dateFormat(blogDetails.publishedOn, 'mm-DD-yyyy'));\r\n      // })\r\n      // .catch(err => console.log(\"An error occured:\", err))\r\n    }\r\n\r\n   \r\n \r\n\r\n  }, [blogDetails])\r\n  // useEffect(() => {\r\n  //   setTimeout(() => {\r\n  //     console.log(blog.blogs);\r\n  //     //$('#dataTable').DataTable().destroy();\r\n  //    // setblogs([[0,\"Vivek\"],[1,\"Darshita\"]]);\r\n  //     setblogsDatatable(blog.blogs);\r\n  //   },2000);\r\n  // },[]);\r\n\r\n  useEffect(() => {\r\n     \r\n  },[]);\r\n\r\n  //const blogTitleRef = useRef();\r\n  \r\n\r\n\r\n\r\n  const Reset=()=>{\r\n    set_id(null);\r\n    setblogTitle(\"\");\r\n    setblogCategory(\"\");\r\n \r\n    \r\n    setblogText(EditorState.createEmpty());\r\n \r\n    setparentId(\"\");\r\n    setauthorId(\"\");\r\n    setblogImage(\"\");\r\n    setpublished(false);\r\n    setpublishedOn(new Date());\r\n    setpostedOn(new Date());\r\n    setShow(false);\r\n  }\r\n\r\n  const Validation=()=>{\r\n    //alert(JSON.stringify( blogText));\r\n    if (blogTitle === \"\") {\r\n      \r\n      alert('blogTitle is required');\r\n      return;\r\n  }\r\n  if (blogCategory === \"\") {\r\n      \r\n    alert('blogCategory is required');\r\n    return;\r\n}\r\n\r\nif (blogText === \"\") {\r\n      \r\n  alert('blogText is required');\r\n  return;\r\n}\r\nif (authorId === \"\") {\r\n      \r\n  alert('author is required');\r\n  return;\r\n}\r\n  return true;\r\n  }\r\n\r\n  const dynamicImportFunc = async () => {\r\n    if (typeof window !== 'undefined') {\r\n      const { default: htmlToDraft } = await import('html-to-draftjs')\r\n      // convertHtmlToDraft = htmlToDraft\r\n      if (props.post) {\r\n        const contentBlock = htmlToDraft(props.post.blogText)\r\n        console.log(\"CONTENTBLOCK\", contentBlock)\r\n        if (contentBlock) {\r\n          const contentState = blogText.createFromBlockArray(contentBlock.contentBlocks)\r\n          const editorState = EditorState.createWithContent(contentState)\r\n          console.log(editorState)\r\n\r\n          setblogText(editorState)\r\n        }\r\n      }\r\n    }\r\n\r\n  }\r\n  const convertFromJSONToHTML = (text) => {\r\n    try {\r\n      return { __html: stateToHTML(convertFromRaw(text)) }\r\n    } catch (exp) {\r\n      console.log(exp)\r\n      return { __html: 'Error' }\r\n    }\r\n  }\r\n  //<div dangerouslySetInnerHTML={convertFromJSONToHTML(props.post.description)} > </div >\r\n\r\n\r\n  const convertDescriptionFromJSONToHTML = () => {\r\n    try {\r\n      return { __html: stateToHTML(blogText.getCurrentContent()) }\r\n    } catch (exp) {\r\n      console.log(exp)\r\n      return { __html: 'Error' }\r\n    }\r\n  }\r\n\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClose = () => {\r\n    setShow(false);\r\n  };\r\n  // const [editorState, setEditorState] = React.useState(\r\n  //   EditorState.createEmpty()\r\n  // );\r\n  const _handleBeforeInput = () => {\r\n\r\n  }\r\n\r\n  const _handlePastedText = () => {\r\n\r\n  }\r\n\r\n  const uploadCallback = (file) => {//http://localhost:5000/\r\n    const formData = new FormData();\r\n    formData.append('blogImage', file);\r\n    dispatch(UploadBlog(formData)).then(() => setblogImage(localStorage.getItem(\"filename\"))\r\n\r\n    );\r\n\r\n\r\n    // return new Promise((resolve, reject) => {\r\n    // fetch(api+'/upload', {\r\n    // method: 'POST',\r\n    // body: formData\r\n    // })\r\n    // .then(res => res.json())\r\n    // .then( resData => {\r\n    // console.log(resData)\r\n    // resolve({ data: { link: resData } });\r\n    // })\r\n    // .catch(error => {\r\n    // console.log(error)\r\n    // reject(error.toString())\r\n    // })\r\n    // })\r\n  }\r\n\r\n\r\n  const submitBlogsForm = () => {\r\n    if(!Validation()){\r\n      return;\r\n    }\r\n\r\n    const newPost = {\r\n      _id: _id,\r\n      blogTitle: blogTitle,\r\n      blogCategory: blogCategory,\r\n\r\n \r\n      blogText: convertToRaw(blogText.getCurrentContent()),\r\n      //blogDetail: convertToRaw(blogDetail.getCurrentContent()),\r\n      parentId: parentId == \"\" ? null : parentId,\r\n      author: authorId == \"\" ? null : authorId,//\r\n      published: published,\r\n      publishedOn: publishedOn,\r\n      postedOn:postedOn,\r\n      blogImage: blogImage\r\n\r\n    }\r\n    console.log(\"POST: \", newPost) ;\r\n    if (_id == null) {\r\n      dispatch(addBlog(newPost)).then(() => setShow(false));\r\n    }\r\n    else {\r\n      dispatch(updateBlogs(newPost)).then(() => setBlogsDetailModal(false));\r\n    }\r\n    window.location.reload();\r\n    \r\n    //////\r\n    //   const form = new FormData();\r\n    //   form.append(\"blogTitle\", blogTitle);\r\n    //   form.append(\"blogCategory\", blogCategory);\r\n\r\n\r\n    //  // form.append(\"blogText\",draftToHtml(convertToRaw( blogText.getCurrentContent())));\r\n    //   //form.append(\"blogText\",convertToRaw( blogText.getCurrentContent()));\r\n    //   form.append(\"parentId\", parentId);\r\n    //   form.append(\"author\", authorId);\r\n    //   form.append(\"published\", published);\r\n    //   form.append(\"publishedOn\", publishedOn);\r\n    //   form.append(\"postedOn\",postedOn);\r\n\r\n    //   // for (let pic of blogImage) {\r\n    //   //   form.append(\"blogImage\", pic);\r\n    //   // }\r\n    //   form.append('blogText', convertToRaw( blogText.getCurrentContent()));\r\n    //   form.append('blogImage', blogImage);\r\n    //   console.log(form);\r\n    ///\r\n\r\n\r\n\r\n    //dispatch(addBlog(form)).then(() => setShow(false));\r\n  };\r\n  const handleShow = () =>{ \r\n    Reset();\r\n    setShow(true)}\r\n  ;\r\n  const editor = React.useRef(null);\r\n  function focusEditor() {\r\n    editor.current.focus();\r\n  }\r\n  //   const renderBlogs = (blogs) => {\r\n  //     let myCorses = [];\r\n  //     for (let cor of blogs) {\r\n  //       myCorses.push(\r\n  //             {\r\n  //                 label: cor.blogTitle,\r\n  //                 value: cor._id,\r\n  //                 children: cor.children.length > 0 && renderBlogs(cor.children)\r\n  //             }\r\n  //         );\r\n  //     }\r\n  //     return myCorses;\r\n  // }\r\n\r\n\r\n  const createCouseList = (blogs, options = []) => {\r\nif(blogs !=null){\r\n    for (let cor of blogs) {\r\n      options.push({\r\n        value: cor._id,\r\n        name: cor.blogTitle,\r\n        parentId: cor.parentId,\r\n        type: cor.type\r\n      });\r\n      // if (cor.children.length > 0) {\r\n      //   createCouseList(cor.children, options)\r\n      // }\r\n    }\r\n  }\r\n\r\n    return options;\r\n  }\r\n  const CouseList = createCouseList(blog.blogs);\r\n  // const createCouseList = (blogs, options = []) => {\r\n  //   for (let blog of blogs) {\r\n  //     options.push({ value: blog._id, name: blog.blogTitle });\r\n  //     if (blog.children.length > 0) {\r\n  //       createCouseList(blog.children, options);\r\n  //     }\r\n  //   }\r\n  // };\r\n  const createAothorList = (authors, options = []) => {\r\n    for (let author of authors) {\r\n      options.push({ value: author._id, name: author.authorName });\r\n      // if (author.children.length > 0) {\r\n      //   createAothorList(author.children, options);\r\n      // }\r\n    }\r\n\r\n    return options;\r\n  };\r\n\r\n  const handleblogImage = (e) => {\r\n    setblogImage(e.target.files[0]);\r\n  };\r\n\r\n  const renderBlogs = () => {\r\n   \r\n    // const columns = [\r\n    //   {\r\n    //     name: \"Title\",\r\n    //     selector: \"blogTitle\",\r\n    //     sortable: true\r\n    //   },\r\n    //   {\r\n    //     name: \"blogCategory\",\r\n    //     selector: \"blogCategory\",\r\n    //     sortable: true\r\n    //   },\r\n    //   {\r\n    //     name: \"published\",\r\n    //     selector: \"published\",\r\n    //     sortable: true,\r\n    //     right: true\r\n    //   }\r\n    // ];\r\n    // const BootyCheckbox = React.forwardRef(({ onClick, ...rest }, ref) => (\r\n    //   <div className=\"custom-control custom-checkbox\">\r\n    //     <input\r\n    //       type=\"checkbox\"\r\n    //       className=\"custom-control-input\"\r\n    //       ref={ref}\r\n    //       {...rest}\r\n    //     />\r\n    //     <label className=\"custom-control-label\" onClick={onClick} />\r\n    //   </div>\r\n    // ));\r\n    // return (\r\n    //   <div className=\"card\">\r\n    //     <DataTable\r\n    //       title=\"Blogs\"\r\n    //       columns={columns}\r\n    //       data={blog.blogs}\r\n    //       defaultSortField=\"blogTitle\"\r\n    //       pagination\r\n    //       selectableRows\r\n    //       selectableRowsComponent={BootyCheckbox}\r\n    //     />\r\n    //   </div>\r\n    return (\r\n      <div className=\"container\">\r\n <table id=\"dataTable\" className=\"display table table-striped table-bordered table-sm row-border hover\"  style={{ fontSize: 12 }} responsive=\"sm\">\r\n        <thead>\r\n          <tr>\r\n      \r\n            <th>#</th>\r\n            <th>blogTitle</th>\r\n            <th>blogCategory</th>\r\n            <th>published</th> \r\n             {/* <th>Author</th> */}\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n  {/* {(blogsDatatable!=null && blogsDatatable.length > 0)\r\n                ? blogsDatatable.map((blog, index) => ( */}\r\n          {(blog.blogs!=null && blog.blogs.length > 0)\r\n            ? blog.blogs.map((blog, index) => (\r\n            \r\n              <tr key={blog._id}>\r\n                <td>{index + 1}</td>\r\n                <td>{blog.blogTitle}</td>\r\n                <td>{blog.blogCategory}</td>\r\n                <td>{blog.publishedString}</td>\r\n                {/* <td>{blog.author}</td> */}\r\n                <td>\r\n                  <button onClick={() => showBlogsDetailsModal(blog)}>\r\n                    Edit\r\n                    </button>\r\n                    &nbsp;&nbsp;\r\n                  {/* <button\r\n                    onClick={() => {\r\n                      const payload = {\r\n                        blogId: blog._id,\r\n                      };\r\n                      const confirmBox = window.confirm(\r\n                        \"Do you really want to delete this ?\"\r\n                      )\r\n                      if (confirmBox === true) {\r\n                        dispatch(deleteBlogById(payload));\r\n                      }\r\n                    }}\r\n                  >\r\n                    del\r\n                    </button> */}\r\n                </td>\r\n              </tr>\r\n              \r\n            ))\r\n            : null}\r\n        </tbody>\r\n        </table>\r\n       \r\n        </div>\r\n   \r\n    );\r\n   \r\n    \r\n  };\r\n\r\n  const renderAddBlogsModal = () => {\r\n    return (\r\n      <Modal\r\n        size=\"lg\"//\"sm\"\r\n        show={show}\r\n        handleClose={handleClose}\r\n        modalTitle={\"Add New Blogs\"}\r\n        onSubmit={submitBlogsForm}\r\n      >\r\n        <Input\r\n          label=\"blogTitle\"\r\n          value={blogTitle}\r\n          placeholder={`blogTitle`}\r\n          onChange={(e) => setblogTitle(e.target.value)}\r\n        />\r\n        <Input\r\n          label=\"blogCategory\"\r\n          value={blogCategory}\r\n          placeholder={`blogCategory`}\r\n          onChange={(e) => setblogCategory(e.target.value)}\r\n        />\r\n    \r\n     \r\n        {/* <Input\r\n          label=\"blogText\"\r\n          value={blogText}\r\n          placeholder={`blogText`}\r\n          onChange={(e) => setblogText(e.target.value)}\r\n        /> */}\r\n        {/* <Editor editorState={this.state.editorState} onChange={this.onChange} /> */}\r\n        <div className=\"side-padding-20\"\r\n        // style={{ border: \"1px solid black\", minHeight: \"6em\", cursor: \"text\" }}\r\n\r\n        >\r\n          {/* <RichEditorExample\r\n        // ref={editor}\r\n       // initialEditorState={editorState}\r\n        wrapperClassName=\"wrapper-class\"\r\n        editorClassName=\"editor-class\"\r\n        toolbarClassName=\"toolbar-class\"\r\n        wrapperStyle={{ }}\r\n        editorStyle={{ height: \"300px\", padding: \"10px\"}}\r\n        toolbar={{ \r\n          image: { uploadCallback: uploadCallback, previewImage: true },\r\n          embedded: { embedCallback: embedCallback }\r\n        }}\r\n        //editorState={editorState}\r\n        value={blogText}\r\n        onChange={(e) => setblogText(e.target.value)}\r\n        placeholder=\"Write something!\"\r\n        handleBeforeInput={_handleBeforeInput}\r\n        handlePastedText={_handlePastedText}\r\n      /> */}\r\n          <Editor editorState={blogText}\r\n            wrapperClassName=\"wrapper-class\"\r\n            editorClassName=\"editor-class\"\r\n            toolbarClassName=\"toolbar-class\"\r\n            wrapperStyle={{ border: \"2px solid green\", marginBottom: \"20px\" }}\r\n            editorStyle={{ height: \"300px\", padding: \"10px\" }}\r\n            toolbar={{ image: { uploadCallback } }}\r\n            onEditorStateChange={editorState => setblogText(editorState)}\r\n          />\r\n\r\n{/* <Editor editorState={blogDetail}\r\n            wrapperClassName=\"wrapper-class\"\r\n            editorClassName=\"editor-class\"\r\n            toolbarClassName=\"toolbar-class\"\r\n            wrapperStyle={{ border: \"2px solid green\", marginBottom: \"20px\" }}\r\n            editorStyle={{ height: \"300px\", padding: \"10px\" }}\r\n            toolbar={{ image: { uploadCallback } }}\r\n            onEditorStateChange={editorState => setblogDetail(editorState)}\r\n          /> */}\r\n        </div>\r\n        <br />\r\n         <div dangerouslySetInnerHTML={convertDescriptionFromJSONToHTML()}></div> \r\n\r\n        <br />\r\n        <label>{blogImage}</label>\r\n        <img alt=\"\" src={generatePublicUrl(blogImage)} ></img>\r\n        <select\r\n          className=\"form-control\"\r\n          value={parentId}\r\n          onChange={(e) => setparentId(e.target.value)}\r\n        >\r\n          <option>select parent</option>\r\n          {CouseList.map((option) => (\r\n            <option key={option.value} value={option.value}>\r\n              {option.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <br></br>\r\n        <select\r\n          className=\"form-control\"\r\n          value={authorId}\r\n          onChange={(e) => setauthorId(e.target.value)}\r\n        >\r\n          <option>select author</option>\r\n          {createAothorList(author.authors).map((option) => (\r\n            <option key={option.value} value={option.value}>\r\n              {option.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <br></br>\r\n       \r\n        {/* {blogImage.length > 0\r\n          ? blogImage.map((pic, index) => (\r\n              <div key={index}>{pic.name}</div>\r\n            ))\r\n          : null} */}\r\n        {/* <input\r\n          type=\"file\"\r\n          name=\"blogImage\"\r\n          onChange={handleblogImage}\r\n        /> */}\r\n        {/* <Input\r\n                type=\"date\"\r\n          label=\"Published On\"\r\n          value={publishedOn}\r\n          placeholder={`publishedOn`}\r\n          onChange={(e) => setpublishedOn(e.target.value)}\r\n        /> */}\r\n         <label htmlFor=\"txtpostedOn\">Posted On </label>\r\n        <DatePicker\r\n         id=\"txtpostedOn\"\r\n         label=\"Posted On\"\r\n         value={postedOn}\r\n           onChange={(date) => setpostedOn(date)}\r\n         // onChange={(e) => setpostedOn(e.target.value)}\r\n         \r\n        />\r\n        <br></br>\r\n       <label htmlFor=\"txtpublishedOn\">Published On </label>\r\n        <DatePicker\r\n         id=\"txtpublishedOn\"\r\n         label=\"Published On\"\r\n         value={publishedOn}\r\n           onChange={(date) => setpublishedOn(date)}\r\n         // onChange={(e) => setpublishedOn(e.target.value)}\r\n         \r\n        />\r\n        <br></br>\r\n         <input\r\n          id=\"cbpublished\"\r\n          type=\"checkbox\"\r\n          name=\"published\"\r\n          label=\"published\"\r\n          value={published}\r\n          checked={published}\r\n          onChange={(e) => setpublished(e.target.checked)}\r\n        />\r\n\r\n        <label htmlFor=\"cbpublished\">Published</label>\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  const handleCloseBlogsDetailsModal = () => {\r\n    setBlogsDetailModal(false);\r\n  };\r\n\r\n  const showBlogsDetailsModal = (blog) => {\r\n    setBlogsDetailModal(true);\r\n    setBlogsDetails(blog);\r\n\r\n\r\n\r\n  };\r\n\r\n  const renderBlogsDetailsModal = () => {\r\n    if (!blogDetails) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <Modal\r\n        show={blogDetailModal}\r\n        handleClose={handleCloseBlogsDetailsModal}\r\n        modalTitle={\"Edit Blogs Details\"}\r\n        onSubmit={submitBlogsForm}//\r\n        size=\"lg\"//\"sm\"\r\n      >\r\n        <Input\r\n          type=\"hidden\"\r\n\r\n          value={_id}\r\n        />\r\n        <Input\r\n          label=\"blogTitle\"\r\n          value={blogTitle}\r\n          placeholder={`blogTitle`}\r\n          onChange={(e) => setblogTitle(e.target.value)}\r\n        />\r\n        <Input\r\n          label=\"blogCategory\"\r\n          value={blogCategory}\r\n          placeholder={`blogCategory`}\r\n          onChange={(e) => setblogCategory(e.target.value)}\r\n        />\r\n    \r\n    \r\n        {/* <Input\r\n          label=\"blogText\"\r\n          value={blogText}\r\n          placeholder={`blogText`}\r\n          onChange={(e) => setblogText(e.target.value)}\r\n        /> */}\r\n        {/* <Editor editorState={this.state.editorState} onChange={this.onChange} /> */}\r\n        <div className=\"side-padding-20\"\r\n        // style={{ border: \"1px solid black\", minHeight: \"6em\", cursor: \"text\" }}\r\n\r\n        >\r\n          {/* <RichEditorExample\r\n        // ref={editor}\r\n       // initialEditorState={editorState}\r\n        wrapperClassName=\"wrapper-class\"\r\n        editorClassName=\"editor-class\"\r\n        toolbarClassName=\"toolbar-class\"\r\n        wrapperStyle={{ }}\r\n        editorStyle={{ height: \"300px\", padding: \"10px\"}}\r\n        toolbar={{ \r\n          image: { uploadCallback: uploadCallback, previewImage: true },\r\n          embedded: { embedCallback: embedCallback }\r\n        }}\r\n        //editorState={editorState}\r\n        value={blogText}\r\n        onChange={(e) => setblogText(e.target.value)}\r\n        placeholder=\"Write something!\"\r\n        handleBeforeInput={_handleBeforeInput}\r\n        handlePastedText={_handlePastedText}\r\n      /> */}\r\n          <Editor\r\n\r\n// initialContentState={blogText}\r\n// editorContent={blogText}\r\n//onContentStateChange={this.onContentStateChange}\r\n\r\n\r\n            editorState={blogText}\r\n            wrapperClassName=\"wrapper-class\"\r\n            editorClassName=\"editor-class\"\r\n            toolbarClassName=\"toolbar-class\"\r\n            wrapperStyle={{ border: \"2px solid green\", marginBottom: \"20px\" }}\r\n            editorStyle={{ height: \"300px\", padding: \"10px\" }}\r\n            toolbar={{ image: { uploadCallback } }}\r\n            onEditorStateChange={editorState => setblogText(editorState)}\r\n          />\r\n\r\n{/* <Editor\r\n            editorState={blogDetail}\r\n            wrapperClassName=\"wrapper-class\"\r\n            editorClassName=\"editor-class\"\r\n            toolbarClassName=\"toolbar-class\"\r\n            wrapperStyle={{ border: \"2px solid green\", marginBottom: \"20px\" }}\r\n            editorStyle={{ height: \"300px\", padding: \"10px\" }}\r\n            toolbar={{ image: { uploadCallback } }}\r\n            onEditorStateChange={editorState => setblogDetail(editorState)}\r\n          /> */}\r\n        </div>\r\n        <br />\r\n        <div dangerouslySetInnerHTML={convertDescriptionFromJSONToHTML()}></div>\r\n\r\n        <br />\r\n        <label>{blogImage}</label>\r\n        <img alt=\"\" src={generatePublicUrl(blogImage)} ></img>\r\n        <select\r\n          className=\"form-control\"\r\n\r\n          value={blogDetails.parentId}\r\n          onChange={(e) => setparentId(e.target.value)}\r\n        >\r\n          <option>select parent</option>\r\n          {CouseList.map((option) => (\r\n            <option key={option.value} value={option.value}>\r\n              {option.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <br></br>\r\n        <select\r\n          className=\"form-control\"\r\n          value={blogDetails.author}\r\n\r\n          onChange={(e) => setauthorId(e.target.value)}\r\n        >\r\n          <option>select author</option>\r\n          {createAothorList(author.authors).map((option) => (\r\n            <option key={option.value} value={option.value}>\r\n              {option.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <br></br>\r\n     \r\n        {/* {blogImage.length > 0\r\n          ? blogImage.map((pic, index) => (\r\n              <div key={index}>{pic.name}</div>\r\n            ))\r\n          : null} */}\r\n        {/* <input\r\n          type=\"file\"\r\n          name=\"blogImage\"\r\n          onChange={handleblogImage}\r\n        /> */}\r\n        {/* <Input\r\n                type=\"date\"\r\n          label=\"Published On\"\r\n          defaultValue={publishedOn}\r\n          value={publishedOn}\r\n         // value={dateFormat( blogDetails.publishedOn,'MM/dd/yyyy')}\r\n          placeholder={`publishedOn`}\r\n          onChange={(e) => setpublishedOn(e.target.value)}\r\n        /> */}\r\n        {/* <DatePicker\r\n      selected={publishedOn}\r\n      onChange={(date) => setpublishedOn(date)}\r\n      calendarStartDay={3}\r\n    /> */}\r\n      <label htmlFor=\"txtpostedOn\">Posted On </label>\r\n        <DatePicker\r\n         id=\"txtpostedOn\"\r\n         label=\"Posted On\"\r\n         value={postedOn}\r\n           onChange={(date) => setpostedOn(date)}\r\n         // onChange={(e) => setpostedOn(e.target.value)}\r\n         \r\n        />\r\n         <ReactDatePicker\r\n              // showTimeSelect\r\n              // dateFormat=\"Pp\"\r\n              // selected={postedOn}\r\n            //  value={postedOn}\r\n               valueName={postedOn} // DateSelect value's name is selected\r\n              onChange={(date) =>setpostedOn( date)}\r\n              //onChange={([selected]) => selected}\r\n              name=\"postedOn\"\r\n              className=\"input\"\r\n              placeholderText=\"Select date\"\r\n            />\r\n        <br></br>\r\n         <label htmlFor=\"txtpublishedOn\">Published On </label>\r\n        <DatePicker\r\n          id=\"txtpublishedOn\"\r\n         value={publishedOn}\r\n           onChange={(date) => setpublishedOn(date)}\r\n         // onChange={(e) => setpublishedOn(e.target.value)}\r\n         \r\n        />\r\n         <ReactDatePicker\r\n              // showTimeSelect\r\n              // dateFormat=\"Pp\"\r\n              // selected={publishedOn}\r\n            //  value={publishedOn}\r\n               valueName={publishedOn} // DateSelect value's name is selected\r\n              onChange={(date) =>setpublishedOn( date)}\r\n              //onChange={([selected]) => selected}\r\n              name=\"publishedOn\"\r\n              className=\"input\"\r\n              placeholderText=\"Select date\"\r\n            />\r\n        <br></br>\r\n         <input\r\n          id=\"cbpublished\"\r\n          type=\"checkbox\"\r\n          name=\"published\"\r\n          label=\"published\"\r\n          value={published}\r\n          checked={published}\r\n          onChange={(e) => setpublished(e.target.checked)}\r\n        />\r\n\r\n        <label htmlFor=\"cbpublished\">Published</label>\r\n   \r\n        {/* <Row>\r\n          <Col md=\"6\">\r\n            <label className=\"key\">Name</label>\r\n            <p className=\"value\">{blogDetails.name}</p>\r\n          </Col>\r\n          <Col md=\"6\">\r\n            <label className=\"key\">Price</label>\r\n            <p className=\"value\">{blogDetails.price}</p>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md=\"6\">\r\n            <label className=\"key\">Quantity</label>\r\n            <p className=\"value\">{blogDetails.quantity}</p>\r\n          </Col>\r\n          <Col md=\"6\">\r\n            <label className=\"key\">Category</label>\r\n            <p className=\"value\">{blogDetails.category.name}</p>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <label className=\"key\">Description</label>\r\n            <p className=\"value\">{blogDetails.description}</p>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <label className=\"key\">Blogs Pictures</label>\r\n            <div style={{ display: \"flex\" }}>\r\n              {blogDetails.blogPictures.map((picture) => (\r\n                <div className=\"blogImgContainer\">\r\n                  <img src={picture.img} alt=\"\" />\r\n                  \r\n                </div>\r\n              ))}\r\n            </div>\r\n          </Col>\r\n        </Row> */}\r\n      </Modal>\r\n    );\r\n  };\r\n  return (\r\n    <Layout sidebar>\r\n      <Container>\r\n        <Row>\r\n          <Col md={12}>\r\n            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n              <h3>Blogs</h3>\r\n              <button onClick={handleShow}>Add</button>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>{renderBlogs()}</Col>\r\n        </Row>\r\n      </Container>\r\n      {renderAddBlogsModal()}\r\n      {renderBlogsDetailsModal()}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Blogs","import React, { useState, useEffect,useRef } from \"react\";\r\nimport Layout from \"../../components/Layout\";\r\nimport { Container, Row, Col, Table } from \"react-bootstrap\";\r\nimport Input from \"../../components/UI/Input\";\r\nimport Modal from \"../../components/UI/Modal\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { upload, findAllCourses, UploadCourse, addCourse, updateCourses, deleteCourseById } from \"../../actions\";\r\n\r\nimport RichEditorExample from '../../components/UI/Input/draft';\r\nimport \"./style.css\";\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport { EditorState, convertToRaw, convertFromRaw, uploadCallback, embedCallback } from \"draft-js\";\r\nimport '../../../node_modules/react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\nimport { stateToHTML } from 'draft-js-export-html';\r\nimport dateFormat from 'dateformat';\r\nimport DatePicker from 'react-date-picker';\r\nimport ReactDatePicker from 'react-datepicker';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport {generatePublicUrl} from '../../urlConfig';\r\n// import DataTable from \"react-data-table-component\";\r\n// import \"bootstrap\";\r\n\r\n// import \"../../../node_modules/bootstrap/dist/css/bootstrap.min.css\";\r\n\r\n//import {stateToHTML} from 'draft-js-export-html'\r\nimport draftToHtml from 'draftjs-to-html';\r\n\r\n\r\n//Bootstrap and jQuery libraries\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'jquery/dist/jquery.min.js';\r\n//Datatable Modules\r\nimport \"datatables.net-dt/js/dataTables.dataTables\"\r\nimport \"datatables.net-dt/css/jquery.dataTables.min.css\"\r\nimport $ from 'jquery'; \r\nimport { NavLink } from \"react-router-dom\";\r\n/**\r\n* @author\r\n* @function Courses\r\n**/\r\n\r\nconst Courses = (props) => {\r\n\r\n  const [_id, set_id] = useState(null);\r\n  const [courseTitle, setcourseTitle] = useState(\"\");\r\n  const [courseDesc, setcourseDesc] = useState(\"\");\r\n  const [courseStudPrice, setcourseStudPrice] = useState(\"0\");\r\n  const [snapshotText, setsnapshotText] = useState(\"\");\r\n  const [courseDetail, setcourseDetail] = useState(EditorState.createEmpty());\r\n  const [parentId, setparentId] = useState(\"\");\r\n  const [authorId, setauthorId] = useState(\"\");\r\n  //const [courseTumbImage, setcourseTumbImage] = useState([]);\r\n  const [courseTumbImage, setcourseTumbImage] = useState(\"\");\r\n  const [published, setpublished] = useState(false);\r\n  const [publishedOn, setpublishedOn] = useState(new Date());\r\n  const [show, setShow] = useState(false);\r\n  const [courseDetailModal, setCoursesDetailModal] = useState(false);\r\n\r\n  const [courseDetails, setCoursesDetails] = useState(null);\r\n\r\n  const [coursesDatatable, setcoursesDatatable] = useState(null);\r\n\r\n\r\n\r\n  const author = useSelector((state) => state.author);\r\n  const course = useSelector((state) => state.course);\r\n\r\n\r\n//Declare data store variables\r\n// constructor(props) {\r\n  // super(props)\r\n  //   this.state = {\r\n  //     data: [],\r\n  //     cols:[]\r\n  //           }\r\n  //  }\r\n\r\n  //Get all users details and table columns names in bootstrap table\r\n  // axios.get('http://localhost/reactimageupload.php').then(res => \r\n  // {\r\n  // //Storing users detail in state array object\r\n  // this.setState({data: res.data.rows, cols: res.data.cols});\r\n  //    }); \r\n    \r\n  //init Datatable  \r\n  setTimeout(()=>{                        \r\n  var Workingtable=$('#dataTable').DataTable(\r\n    {retrieve: true,\r\n      destroy: true,\r\n      \"lengthMenu\": [[5, 10, 15, -1], [5, 10, 15, \"All\"]]\r\n    }\r\n  );\r\n  Workingtable.on('order.dt search.dt', function () {\r\n    Workingtable.column(0, { search: 'applied', order: 'applied' }).nodes().each(function (cell, i) {\r\n        cell.innerHTML = i + 1;\r\n    });\r\n}).draw();\r\n\r\n}, 3000);\r\n\r\n\r\n\r\n// useEffect(() => {\r\n//   if (course.courses!=null) {\r\n//     var Workingtable=$('#dataTable').DataTable(\r\n//       {retrieve: true,\r\n//         destroy: true,\r\n//         \"lengthMenu\": [[5, 10, 15, -1], [5, 10, 15, \"All\"]]\r\n//       }\r\n//     );\r\n//     Workingtable.on('order.dt search.dt', function () {\r\n//       Workingtable.column(0, { search: 'applied', order: 'applied' }).nodes().each(function (cell, i) {\r\n//           cell.innerHTML = i + 1;\r\n//       });\r\n//   }).draw();\r\n//   }\r\n\r\n   \r\n \r\n\r\n//}, [course.courses])\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    dynamicImportFunc()\r\n    //fetchCategories()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (courseDetails) {\r\n\r\n\r\n      //console.log(\"PARAM: \", props.match.params.id)\r\n      // fetch(`http://localhost:5000/api/posts/${props.match.params.id}`)\r\n      //     .then(res => res.json())\r\n      //     .then(data => {\r\n      set_id(courseDetails._id);\r\n      setcourseTitle(courseDetails.courseTitle);\r\n      setcourseDesc(courseDetails.courseDesc);\r\n      setcourseStudPrice(courseDetails.courseStudPrice);\r\n      setsnapshotText(courseDetails.snapshotText);\r\n\r\n\r\n      console.log(JSON.stringify(courseDetails.courseDetail));\r\n\r\n      let contentState = convertFromRaw(courseDetails.courseDetail);\r\n      let editorState = EditorState.createWithContent(contentState);\r\n      setcourseDetail(editorState);\r\n      //  setTimeut(()=> {\r\n      //setCurrentValue(4);\r\n\r\n      setparentId(courseDetails.parentId);\r\n      setauthorId(courseDetails.author);//\r\n      setcourseTumbImage(courseDetails.courseTumbImage);\r\n      setpublished(courseDetails.published);\r\n      //setpublishedOn(courseDetails.publishedOn)\r\n      setpublishedOn(dateFormat(courseDetails.publishedOn, 'm/d/yyyy'));\r\n      // }, 4000);\r\n      // console.log(courseDetails.parentId);\r\n      // console.log(courseDetails.author);\r\n       console.log(dateFormat(courseDetails.publishedOn, 'm/d/yyyy'));\r\n      // })\r\n      // .catch(err => console.log(\"An error occured:\", err))\r\n    }\r\n\r\n   \r\n \r\n\r\n  }, [courseDetails])\r\n  // useEffect(() => {\r\n  //   setTimeout(() => {\r\n  //     console.log(course.courses);\r\n  //     //$('#dataTable').DataTable().destroy();\r\n  //    // setcourses([[0,\"Vivek\"],[1,\"Darshita\"]]);\r\n  //     setcoursesDatatable(course.courses);\r\n  //   },2000);\r\n  // },[]);\r\n\r\n  useEffect(() => {\r\n     \r\n  },[]);\r\n\r\n  //const courseTitleRef = useRef();\r\n  \r\n\r\n\r\n\r\n  const Reset=()=>{\r\n    set_id(null);\r\n    setcourseTitle(\"\");\r\n    setcourseDesc(\"\");\r\n    setcourseStudPrice(\"0\");\r\n    setsnapshotText(\"\");\r\n    setcourseDetail(EditorState.createEmpty());\r\n    setparentId(\"\");\r\n    setauthorId(\"\");\r\n    setcourseTumbImage(\"\");\r\n    setpublished(false);\r\n    setpublishedOn(new Date());\r\n    setShow(false);\r\n  }\r\n\r\n  const Validation=()=>{\r\n    //alert(JSON.stringify( courseDetail));\r\n    if (courseTitle === \"\") {\r\n      \r\n      alert('courseTitle is required');\r\n      return;\r\n  }\r\n  if (courseDesc === \"\") {\r\n      \r\n    alert('courseDesc is required');\r\n    return;\r\n}\r\nif (snapshotText === \"\") {\r\n      \r\n  alert('snapshotText is required');\r\n  return;\r\n}\r\nif (courseDetail === \"\") {\r\n      \r\n  alert('courseDetail is required');\r\n  return;\r\n}\r\nif (authorId === \"\") {\r\n      \r\n  alert('author is required');\r\n  return;\r\n}\r\n  return true;\r\n  }\r\n\r\n  const dynamicImportFunc = async () => {\r\n    if (typeof window !== 'undefined') {\r\n      const { default: htmlToDraft } = await import('html-to-draftjs')\r\n      // convertHtmlToDraft = htmlToDraft\r\n      if (props.post) {\r\n        const contentBlock = htmlToDraft(props.post.courseDetail)\r\n        console.log(\"CONTENTBLOCK\", contentBlock)\r\n        if (contentBlock) {\r\n          const contentState = courseDetail.createFromBlockArray(contentBlock.contentBlocks)\r\n          const editorState = EditorState.createWithContent(contentState)\r\n          console.log(editorState)\r\n\r\n          setcourseDetail(editorState)\r\n        }\r\n      }\r\n    }\r\n\r\n  }\r\n  const convertFromJSONToHTML = (text) => {\r\n    try {\r\n      return { __html: stateToHTML(convertFromRaw(text)) }\r\n    } catch (exp) {\r\n      console.log(exp)\r\n      return { __html: 'Error' }\r\n    }\r\n  }\r\n  //<div dangerouslySetInnerHTML={convertFromJSONToHTML(props.post.description)} > </div >\r\n\r\n\r\n  const convertDescriptionFromJSONToHTML = () => {\r\n    try {\r\n      return { __html: stateToHTML(courseDetail.getCurrentContent()) }\r\n    } catch (exp) {\r\n      console.log(exp)\r\n      return { __html: 'Error' }\r\n    }\r\n  }\r\n\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClose = () => {\r\n    setShow(false);\r\n  };\r\n  // const [editorState, setEditorState] = React.useState(\r\n  //   EditorState.createEmpty()\r\n  // );\r\n  const _handleBeforeInput = () => {\r\n\r\n  }\r\n\r\n  const _handlePastedText = () => {\r\n\r\n  }\r\n\r\n  const uploadCallback = (file) => {//http://localhost:5000/\r\n    const formData = new FormData();\r\n    formData.append('courseTumbImage', file);\r\n    dispatch(UploadCourse(formData)).then(() => setcourseTumbImage(localStorage.getItem(\"filename\"))\r\n\r\n    );\r\n\r\n\r\n    // return new Promise((resolve, reject) => {\r\n    // fetch(api+'/upload', {\r\n    // method: 'POST',\r\n    // body: formData\r\n    // })\r\n    // .then(res => res.json())\r\n    // .then( resData => {\r\n    // console.log(resData)\r\n    // resolve({ data: { link: resData } });\r\n    // })\r\n    // .catch(error => {\r\n    // console.log(error)\r\n    // reject(error.toString())\r\n    // })\r\n    // })\r\n  }\r\n\r\n\r\n  const submitCoursesForm = () => {\r\n    if(!Validation()){\r\n      return;\r\n    }\r\n\r\n    const newPost = {\r\n      _id: _id,\r\n      courseTitle: courseTitle,\r\n      courseDesc: courseDesc,\r\n      courseStudPrice: courseStudPrice,\r\n      snapshotText: snapshotText,\r\n      courseDetail: convertToRaw(courseDetail.getCurrentContent()),\r\n      parentId: parentId == \"\" ? null : parentId,\r\n      author: authorId == \"\" ? null : authorId,//\r\n      published: published,\r\n      publishedOn: publishedOn,\r\n      courseTumbImage: courseTumbImage\r\n\r\n    }\r\n    console.log(\"POST: \", newPost)\r\n    if (_id == null) {\r\n      dispatch(addCourse(newPost)).then(() => setShow(false));\r\n    }\r\n    else {\r\n      dispatch(updateCourses(newPost)).then(() => setCoursesDetailModal(false));\r\n    }\r\n    window.location.reload();\r\n    \r\n    //////\r\n    //   const form = new FormData();\r\n    //   form.append(\"courseTitle\", courseTitle);\r\n    //   form.append(\"courseDesc\", courseDesc);\r\n    //   form.append(\"courseStudPrice\", courseStudPrice);\r\n    //   form.append(\"snapshotText\", snapshotText);\r\n    //  // form.append(\"courseDetail\",draftToHtml(convertToRaw( courseDetail.getCurrentContent())));\r\n    //   //form.append(\"courseDetail\",convertToRaw( courseDetail.getCurrentContent()));\r\n    //   form.append(\"parentId\", parentId);\r\n    //   form.append(\"author\", authorId);\r\n    //   form.append(\"published\", published);\r\n    //   form.append(\"publishedOn\", publishedOn);\r\n\r\n    //   // for (let pic of courseTumbImage) {\r\n    //   //   form.append(\"courseTumbImage\", pic);\r\n    //   // }\r\n    //   form.append('courseDetail', convertToRaw( courseDetail.getCurrentContent()));\r\n    //   form.append('courseTumbImage', courseTumbImage);\r\n    //   console.log(form);\r\n    ///\r\n\r\n\r\n\r\n    //dispatch(addCourse(form)).then(() => setShow(false));\r\n  };\r\n  const handleShow = () =>{ \r\n    Reset();\r\n    setShow(true)}\r\n  ;\r\n  const editor = React.useRef(null);\r\n  function focusEditor() {\r\n    editor.current.focus();\r\n  }\r\n  //   const renderCourses = (courses) => {\r\n  //     let myCorses = [];\r\n  //     for (let cor of courses) {\r\n  //       myCorses.push(\r\n  //             {\r\n  //                 label: cor.courseTitle,\r\n  //                 value: cor._id,\r\n  //                 children: cor.children.length > 0 && renderCourses(cor.children)\r\n  //             }\r\n  //         );\r\n  //     }\r\n  //     return myCorses;\r\n  // }\r\n\r\n\r\n  const createCouseList = (courses, options = []) => {\r\nif(courses !=null){\r\n    for (let cor of courses) {\r\n      options.push({\r\n        value: cor._id,\r\n        name: cor.courseTitle,\r\n        parentId: cor.parentId,\r\n        type: cor.type\r\n      });\r\n      // if (cor.children.length > 0) {\r\n      //   createCouseList(cor.children, options)\r\n      // }\r\n    }\r\n  }\r\n\r\n    return options;\r\n  }\r\n  const CouseList = createCouseList(course.courses);\r\n  // const createCouseList = (courses, options = []) => {\r\n  //   for (let course of courses) {\r\n  //     options.push({ value: course._id, name: course.courseTitle });\r\n  //     if (course.children.length > 0) {\r\n  //       createCouseList(course.children, options);\r\n  //     }\r\n  //   }\r\n  // };\r\n  const createAothorList = (authors, options = []) => {\r\n    for (let author of authors) {\r\n      options.push({ value: author._id, name: author.authorName });\r\n      // if (author.children.length > 0) {\r\n      //   createAothorList(author.children, options);\r\n      // }\r\n    }\r\n\r\n    return options;\r\n  };\r\n\r\n  const handlecourseTumbImage = (e) => {\r\n    setcourseTumbImage(e.target.files[0]);\r\n  };\r\n\r\n  const renderCourses = () => {\r\n   \r\n    // const columns = [\r\n    //   {\r\n    //     name: \"Title\",\r\n    //     selector: \"courseTitle\",\r\n    //     sortable: true\r\n    //   },\r\n    //   {\r\n    //     name: \"courseDesc\",\r\n    //     selector: \"courseDesc\",\r\n    //     sortable: true\r\n    //   },\r\n    //   {\r\n    //     name: \"published\",\r\n    //     selector: \"published\",\r\n    //     sortable: true,\r\n    //     right: true\r\n    //   }\r\n    // ];\r\n    // const BootyCheckbox = React.forwardRef(({ onClick, ...rest }, ref) => (\r\n    //   <div className=\"custom-control custom-checkbox\">\r\n    //     <input\r\n    //       type=\"checkbox\"\r\n    //       className=\"custom-control-input\"\r\n    //       ref={ref}\r\n    //       {...rest}\r\n    //     />\r\n    //     <label className=\"custom-control-label\" onClick={onClick} />\r\n    //   </div>\r\n    // ));\r\n    // return (\r\n    //   <div className=\"card\">\r\n    //     <DataTable\r\n    //       title=\"Courses\"\r\n    //       columns={columns}\r\n    //       data={course.courses}\r\n    //       defaultSortField=\"courseTitle\"\r\n    //       pagination\r\n    //       selectableRows\r\n    //       selectableRowsComponent={BootyCheckbox}\r\n    //     />\r\n    //   </div>\r\n    return (\r\n      <div className=\"container\">\r\n <table id=\"dataTable\" className=\"display table table-striped table-bordered table-sm row-border hover\"  style={{ fontSize: 12 }} responsive=\"sm\">\r\n        <thead>\r\n          <tr>\r\n      \r\n            <th>#</th>\r\n            <th>courseTitle</th>\r\n            <th>courseDesc</th>\r\n            <th>published</th> \r\n             {/* <th>Author</th> */}\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n  {/* {(coursesDatatable!=null && coursesDatatable.length > 0)\r\n                ? coursesDatatable.map((course, index) => ( */}\r\n          {(course.courses!=null && course.courses.length > 0)\r\n            ? course.courses.map((course, index) => (\r\n            \r\n              <tr key={course._id}>\r\n                <td>{index + 1}</td>\r\n                <td>{course.courseTitle}</td>\r\n                <td>{course.courseDesc}</td>\r\n                <td>{course.publishedString}</td>\r\n                {/* <td>{course.author}</td> */}\r\n                <td>\r\n                  <button onClick={() => showCoursesDetailsModal(course)}>\r\n                    Edit\r\n                    </button>\r\n                    &nbsp;&nbsp;\r\n                    {/* <button onClick={() => showCoursesDetailsModal(course)}>\r\n                    Curriculum\r\n                    </button> */}\r\n                  \r\n                    <NavLink key={course._id} to={`/curriculums/${course._id}&${course.courseTitle}`}>\r\n                    curriculum\r\n                              </NavLink>\r\n                  {/* <button\r\n                    onClick={() => {\r\n                      const payload = {\r\n                        courseId: course._id,\r\n                      };\r\n                      const confirmBox = window.confirm(\r\n                        \"Do you really want to delete this ?\"\r\n                      )\r\n                      if (confirmBox === true) {\r\n                        dispatch(deleteCourseById(payload));\r\n                      }\r\n                    }}\r\n                  >\r\n                    del\r\n                    </button> */}\r\n                </td>\r\n              </tr>\r\n              \r\n            ))\r\n            : null}\r\n        </tbody>\r\n        </table>\r\n       \r\n        </div>\r\n   \r\n    );\r\n   \r\n    \r\n  };\r\n\r\n  const renderAddCoursesModal = () => {\r\n    return (\r\n      <Modal\r\n        size=\"lg\"//\"sm\"\r\n        show={show}\r\n        handleClose={handleClose}\r\n        modalTitle={\"Add New Courses\"}\r\n        onSubmit={submitCoursesForm}\r\n      >\r\n        <Input\r\n          label=\"courseTitle\"\r\n          value={courseTitle}\r\n          placeholder={`courseTitle`}\r\n          onChange={(e) => setcourseTitle(e.target.value)}\r\n        />\r\n        <Input\r\n          label=\"courseDesc\"\r\n          value={courseDesc}\r\n          placeholder={`courseDesc`}\r\n          onChange={(e) => setcourseDesc(e.target.value)}\r\n        />\r\n        <Input\r\n          label=\"courseStudPrice\"\r\n          type=\"number\"\r\n          value={courseStudPrice}\r\n          placeholder={`courseStudPrice`}\r\n          onChange={(e) => setcourseStudPrice(e.target.value)}\r\n        />\r\n        <Input\r\n          label=\"snapshotText\"\r\n          value={snapshotText}\r\n          placeholder={`snapshotText`}\r\n          onChange={(e) => setsnapshotText(e.target.value)}\r\n        />\r\n        {/* <Input\r\n          label=\"courseDetail\"\r\n          value={courseDetail}\r\n          placeholder={`courseDetail`}\r\n          onChange={(e) => setcourseDetail(e.target.value)}\r\n        /> */}\r\n        {/* <Editor editorState={this.state.editorState} onChange={this.onChange} /> */}\r\n        <div className=\"side-padding-20\"\r\n        // style={{ border: \"1px solid black\", minHeight: \"6em\", cursor: \"text\" }}\r\n\r\n        >\r\n          {/* <RichEditorExample\r\n        // ref={editor}\r\n       // initialEditorState={editorState}\r\n        wrapperClassName=\"wrapper-class\"\r\n        editorClassName=\"editor-class\"\r\n        toolbarClassName=\"toolbar-class\"\r\n        wrapperStyle={{ }}\r\n        editorStyle={{ height: \"300px\", padding: \"10px\"}}\r\n        toolbar={{ \r\n          image: { uploadCallback: uploadCallback, previewImage: true },\r\n          embedded: { embedCallback: embedCallback }\r\n        }}\r\n        //editorState={editorState}\r\n        value={courseDetail}\r\n        onChange={(e) => setcourseDetail(e.target.value)}\r\n        placeholder=\"Write something!\"\r\n        handleBeforeInput={_handleBeforeInput}\r\n        handlePastedText={_handlePastedText}\r\n      /> */}\r\n          <Editor editorState={courseDetail}\r\n            wrapperClassName=\"wrapper-class\"\r\n            editorClassName=\"editor-class\"\r\n            toolbarClassName=\"toolbar-class\"\r\n            wrapperStyle={{ border: \"2px solid green\", marginBottom: \"20px\" }}\r\n            editorStyle={{ height: \"300px\", padding: \"10px\" }}\r\n            toolbar={{ image: { uploadCallback } }}\r\n            onEditorStateChange={editorState => setcourseDetail(editorState)}\r\n          />\r\n        </div>\r\n        <br />\r\n         <div dangerouslySetInnerHTML={convertDescriptionFromJSONToHTML()}></div> \r\n\r\n        <br />\r\n        <label>{courseTumbImage}</label>\r\n        <img alt=\"\" src={generatePublicUrl(courseTumbImage)} ></img>\r\n        <select\r\n          className=\"form-control\"\r\n          value={parentId}\r\n          onChange={(e) => setparentId(e.target.value)}\r\n        >\r\n          <option>select parent</option>\r\n          {CouseList.map((option) => (\r\n            <option key={option.value} value={option.value}>\r\n              {option.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <br></br>\r\n        <select\r\n          className=\"form-control\"\r\n          value={authorId}\r\n          onChange={(e) => setauthorId(e.target.value)}\r\n        >\r\n          <option>select author</option>\r\n          {createAothorList(author.authors).map((option) => (\r\n            <option key={option.value} value={option.value}>\r\n              {option.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <br></br>\r\n       \r\n        {/* {courseTumbImage.length > 0\r\n          ? courseTumbImage.map((pic, index) => (\r\n              <div key={index}>{pic.name}</div>\r\n            ))\r\n          : null} */}\r\n        {/* <input\r\n          type=\"file\"\r\n          name=\"courseTumbImage\"\r\n          onChange={handlecourseTumbImage}\r\n        /> */}\r\n        {/* <Input\r\n                type=\"date\"\r\n          label=\"Published On\"\r\n          value={publishedOn}\r\n          placeholder={`publishedOn`}\r\n          onChange={(e) => setpublishedOn(e.target.value)}\r\n        /> */}\r\n       <label htmlFor=\"txtpublishedOn\">Published On </label>\r\n        <DatePicker\r\n         id=\"txtpublishedOn\"\r\n         label=\"Published On\"\r\n         value={publishedOn}\r\n           onChange={(date) => setpublishedOn(date)}\r\n         // onChange={(e) => setpublishedOn(e.target.value)}\r\n         \r\n        />\r\n        <br></br>\r\n         <input\r\n          id=\"cbpublished\"\r\n          type=\"checkbox\"\r\n          name=\"published\"\r\n          label=\"published\"\r\n          value={published}\r\n          checked={published}\r\n          onChange={(e) => setpublished(e.target.checked)}\r\n        />\r\n\r\n        <label htmlFor=\"cbpublished\">Published</label>\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  const handleCloseCoursesDetailsModal = () => {\r\n    setCoursesDetailModal(false);\r\n  };\r\n\r\n  const showCoursesDetailsModal = (course) => {\r\n    setCoursesDetailModal(true);\r\n    setCoursesDetails(course);\r\n\r\n\r\n\r\n  };\r\n\r\n  const renderCoursesDetailsModal = () => {\r\n    if (!courseDetails) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <Modal\r\n        show={courseDetailModal}\r\n        handleClose={handleCloseCoursesDetailsModal}\r\n        modalTitle={\"Edit Courses Details\"}\r\n        onSubmit={submitCoursesForm}//\r\n        size=\"lg\"//\"sm\"\r\n      >\r\n        <Input\r\n          type=\"hidden\"\r\n\r\n          value={_id}\r\n        />\r\n        <Input\r\n          label=\"courseTitle\"\r\n          value={courseTitle}\r\n          placeholder={`courseTitle`}\r\n          onChange={(e) => setcourseTitle(e.target.value)}\r\n        />\r\n        <Input\r\n          label=\"courseDesc\"\r\n          value={courseDesc}\r\n          placeholder={`courseDesc`}\r\n          onChange={(e) => setcourseDesc(e.target.value)}\r\n        />\r\n        <Input\r\n          label=\"courseStudPrice\"\r\n          type=\"number\"\r\n          value={courseStudPrice}\r\n          placeholder={`courseStudPrice`}\r\n          onChange={(e) => setcourseStudPrice(e.target.value)}\r\n        />\r\n        <Input\r\n          label=\"snapshotText\"\r\n          value={snapshotText}\r\n          placeholder={`snapshotText`}\r\n          onChange={(e) => setsnapshotText(e.target.value)}\r\n        />\r\n        {/* <Input\r\n          label=\"courseDetail\"\r\n          value={courseDetail}\r\n          placeholder={`courseDetail`}\r\n          onChange={(e) => setcourseDetail(e.target.value)}\r\n        /> */}\r\n        {/* <Editor editorState={this.state.editorState} onChange={this.onChange} /> */}\r\n        <div className=\"side-padding-20\"\r\n        // style={{ border: \"1px solid black\", minHeight: \"6em\", cursor: \"text\" }}\r\n\r\n        >\r\n          {/* <RichEditorExample\r\n        // ref={editor}\r\n       // initialEditorState={editorState}\r\n        wrapperClassName=\"wrapper-class\"\r\n        editorClassName=\"editor-class\"\r\n        toolbarClassName=\"toolbar-class\"\r\n        wrapperStyle={{ }}\r\n        editorStyle={{ height: \"300px\", padding: \"10px\"}}\r\n        toolbar={{ \r\n          image: { uploadCallback: uploadCallback, previewImage: true },\r\n          embedded: { embedCallback: embedCallback }\r\n        }}\r\n        //editorState={editorState}\r\n        value={courseDetail}\r\n        onChange={(e) => setcourseDetail(e.target.value)}\r\n        placeholder=\"Write something!\"\r\n        handleBeforeInput={_handleBeforeInput}\r\n        handlePastedText={_handlePastedText}\r\n      /> */}\r\n          <Editor\r\n            editorState={courseDetail}\r\n            wrapperClassName=\"wrapper-class\"\r\n            editorClassName=\"editor-class\"\r\n            toolbarClassName=\"toolbar-class\"\r\n            wrapperStyle={{ border: \"2px solid green\", marginBottom: \"20px\" }}\r\n            editorStyle={{ height: \"300px\", padding: \"10px\" }}\r\n            toolbar={{ image: { uploadCallback } }}\r\n            onEditorStateChange={editorState => setcourseDetail(editorState)}\r\n          />\r\n        </div>\r\n        <br />\r\n        <div dangerouslySetInnerHTML={convertDescriptionFromJSONToHTML()}></div>\r\n\r\n        <br />\r\n        <img alt=\"\" src={generatePublicUrl(courseTumbImage)} ></img>\r\n        <label>{courseTumbImage}</label>\r\n        <select\r\n          className=\"form-control\"\r\n\r\n          value={courseDetails.parentId}\r\n          onChange={(e) => setparentId(e.target.value)}\r\n        >\r\n          <option>select parent</option>\r\n          {CouseList.map((option) => (\r\n            <option key={option.value} value={option.value}>\r\n              {option.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <br></br>\r\n        <select\r\n          className=\"form-control\"\r\n          value={courseDetails.author}\r\n\r\n          onChange={(e) => setauthorId(e.target.value)}\r\n        >\r\n          <option>select author</option>\r\n          {createAothorList(author.authors).map((option) => (\r\n            <option key={option.value} value={option.value}>\r\n              {option.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <br></br>\r\n     \r\n        {/* {courseTumbImage.length > 0\r\n          ? courseTumbImage.map((pic, index) => (\r\n              <div key={index}>{pic.name}</div>\r\n            ))\r\n          : null} */}\r\n        {/* <input\r\n          type=\"file\"\r\n          name=\"courseTumbImage\"\r\n          onChange={handlecourseTumbImage}\r\n        /> */}\r\n        {/* <Input\r\n                type=\"date\"\r\n          label=\"Published On\"\r\n          defaultValue={publishedOn}\r\n          value={publishedOn}\r\n         // value={dateFormat( courseDetails.publishedOn,'MM/dd/yyyy')}\r\n          placeholder={`publishedOn`}\r\n          onChange={(e) => setpublishedOn(e.target.value)}\r\n        /> */}\r\n        {/* <DatePicker\r\n      selected={publishedOn}\r\n      onChange={(date) => setpublishedOn(date)}\r\n      calendarStartDay={3}\r\n    /> */}\r\n         <label htmlFor=\"txtpublishedOn\">Published On </label>\r\n        <DatePicker\r\n          id=\"txtpublishedOn\"\r\n          name=\"publishedOn\"\r\n          className=\"input\"\r\n         value={publishedOn}\r\n         valueName={publishedOn}\r\n           onChange={(date) => setpublishedOn(date)}\r\n         // onChange={(e) => setpublishedOn(e.target.value)}\r\n         \r\n        />\r\n         <ReactDatePicker\r\n              // showTimeSelect\r\n              // dateFormat=\"Pp\"\r\n              // selected={publishedOn}\r\n            //  value={publishedOn}\r\n               valueName={publishedOn} // DateSelect value's name is selected\r\n              onChange={(date) =>setpublishedOn( date)}\r\n              //onChange={([selected]) => selected}\r\n              name=\"publishedOn\"\r\n              className=\"input\"\r\n              placeholderText=\"Select date\"\r\n            />\r\n        <br></br>\r\n         <input\r\n          id=\"cbpublished\"\r\n          type=\"checkbox\"\r\n          name=\"published\"\r\n          label=\"published\"\r\n          value={published}\r\n          checked={published}\r\n          onChange={(e) => setpublished(e.target.checked)}\r\n        />\r\n\r\n        <label htmlFor=\"cbpublished\">Published</label>\r\n   \r\n        {/* <Row>\r\n          <Col md=\"6\">\r\n            <label className=\"key\">Name</label>\r\n            <p className=\"value\">{courseDetails.name}</p>\r\n          </Col>\r\n          <Col md=\"6\">\r\n            <label className=\"key\">Price</label>\r\n            <p className=\"value\">{courseDetails.price}</p>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md=\"6\">\r\n            <label className=\"key\">Quantity</label>\r\n            <p className=\"value\">{courseDetails.quantity}</p>\r\n          </Col>\r\n          <Col md=\"6\">\r\n            <label className=\"key\">Category</label>\r\n            <p className=\"value\">{courseDetails.category.name}</p>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <label className=\"key\">Description</label>\r\n            <p className=\"value\">{courseDetails.description}</p>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <label className=\"key\">Courses Pictures</label>\r\n            <div style={{ display: \"flex\" }}>\r\n              {courseDetails.coursePictures.map((picture) => (\r\n                <div className=\"courseImgContainer\">\r\n                  <img src={picture.img} alt=\"\" />\r\n                  \r\n                </div>\r\n              ))}\r\n            </div>\r\n          </Col>\r\n        </Row> */}\r\n      </Modal>\r\n    );\r\n  };\r\n  return (\r\n    <Layout sidebar>\r\n      <Container>\r\n        <Row>\r\n          <Col md={12}>\r\n            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n              <h3>Courses</h3>\r\n              <button onClick={handleShow}>Add</button>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>{renderCourses()}</Col>\r\n        </Row>\r\n      </Container>\r\n      {renderAddCoursesModal()}\r\n      {renderCoursesDetailsModal()}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Courses","import React from 'react'\r\n\r\n/**\r\n* @author\r\n* @function test\r\n**/\r\n\r\nconst test = (props) => {\r\n  return(\r\n    <div>test</div>\r\n   )\r\n\r\n }\r\n\r\nexport default test","import React, { useState } from 'react';\r\n//import './App.css';\r\nvar tableRowIndex = 0;\r\nfunction TableRow ({row, handleDataChange, deleteRow}) {\r\n   const index = row.index\r\n   const [first_name, handleChangeFirstName] = useState(row.first_name);\r\n   const [last_name, handleChangeLastName] = useState(row.last_name);\r\n  \r\n   const updateValues = e => {\r\n      var inputName = e.target.name\r\n      var inputValue = e.target.value\r\n      if(inputName == 'first_name'){\r\n         handleChangeFirstName(inputValue)\r\n      }else if(inputName == 'last_name'){\r\n         handleChangeLastName(inputValue)\r\n      }\r\n\r\n      handleDataChange({\r\n         index: index,\r\n         first_name: first_name,\r\n         last_name: last_name\r\n      })\r\n   }\r\n\r\n   const removeRow = () => {\r\n      deleteRow(index)\r\n   }\r\n\r\n   return(\r\n      <tr>\r\n         <td>{index + 1}</td>\r\n         <td>\r\n            <input type=\"text\" name=\"first_name\" className=\"first_name\" placeholder=\"First Name\" value={first_name} onChange={updateValues}></input>\r\n            <input type=\"text\" name=\"last_name\"  className=\"last_name\" placeholder=\"Last Name\" value={last_name} onChange={updateValues}></input>\r\n         </td>\r\n         <td><button type=\"button\" className=\"btn btn-remove\" onClick={removeRow}>&times;</button></td>\r\n      </tr>\r\n   )\r\n}\r\n\r\nfunction Table() {\r\n   const [talbeRows, setRows] = useState([{\r\n         index: 0,\r\n         first_name: \"\",\r\n         last_name: \"\"\r\n      }\r\n   ]);\r\n\r\n   // Receive data from TableRow \r\n   const handleChange = data => {\r\n      talbeRows[data.index] = data\r\n   }\r\n\r\n   // Add New Table Row\r\n   const addNewRow = () => {\r\n      tableRowIndex = parseFloat(tableRowIndex) + 1\r\n      var updatedRows = [...talbeRows]\r\n      updatedRows[tableRowIndex] = {index: tableRowIndex, first_name: \"\", last_name: \"\"}\r\n      setRows(updatedRows)\r\n   }\r\n   \r\n   // Remove Table row if rows are count is more than 1\r\n   const deleteRow = (index) => {\r\n      if(talbeRows.length > 1){\r\n         var updatedRows = [...talbeRows]\r\n         var indexToRemove = updatedRows.findIndex(x => x.index == index);\r\n         if(indexToRemove > -1){\r\n            updatedRows.splice(indexToRemove, 1)\r\n            setRows(updatedRows);\r\n         }\r\n      }\r\n   }\r\n\r\n  return (\r\n    <div className=\"customers\">\r\n       <table className=\"table\" id=\"customers\">\r\n         <thead>\r\n            <tr>\r\n               <th>ID</th>\r\n               <th>Name</th>\r\n               <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n               {\r\n                  talbeRows.map((row, index) => {\r\n                     if(row)\r\n                     return(\r\n                        <TableRow key={index} row={row} handleDataChange={handleChange} deleteRow={deleteRow}></TableRow>\r\n                     )\r\n                  })\r\n               }\r\n          </tbody>\r\n       </table>\r\n       <div>\r\n          <button className=\"btn-add\" onClick={addNewRow}>+Add</button>\r\n       </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Table;","import React, { useState, useEffect,useRef } from \"react\";\r\nimport Layout from \"../../components/Layout\";\r\nimport { Container, Row, Col, Table } from \"react-bootstrap\";\r\nimport Input from \"../../components/UI/Input\";\r\nimport Modal from \"../../components/UI/Modal\";\r\nimport TableEdit from \"../../components/UI/TableEdit\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { upload, findAllCurriculums,findOneCurriculums, UploadDocument,UploadDocumentDelete, addCurriculum, updateCurriculums, deleteCurriculumById } from \"../../actions\";\r\n\r\nimport RichEditorExample from '../../components/UI/Input/draft';\r\nimport \"./style.css\";\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport { EditorState, convertToRaw, convertFromRaw, uploadCallback, embedCallback } from \"draft-js\";\r\nimport '../../../node_modules/react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\nimport { stateToHTML } from 'draft-js-export-html';\r\nimport dateFormat from 'dateformat';\r\nimport DatePicker from 'react-date-picker';\r\nimport ReactDatePicker from 'react-datepicker';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport draftToHtml from 'draftjs-to-html';\r\n\r\n\r\n//Bootstrap and jQuery libraries\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'jquery/dist/jquery.min.js';\r\n//Datatable Modules\r\nimport \"datatables.net-dt/js/dataTables.dataTables\"\r\nimport \"datatables.net-dt/css/jquery.dataTables.min.css\"\r\nimport $ from 'jquery'; \r\nimport { NavLink } from \"react-router-dom\";\r\n\r\n/**\r\n* @author\r\n* @function Curriculums\r\n**/\r\n\r\nconst Curriculums = (props) => {\r\n\r\n  const [course_id, setcourse_id] = useState(null); \r\n  const [courseTitle, setcourseTitle] = useState(null); \r\n  const [_id, set_id] = useState(null);\r\n    const [lession, setlession] = useState(\"\");\r\n    const [sequence, setsequence] = useState(1.1);\r\n    const [lessionDetail, setlessionDetail] = useState(EditorState.createEmpty());\r\n    const [parentId, setparentId] = useState(\"\");\r\n    const [lessionResources, setlessionResources] = useState([]);\r\n    const [narration, setnarration] = useState(\"\");\r\n    const [url, seturl] = useState(\"\");\r\n    const [doc, setdoc] = useState(\"\");\r\n    const [lessionResources_id,setlessionResources_id] = useState(null);\r\n    const [published, setpublished] = useState(false);\r\n    const [publishedOn, setpublishedOn] = useState(new Date());\r\n    const [show, setShow] = useState(false);\r\n    const [lessionDetailModal, setCurriculumsDetailModal] = useState(false);\r\n  \r\n    const [lessionDetails, setCurriculumsDetails] = useState(null);\r\n  \r\n\r\n  \r\n  \r\n  \r\n\r\n    const curriculum = useSelector((state) => state.curriculum);\r\n  \r\n    useEffect(() => {\r\n     setlessionResources(lessionResources);\r\n  }, [curriculum.curriculums])\r\n  \r\n\r\n    //init Datatable  \r\n  //   setTimeout(()=>{                        \r\n  //   var Workingtable=$('#dataTable').DataTable(\r\n  //     {retrieve: true,\r\n  //       destroy: true,\r\n  //       \"lengthMenu\": [[5, 10, 15, -1], [5, 10, 15, \"All\"]]\r\n  //     }\r\n  //   );\r\n  //   Workingtable.on('order.dt search.dt', function () {\r\n  //     Workingtable.column(0, { search: 'applied', order: 'applied' }).nodes().each(function (cell, i) {\r\n  //         cell.innerHTML = i + 1;\r\n  //     });\r\n  // }).draw();\r\n  \r\n  // }, 2000);\r\n  \r\n  \r\n\r\n  useEffect(()=>{\r\n    window.scrollTo(0, 0)\r\n    const course_id = props.match.params.course_id;\r\n    const courseTitle = props.match.params.courseTitle;\r\n//const post = blogPost.data.find(f=>f.slug==slug)\r\n//setPost(post);\r\nsetcourse_id(course_id);\r\nsetcourseTitle(courseTitle);\r\ndispatch(findAllCurriculums(course_id));\r\n//console.log(course_id+\" ----- \"+courseTitle);\r\n//console.log(\"props.match.params \" + JSON.stringify( props.match.params) + \" props.match.params.courseTitle \" + props.match.params.courseTitle );\r\n  },[props.match.params.course_id,props.match.params.courseTitle]);//only when state change reload  //curriculum, ,curriculum.curriculums\r\n  \r\n  useEffect(() => {\r\n\r\n    setTimeout(()=>{ \r\n    if (curriculum.curriculums!=null) {\r\n\r\n     \r\n      var Workingtable=$('#dataTable,#dataTableDtl').DataTable(\r\n        {retrieve: true,\r\n          destroy: true,\r\n          \"lengthMenu\": [[5, 10, 15, -1], [5, 10, 15, \"All\"]]\r\n        }\r\n      );\r\n      Workingtable.on('order.dt search.dt', function () {\r\n        Workingtable.column(0, { search: 'applied', order: 'applied' }).nodes().each(function (cell, i) {\r\n            cell.innerHTML = i + 1;\r\n        });\r\n    }).draw();\r\n\r\n\r\n  \r\n    }\r\n  }, 2000);\r\n  \r\n     \r\n   \r\n  \r\n  }, [props.match.params.course_id])\r\n  \r\nuseEffect(()=>{\r\n \r\n  if (curriculum.lessionResources) {\r\n    setlessionResources(curriculum.lessionResources);\r\n    setlessionResources(curriculum.lessionResources)\r\n  }\r\n},[curriculum.lessionResources])\r\n  \r\n    useEffect(() => {\r\n      if (lessionDetails) {\r\n  \r\n  \r\n  \r\n        setcourse_id(lessionDetails.course);//\r\n        set_id(lessionDetails._id);\r\n        setlession(lessionDetails.lession);\r\n        setsequence(lessionDetails.sequence);\r\n  \r\n  \r\n        //console.log(JSON.stringify(lessionDetails.lessionDetail));\r\n  \r\n        let contentState = convertFromRaw(lessionDetails.lessionDetail);\r\n        let editorState = EditorState.createWithContent(contentState);\r\n        setlessionDetail(editorState);\r\n  \r\n  \r\n        setparentId(lessionDetails.parentId);\r\n      \r\n        setpublished(lessionDetails.published);\r\n        setpublishedOn(dateFormat(lessionDetails.publishedOn, 'm/d/yyyy'));\r\n        setlessionResources(lessionDetails.lessionResources);\r\n      \r\n        \r\n         console.log(dateFormat(lessionDetails.publishedOn, 'm/d/yyyy'));\r\n       \r\n      }\r\n  \r\n     \r\n   \r\n  \r\n    }, _id)\r\n   \r\n    \r\n  \r\n  \r\n  \r\n    const Reset=()=>{\r\n      set_id(null);\r\n      setlession(\"\");\r\n      setsequence(\"0\");\r\n      setlessionDetail(EditorState.createEmpty());\r\n      setparentId(\"\");\r\n      setlessionResources([]);\r\n      setpublished(false);\r\n      setpublishedOn(new Date());\r\n      setShow(false);\r\n    }\r\n  \r\n    const Validation=()=>{\r\n      //alert(JSON.stringify( lessionDetail));\r\n      if (lession === \"\") {\r\n        \r\n        alert('lession is required');\r\n        return;\r\n    }\r\n   \r\n  \r\n  if (lessionDetail === \"\") {\r\n        \r\n    alert('lessionDetail is required');\r\n    return;\r\n  }\r\n  \r\n    return true;\r\n    }\r\n\r\n    const ValidationDocument=()=>{\r\n      if (doc === \"\" && url === \"\") {\r\n        \r\n        alert('doc or url is required');\r\n        return;\r\n    }\r\n   \r\n  \r\n  if (narration === \"\") {\r\n        \r\n    alert('narration is required');\r\n    return;\r\n  }\r\n  \r\n    return true;\r\n    }\r\n  \r\n  \r\n \r\n  \r\n    const convertDescriptionFromJSONToHTML = () => {\r\n      try {\r\n        return { __html: stateToHTML(lessionDetail.getCurrentContent()) }\r\n      } catch (exp) {\r\n        console.log(exp)\r\n        return { __html: 'Error' }\r\n      }\r\n    }\r\n  \r\n  \r\n    const dispatch = useDispatch();\r\n  \r\n    const handleclose = () => {\r\n      setShow(false);\r\n    };\r\n   \r\n    const _handleBeforeInput = () => {\r\n  \r\n    }\r\n  \r\n    const _handlePastedText = () => {\r\n  \r\n    }\r\n  \r\n    const uploadCallback = (file) => {//http://localhost:5000/\r\n      const formData = new FormData();\r\n      formData.append('lessionResources', file);\r\n      dispatch(UploadDocument(formData)).then(() => setlessionResources(localStorage.getItem(\"filename\"))\r\n  \r\n      );\r\n\r\n   \r\n  \r\n  \r\n      // return new Promise((resolve, reject) => {\r\n      // fetch(api+'/upload', {\r\n      // method: 'POST',\r\n      // body: formData\r\n      // })\r\n      // .then(res => res.json())\r\n      // .then( resData => {\r\n      // console.log(resData)\r\n      // resolve({ data: { link: resData } });\r\n      // })\r\n      // .catch(error => {\r\n      // console.log(error)\r\n      // reject(error.toString())\r\n      // })\r\n      // })\r\n    }\r\n    const uploadDocument = () => {//http://localhost:5000/\r\n      if(!ValidationDocument()){\r\n        return;\r\n      }\r\n\r\n      const formData = new FormData();\r\n      // const newlessionResources = {\r\n      //   doc: doc,\r\n      //   narration:narration\r\n      // }\r\n\r\n      formData.append('_id', _id);\r\n      formData.append('lessionResources_id', lessionResources_id);\r\n      //formData.append('lessionResources', newlessionResources);\r\n      formData.append('doc', doc);\r\n      formData.append('narration', narration);\r\n      formData.append('url', url);\r\n      console.log(formData);\r\n      dispatch(UploadDocument(formData)).then(() => {\r\n        setlessionResources_id(null);\r\nsetdoc(\"\");\r\nsetnarration(\"\");\r\nseturl(\"\");\r\ndispatch(findOneCurriculums(_id))\r\n.then(()=>renderCurriculumsDocuments());\r\n//.then(()=>setlessionResources(curriculum.lessionResources),console.log(\"display \"+curriculum.lessionResources));\r\n\r\n      });\r\n  \r\n      \r\n  \r\n  }\r\n\r\n//   const uploadDocumentDelete = (resource) => {\r\n//     setlessionResources_id(resource._id);\r\n//     const formData = new FormData();\r\n//     formData.append('_id', _id);\r\n//     formData.append('lessionResources_id', lessionResources_id);\r\n   \r\n//    // console.log(formData);\r\n//     dispatch(UploadDocumentDelete(formData)).then(() => {\r\n//       setlessionResources_id(null);\r\n// setdoc(\"\");\r\n// setnarration(\"\");\r\n// seturl(\"\");\r\n// dispatch(findOneCurriculums(_id));\r\n\r\n//     });\r\n\r\n    \r\n\r\n// }\r\n\r\n    const submitCurriculumsForm = () => {\r\n      if(!Validation()){\r\n        return;\r\n      }\r\n  \r\n      const newPost = {\r\n        _id: _id,\r\n        course:course_id,\r\n        lession: lession,\r\n        sequence: sequence,\r\n        lessionDetail: convertToRaw(lessionDetail.getCurrentContent()),\r\n        parentId: parentId == \"\" ? null : parentId,\r\n        published: published,\r\n        publishedOn: publishedOn,\r\n       // lessionResources: lessionResources\r\n  \r\n      }\r\n      console.log(\"POST: \", newPost)\r\n      if (_id == null) {\r\n        dispatch(addCurriculum(newPost)).then(() => setShow(false));\r\n      }\r\n      else {\r\n        dispatch(updateCurriculums(newPost)).then(() => setCurriculumsDetailModal(false));\r\n      }\r\n      window.location.reload();\r\n      \r\n      //////\r\n      //   const form = new FormData();\r\n      //   form.append(\"lession\", lession);\r\n      //   form.append(\"curriculumDesc\", curriculumDesc);\r\n      //   form.append(\"sequence\", sequence);\r\n      //   form.append(\"snapshotText\", snapshotText);\r\n      //  // form.append(\"lessionDetail\",draftToHtml(convertToRaw( lessionDetail.getCurrentContent())));\r\n      //   //form.append(\"lessionDetail\",convertToRaw( lessionDetail.getCurrentContent()));\r\n      //   form.append(\"parentId\", parentId);\r\n      //   form.append(\"author\", authorId);\r\n      //   form.append(\"published\", published);\r\n      //   form.append(\"publishedOn\", publishedOn);\r\n  \r\n      //   // for (let pic of lessionResources) {\r\n      //   //   form.append(\"lessionResources\", pic);\r\n      //   // }\r\n      //   form.append('lessionDetail', convertToRaw( lessionDetail.getCurrentContent()));\r\n      //   form.append('lessionResources', lessionResources);\r\n      //   console.log(form);\r\n      ///\r\n  \r\n  \r\n  \r\n      //dispatch(addCurriculum(form)).then(() => setShow(false));\r\n    };\r\n    const handleShow = () =>{ \r\n     // Reset();\r\n      setShow(true)}\r\n    ;\r\n    const editor = React.useRef(null);\r\n    function focusEditor() {\r\n      editor.current.focus();\r\n    }\r\n    //   const renderCurriculums = (curriculums) => {\r\n    //     let myCorses = [];\r\n    //     for (let cor of curriculums) {\r\n    //       myCorses.push(\r\n    //             {\r\n    //                 label: cor.lession,\r\n    //                 value: cor._id,\r\n    //                 children: cor.children.length > 0 && renderCurriculums(cor.children)\r\n    //             }\r\n    //         );\r\n    //     }\r\n    //     return myCorses;\r\n    // }\r\n  \r\n  \r\n    const createCurriculumList = (curriculums, options = []) => {\r\n  if(curriculums !=null){\r\n      for (let cor of curriculums) {\r\n        options.push({\r\n          value: cor._id,\r\n          name: cor.lession,\r\n          parentId: cor.parentId,\r\n          type: cor.type\r\n        });\r\n        // if (cor.children.length > 0) {\r\n        //   createCurriculumList(cor.children, options)\r\n        // }\r\n      }\r\n    }\r\n  \r\n      return options;\r\n    }\r\n    const CurriculumList = createCurriculumList(curriculum.curriculums);\r\n    // const createCurriculumList = (curriculums, options = []) => {\r\n    //   for (let curriculum of curriculums) {\r\n    //     options.push({ value: curriculum._id, name: curriculum.lession });\r\n    //     if (curriculum.children.length > 0) {\r\n    //       createCurriculumList(curriculum.children, options);\r\n    //     }\r\n    //   }\r\n    // };\r\n    // const createAothorList = (authors, options = []) => {\r\n    //   for (let author of authors) {\r\n    //     options.push({ value: author._id, name: author.authorName });\r\n    //     // if (author.children.length > 0) {\r\n    //     //   createAothorList(author.children, options);\r\n    //     // }\r\n    //   }\r\n  \r\n    //   return options;\r\n    // };\r\n  \r\n    const handlelessionResources = (e) => {\r\n      setdoc(e.target.files[0]);\r\n      //setlessionResources(e.target.files[0]);\r\n    };\r\n\r\n\r\n  \r\n    const renderCurriculums = () => {\r\n     \r\n      // const columns = [\r\n      //   {\r\n      //     name: \"Title\",\r\n      //     selector: \"lession\",\r\n      //     sortable: true\r\n      //   },\r\n      //   {\r\n      //     name: \"curriculumDesc\",\r\n      //     selector: \"curriculumDesc\",\r\n      //     sortable: true\r\n      //   },\r\n      //   {\r\n      //     name: \"published\",\r\n      //     selector: \"published\",\r\n      //     sortable: true,\r\n      //     right: true\r\n      //   }\r\n      // ];\r\n      // const BootyCheckbox = React.forwardRef(({ onClick, ...rest }, ref) => (\r\n      //   <div className=\"custom-control custom-checkbox\">\r\n      //     <input\r\n      //       type=\"checkbox\"\r\n      //       className=\"custom-control-input\"\r\n      //       ref={ref}\r\n      //       {...rest}\r\n      //     />\r\n      //     <label className=\"custom-control-label\" onClick={onClick} />\r\n      //   </div>\r\n      // ));\r\n      // return (\r\n      //   <div className=\"card\">\r\n      //     <DataTable\r\n      //       title=\"Curriculums\"\r\n      //       columns={columns}\r\n      //       data={curriculum.curriculums}\r\n      //       defaultSortField=\"lession\"\r\n      //       pagination\r\n      //       selectableRows\r\n      //       selectableRowsComponent={BootyCheckbox}\r\n      //     />\r\n      //   </div>\r\n      return (\r\n        <div className=\"container\">\r\n   <table id=\"dataTable\" className=\"display table table-striped table-bordered table-sm row-border hover\"  style={{ fontSize: 12 }} responsive=\"sm\">\r\n          <thead>\r\n            <tr>\r\n        \r\n              <th>#</th>\r\n              <th>lession</th>\r\n               <th>Sequence</th>\r\n              <th>published</th> \r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n    {/* {(curriculumsDatatable!=null && curriculumsDatatable.length > 0)\r\n                  ? curriculumsDatatable.map((curriculum, index) => ( */}\r\n            {(curriculum.curriculums!=null && curriculum.curriculums.length > 0)\r\n              ? curriculum.curriculums.map((curriculum, index) => (\r\n              \r\n                <tr key={curriculum._id}>\r\n                  <td>{index + 1}</td>\r\n                  <td>{curriculum.lession}</td>\r\n                  <td>{curriculum.sequence}</td>\r\n                  <td>{curriculum.published}</td>\r\n                  {/* <td>{curriculum.author}</td> */}\r\n                  <td>\r\n                    <button onClick={() => showCurriculumsDetailsModal(curriculum)}>\r\n                      Edit\r\n                      </button>\r\n                      &nbsp;&nbsp;\r\n                      {/* <button onClick={() => showCurriculumsDetailsModal(curriculum)}>\r\n                      Curriculum\r\n                      </button> */}\r\n                     \r\n                    {/* <button\r\n                      onClick={() => {\r\n                        const payload = {\r\n                          curriculumId: curriculum._id,\r\n                        };\r\n                        const confirmBox = window.confirm(\r\n                          \"Do you really want to delete this ?\"\r\n                        )\r\n                        if (confirmBox === true) {\r\n                          dispatch(deleteCurriculumById(payload));\r\n                        }\r\n                      }}\r\n                    >\r\n                      del\r\n                      </button> */}\r\n                  </td>\r\n                </tr>\r\n                \r\n              ))\r\n              : null}\r\n          </tbody>\r\n          </table>\r\n         \r\n          </div>\r\n     \r\n      );\r\n     \r\n      \r\n    };\r\n\r\n    const renderCurriculumsDocuments = () => {\r\n     \r\n      \r\n      return (\r\n        <div className=\"container\">\r\n   <table id=\"dataTableDtl\" className=\"display table table-striped table-bordered table-sm row-border hover\"  style={{ fontSize: 12 }} responsive=\"sm\">\r\n          <thead>\r\n            <tr>\r\n        \r\n              <th>#</th>\r\n              <th>naration</th>\r\n               <th>url</th>\r\n              <th>doc</th> \r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n    {/* {(curriculumsDatatable!=null && curriculumsDatatable.length > 0)\r\n                  ? curriculumsDatatable.map((curriculum, index) => ( */}\r\n            {(lessionResources!=null && lessionResources.length > 0)\r\n              ? lessionResources.map((resource, index) => (\r\n               //JSON.stringify( resource)\r\n               resource!=null?\r\n                <tr key={resource._id +index + 1}>\r\n                  <td>{index + 1}</td>\r\n                  <td>{resource.narration}</td>\r\n                  <td>{resource.url}</td>\r\n                  <td>{resource.doc}</td>\r\n                  {/* <td>{curriculum.author}</td> */}\r\n                  <td>\r\n                    <button onClick={() => EditResourceDoc(resource)}>\r\n                      Edit\r\n                      </button>\r\n                      &nbsp;&nbsp;\r\n                      {/* <button onClick={() => showCurriculumsDetailsModal(curriculum)}>\r\n                      Curriculum\r\n                      </button> */}\r\n                     \r\n                    <button\r\n                      onClick={() => {\r\n                        const payload = {\r\n                          course_id : _id,\r\n                          lessionResources_id: resource._id,\r\n                        };\r\n                        const confirmBox = window.confirm(\r\n                          \"Do you really want to delete this ?\"\r\n                        )\r\n                        if (confirmBox === true) {\r\n                         \r\n                         // UploadDocumentDelete(resource)\r\n                          dispatch(UploadDocumentDelete(payload))\r\n                          .then(()=>setlessionResources(curriculum.curriculumList.lessionResources));\r\n                        }\r\n                      }}\r\n                    >\r\n                      del\r\n                      </button>\r\n                  </td>\r\n                </tr>\r\n                :\r\n                <tr><td>NO Data</td></tr>\r\n                \r\n              ))\r\n              : null}\r\n          </tbody>\r\n          </table>\r\n         \r\n          </div>\r\n     \r\n      );\r\n     \r\n      \r\n    };\r\n  \r\n    const renderAddCurriculumsModal = () => {\r\n      return (\r\n        <Modal\r\n          size=\"lg\"//\"sm\"\r\n          show={show}\r\n          handleClose={handleclose}\r\n          modalTitle={\"Add New Curriculums\"}\r\n          onSubmit={submitCurriculumsForm}\r\n        >\r\n         \r\n          <h4>{courseTitle}</h4>\r\n          <Input\r\n            label=\"lession\"\r\n            value={lession}\r\n            placeholder={`lession`}\r\n            onChange={(e) => setlession(e.target.value)}\r\n          />\r\n         \r\n          <Input\r\n            label=\"sequence\"\r\n            type=\"number\"\r\n            value={sequence}\r\n            placeholder={`sequence`}\r\n            onChange={(e) => setsequence(e.target.value)}\r\n          />\r\n         \r\n          {/* <Input\r\n            label=\"lessionDetail\"\r\n            value={lessionDetail}\r\n            placeholder={`lessionDetail`}\r\n            onChange={(e) => setlessionDetail(e.target.value)}\r\n          /> */}\r\n          {/* <Editor editorState={this.state.editorState} onChange={this.onChange} /> */}\r\n          <div className=\"side-padding-20\"\r\n          // style={{ border: \"1px solid black\", minHeight: \"6em\", cursor: \"text\" }}\r\n  \r\n          >\r\n            {/* <RichEditorExample\r\n          // ref={editor}\r\n         // initialEditorState={editorState}\r\n          wrapperClassName=\"wrapper-class\"\r\n          editorClassName=\"editor-class\"\r\n          toolbarClassName=\"toolbar-class\"\r\n          wrapperStyle={{ }}\r\n          editorStyle={{ height: \"300px\", padding: \"10px\"}}\r\n          toolbar={{ \r\n            image: { uploadCallback: uploadCallback, previewImage: true },\r\n            embedded: { embedCallback: embedCallback }\r\n          }}\r\n          //editorState={editorState}\r\n          value={lessionDetail}\r\n          onChange={(e) => setlessionDetail(e.target.value)}\r\n          placeholder=\"Write something!\"\r\n          handleBeforeInput={_handleBeforeInput}\r\n          handlePastedText={_handlePastedText}\r\n        /> */}\r\n            <Editor editorState={lessionDetail}\r\n              wrapperClassName=\"wrapper-class\"\r\n              editorClassName=\"editor-class\"\r\n              toolbarClassName=\"toolbar-class\"\r\n              wrapperStyle={{ border: \"2px solid green\", marginBottom: \"20px\" }}\r\n              editorStyle={{ height: \"300px\", padding: \"10px\" }}\r\n              toolbar={{ image: { uploadCallback } }}\r\n              onEditorStateChange={editorState => setlessionDetail(editorState)}\r\n            />\r\n          </div>\r\n          <br />\r\n           <div dangerouslySetInnerHTML={convertDescriptionFromJSONToHTML()}></div> \r\n  \r\n          <br />\r\n          <label>{lessionResources}</label>\r\n          <select\r\n            className=\"form-control\"\r\n            value={parentId}\r\n            onChange={(e) => setparentId(e.target.value)}\r\n          >\r\n            <option>select parent</option>\r\n            {CurriculumList.map((option) => (\r\n              <option key={option.value} value={option.value}>\r\n                {option.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          <br></br>\r\n          {/* <select\r\n            className=\"form-control\"\r\n            value={authorId}\r\n            onChange={(e) => setauthorId(e.target.value)}\r\n          >\r\n            <option>select author</option>\r\n            {createAothorList(author.authors).map((option) => (\r\n              <option key={option.value} value={option.value}>\r\n                {option.name}\r\n              </option>\r\n            ))}\r\n          </select> */}\r\n          <br></br>\r\n         \r\n         \r\n          {/* <Input\r\n                  type=\"date\"\r\n            label=\"Published On\"\r\n            value={publishedOn}\r\n            placeholder={`publishedOn`}\r\n            onChange={(e) => setpublishedOn(e.target.value)}\r\n          /> */}\r\n         <label htmlFor=\"txtpublishedOn\">Published On </label>\r\n          <DatePicker\r\n           id=\"txtpublishedOn\"\r\n           label=\"Published On\"\r\n           value={publishedOn}\r\n             onChange={(date) => setpublishedOn(date)}\r\n           // onChange={(e) => setpublishedOn(e.target.value)}\r\n           \r\n          />\r\n          <br></br>\r\n           <input\r\n            id=\"cbpublished\"\r\n            type=\"checkbox\"\r\n            name=\"published\"\r\n            label=\"published\"\r\n            value={published}\r\n            checked={published}\r\n            onChange={(e) => setpublished(e.target.checked)}\r\n          />\r\n  \r\n          <label htmlFor=\"cbpublished\">Published</label>\r\n     \r\n        </Modal>\r\n      );\r\n    };\r\n  \r\n    const handlecloseCurriculumsDetailsModal = () => {\r\n      setCurriculumsDetailModal(false);\r\n    };\r\n  \r\n    const showCurriculumsDetailsModal = (curriculum) => {\r\n      setCurriculumsDetailModal(true);\r\n      setCurriculumsDetails(curriculum);\r\n  \r\n  \r\n  \r\n    };\r\n\r\n    const EditResourceDoc = (resource) => {\r\n      setlessionResources_id(resource._id);\r\n     setdoc(resource.doc);\r\n     setnarration(resource.narration);\r\n     seturl(resource.url);\r\n  \r\n  \r\n  \r\n    };\r\n  \r\n    const renderCurriculumsDetailsModal = () => {\r\n      if (!lessionDetails) {\r\n        return null;\r\n      }\r\n  \r\n      return (\r\n        <Modal\r\n          show={lessionDetailModal}\r\n          handleClose={handlecloseCurriculumsDetailsModal}\r\n          modalTitle={\"Edit Curriculums Details\"}\r\n          onSubmit={submitCurriculumsForm}//\r\n          size=\"lg\"//\"sm\"\r\n        >\r\n          <h4>{courseTitle}</h4>\r\n         \r\n          <Input\r\n            label=\"lession\"\r\n            value={lession}\r\n            placeholder={`lession`}\r\n            onChange={(e) => setlession(e.target.value)}\r\n          />\r\n          \r\n          <Input\r\n            label=\"sequence\"\r\n            type=\"number\"\r\n            value={sequence}\r\n            placeholder={`sequence`}\r\n            onChange={(e) => setsequence(e.target.value)}\r\n          />\r\n         \r\n          {/* <Input\r\n            label=\"lessionDetail\"\r\n            value={lessionDetail}\r\n            placeholder={`lessionDetail`}\r\n            onChange={(e) => setlessionDetail(e.target.value)}\r\n          /> */}\r\n          {/* <Editor editorState={this.state.editorState} onChange={this.onChange} /> */}\r\n          <div className=\"side-padding-20\"\r\n          // style={{ border: \"1px solid black\", minHeight: \"6em\", cursor: \"text\" }}\r\n  \r\n          >\r\n            {/* <RichEditorExample\r\n          // ref={editor}\r\n         // initialEditorState={editorState}\r\n          wrapperClassName=\"wrapper-class\"\r\n          editorClassName=\"editor-class\"\r\n          toolbarClassName=\"toolbar-class\"\r\n          wrapperStyle={{ }}\r\n          editorStyle={{ height: \"300px\", padding: \"10px\"}}\r\n          toolbar={{ \r\n            image: { uploadCallback: uploadCallback, previewImage: true },\r\n            embedded: { embedCallback: embedCallback }\r\n          }}\r\n          //editorState={editorState}\r\n          value={lessionDetail}\r\n          onChange={(e) => setlessionDetail(e.target.value)}\r\n          placeholder=\"Write something!\"\r\n          handleBeforeInput={_handleBeforeInput}\r\n          handlePastedText={_handlePastedText}\r\n        /> */}\r\n            <Editor\r\n              editorState={lessionDetail}\r\n              wrapperClassName=\"wrapper-class\"\r\n              editorClassName=\"editor-class\"\r\n              toolbarClassName=\"toolbar-class\"\r\n              wrapperStyle={{ border: \"2px solid green\", marginBottom: \"20px\" }}\r\n              editorStyle={{ height: \"300px\", padding: \"10px\" }}\r\n              toolbar={{ image: { uploadCallback } }}\r\n              onEditorStateChange={editorState => setlessionDetail(editorState)}\r\n            />\r\n          </div>\r\n          <br />\r\n          <div dangerouslySetInnerHTML={convertDescriptionFromJSONToHTML()}></div>\r\n  \r\n          <br />\r\n          {/* <label>{lessionResources}</label> */}\r\n          <select\r\n            className=\"form-control\"\r\n  \r\n            value={parentId}\r\n            onChange={(e) => setparentId(e.target.value)}\r\n          >\r\n            <option>select parent</option>\r\n            {CurriculumList.map((option) => (\r\n              <option key={option.value} value={option.value}>\r\n                {option.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          <br></br>\r\n          {/* <select\r\n            className=\"form-control\"\r\n            value={lessionDetails.author}\r\n  \r\n            onChange={(e) => setauthorId(e.target.value)}\r\n          >\r\n            <option>select author</option>\r\n            {createAothorList(author.authors).map((option) => (\r\n              <option key={option.value} value={option.value}>\r\n                {option.name}\r\n              </option>\r\n            ))}\r\n          </select> */}\r\n          <br></br>\r\n       \r\n          {/* {lessionResources.length > 0\r\n            ? lessionResources.map((pic, index) => (\r\n                <div key={index}>{pic.name}</div>\r\n              ))\r\n            : null} */}\r\n          {/* <input\r\n            type=\"file\"\r\n            name=\"lessionResources\"\r\n            onChange={handlelessionResources}\r\n          /> */}\r\n          {/* <Input\r\n                  type=\"date\"\r\n            label=\"Published On\"\r\n            defaultValue={publishedOn}\r\n            value={publishedOn}\r\n           // value={dateFormat( lessionDetails.publishedOn,'MM/dd/yyyy')}\r\n            placeholder={`publishedOn`}\r\n            onChange={(e) => setpublishedOn(e.target.value)}\r\n          /> */}\r\n          {/* <DatePicker\r\n        selected={publishedOn}\r\n        onChange={(date) => setpublishedOn(date)}\r\n        calendarStartDay={3}\r\n      /> */}\r\n           <label htmlFor=\"txtpublishedOn\">Published On </label>\r\n          <DatePicker\r\n           // id=\"txtpublishedOn\"\r\n           // name=\"publishedOn\"\r\n            className=\"input\"\r\n           value= {publishedOn}\r\n           valueName={publishedOn}\r\n             onChange={(date) => setpublishedOn(date)}\r\n           // onChange={(e) => setpublishedOn(e.target.value)}\r\n           \r\n          />\r\n           <ReactDatePicker\r\n                // showTimeSelect\r\n                // dateFormat=\"Pp\"\r\n                // selected={publishedOn}\r\n                value={publishedOn}\r\n                 valueName={publishedOn} // DateSelect value's name is selected\r\n                onChange={(date) =>setpublishedOn( date)}\r\n                //onChange={([selected]) => selected}\r\n                name=\"publishedOn\"\r\n                className=\"input\"\r\n                placeholderText=\"Select date\"\r\n              />\r\n          <br></br>\r\n           <input\r\n            id=\"cbpublished\"\r\n            type=\"checkbox\"\r\n            name=\"published\"\r\n            label=\"published\"\r\n            value={published}\r\n            checked={published}\r\n            onChange={(e) => setpublished(e.target.checked)}\r\n          />\r\n  \r\n          <label htmlFor=\"cbpublished\">Published</label>\r\n          <br>\r\n          </br>\r\n           {/* {lessionResources.length > 0\r\n            ? lessionResources.map((pic, index) => (\r\n                <div key={index}>{pic.name}</div>\r\n              ))\r\n            : null}  */}\r\n             <Input\r\n            label=\"narration\"\r\n            value={narration}\r\n            placeholder={`narration`}\r\n            onChange={(e) => setnarration(e.target.value)}\r\n          />\r\n            <Input\r\n            label=\"url\"\r\n            value={url}\r\n            placeholder={`url`}\r\n            onChange={(e) => seturl(e.target.value)}\r\n          />\r\n        <input\r\n            type=\"file\"\r\n            name=\"doc\"\r\n            onChange={handlelessionResources}\r\n          />\r\n          <input \r\n          type=\"button\"\r\n          name=\"Upload\"\r\n          value=\"Upload\"\r\n          onClick={uploadDocument}\r\n          />\r\n          \r\n          <Container>\r\n         \r\n          <Row>\r\n            <Col>{renderCurriculumsDocuments()}</Col>\r\n          </Row>\r\n        </Container>\r\n        </Modal>\r\n      );\r\n    };\r\n    return (\r\n     \r\n      <Layout sidebar>\r\n        <Container>\r\n          <Row>\r\n            <Col md={12}>\r\n              <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                <h3>Curriculums</h3> <h4>{courseTitle}</h4>\r\n                <button onClick={handleShow}>Add</button>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>{renderCurriculums()}</Col>\r\n          </Row>\r\n        </Container>\r\n        {renderAddCurriculumsModal()}\r\n        {renderCurriculumsDetailsModal()}\r\n      </Layout>\r\n    )\r\n  }\r\n\r\nexport default Curriculums","import React from \"react\";\nimport \"./style.css\";\n\n/**\n * @author\n * @function Card\n **/\n\nconst Card = (props) => {\n  return (\n    <div className=\"card\" {...props}>\n      {(props.headerLeft || props.headerRight) && (\n        <div className=\"cardHeader\">\n          {props.headerLeft && <div>{props.headerLeft}</div>}\n          {props.headerRight && props.headerRight}\n        </div>\n      )}\n\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { updateOrder } from \"../../actions\";\nimport Layout from \"../../components/Layout\";\nimport Card from \"../../components/UI/Card\";\n\nimport \"./style.css\";\n\n/**\n * @author\n * @function Orders\n **/\n\nconst Orders = (props) => {\n  const order = useSelector((state) => state.order);\n  const [type, setType] = useState(\"\");\n  const dispatch = useDispatch();\n\n  const onOrderUpdate = (orderId) => {\n    const payload = {\n      orderId,\n      type,\n    };\n    dispatch(updateOrder(payload));\n  };\n\n  const formatDate = (date) => {\n    if (date) {\n      const d = new Date(date);\n      return `${d.getFullYear()}-${d.getMonth() + 1}-${d.getDate()}`;\n    }\n    return \"\";\n  };\n\n  return (\n    <Layout sidebar>\n      {order.orders.map((orderItem, index) => (\n        <Card\n          style={{\n            margin: \"10px 0\",\n          }}\n          key={index}\n          headerLeft={orderItem._id}\n        >\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              padding: \"50px 50px\",\n              alignItems: \"center\",\n            }}\n          >\n            <div>\n              <div className=\"title\">Items</div>\n              {orderItem.items.map((item, index) => (\n                <div className=\"value\" key={index}>\n                  {item.productId.name}\n                </div>\n              ))}\n            </div>\n            <div>\n              <span className=\"title\">Total Price</span>\n              <br />\n              <span className=\"value\">{orderItem.totalAmount}</span>\n            </div>\n            <div>\n              <span className=\"title\">Payment Type</span> <br />\n              <span className=\"value\">{orderItem.paymentType}</span>\n            </div>\n            <div>\n              <span className=\"title\">Payment Status</span> <br />\n              <span className=\"value\">{orderItem.paymentStatus}</span>\n            </div>\n          </div>\n          <div\n            style={{\n              boxSizing: \"border-box\",\n              padding: \"100px\",\n              display: \"flex\",\n              alignItems: \"center\",\n            }}\n          >\n            <div className=\"orderTrack\">\n              {orderItem.orderStatus.map((status) => (\n                <div\n                  className={`orderStatus ${\n                    status.isCompleted ? \"active\" : \"\"\n                  }`}\n                >\n                  <div\n                    className={`point ${status.isCompleted ? \"active\" : \"\"}`}\n                  ></div>\n                  <div className=\"orderInfo\">\n                    <div className=\"status\">{status.type}</div>\n                    <div className=\"date\">{formatDate(status.date)}</div>\n                  </div>\n                </div>\n              ))}\n            </div>\n\n            {/* select input to apply order action */}\n            <div\n              style={{\n                padding: \"0 50px\",\n                boxSizing: \"border-box\",\n              }}\n            >\n              <select onChange={(e) => setType(e.target.value)}>\n                <option value={\"\"}>select status</option>\n                {orderItem.orderStatus.map((status) => {\n                  return (\n                    <>\n                      {!status.isCompleted ? (\n                        <option key={status.type} value={status.type}>\n                          {status.type}\n                        </option>\n                      ) : null}\n                    </>\n                  );\n                })}\n              </select>\n            </div>\n            {/* button to confirm action */}\n\n            <div\n              style={{\n                padding: \"0 50px\",\n                boxSizing: \"border-box\",\n              }}\n            >\n              <button onClick={() => onOrderUpdate(orderItem._id)}>\n                confirm\n              </button>\n            </div>\n          </div>\n        </Card>\n      ))}\n    </Layout>\n  );\n};\n\nexport default Orders;\n","import axios from \"../helpers/axios\";\nimport { orderConstants } from \"./constants\";\n\nexport const getCustomerOrders = () => {\n  return async (dispatch) => {\n    dispatch({ type: orderConstants.GET_CUSTOMER_ORDER_REQUEST });\n    try {\n      const res = await axios.post(\"/order/getCustomerOrders\");\n      if (res.status === 200) {\n        const { orders } = res.data;\n        dispatch({\n          type: orderConstants.GET_CUSTOMER_ORDER_SUCCESS,\n          payload: { orders },\n        });\n      } else {\n        const { error } = res.data;\n        dispatch({\n          type: orderConstants.GET_CUSTOMER_ORDER_FAILURE,\n          payload: { error },\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const updateOrder = (payload) => {\n  return async (dispatch) => {\n    dispatch({ type: orderConstants.UPDATE_CUSTOMER_ORDER_REQUEST });\n    try {\n      const res = await axios.post(\"/order/update\", payload);\n      if (res.status === 201) {\n        dispatch({ type: orderConstants.UPDATE_CUSTOMER_ORDER_SUCCESS });\n        dispatch(getCustomerOrders());\n      } else {\n        const { error } = res.data;\n        dispatch({\n          type: orderConstants.UPDATE_CUSTOMER_ORDER_FAILURE,\n          payload: { error },\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n","import React from 'react';\nimport Input from '../../../components/UI/Input';\nimport Modal from '../../../components/UI/Modal';\nimport {Row, Col} from 'react-bootstrap';\n\n\nconst UpdateCategoriesModal = (props) => {\n\n    const {\n        show,\n        handleClose,\n        modalTitle,\n        size,\n        expandedArray,\n        checkedArray,\n        handleCategoryInput,\n        categoryList,\n        onSubmit\n    } = props;\n\n    console.log({expandedArray, checkedArray})\n\n    return (\n        <Modal\n            show={show}\n            handleClose={handleClose}\n            onSubmit={onSubmit}\n            modalTitle={modalTitle}\n            size={size}\n        >\n            <Row>\n                <Col>\n                    <h6>Expanded</h6>\n                </Col>\n            </Row>\n            {\n                expandedArray.length > 0 &&\n                expandedArray.map((item, index) =>\n                    <Row key={index}>\n                        <Col>\n                            <Input\n                                value={item.name}\n                                placeholder={`Category Name`}\n                                onChange={(e) => handleCategoryInput('name', e.target.value, index, 'expanded')}\n                            />\n                        </Col>\n                        <Col>\n                            <select\n                                className=\"form-control\"\n                                value={item.parentId}\n                                onChange={(e) => handleCategoryInput('parentId', e.target.value, index, 'expanded')}>\n                                <option>select category</option>\n                                {\n                                    categoryList.map(option =>\n                                        <option key={option.value} value={option.value}>{option.name}</option>\n                                    )\n                                }\n                            </select>\n                        </Col>\n                        <Col>\n                            <select\n                                className=\"form-control\"\n                                value={item.type}\n                                onChange={(e) => handleCategoryInput('type', e.target.value, index, 'expanded')}\n                            >\n                                <option value=\"\">Select Type</option>\n                                <option value=\"store\">Store</option>\n                                <option value=\"product\">Product</option>\n                                <option value=\"page\">Page</option>\n                            </select>\n                        </Col>\n                    </Row>\n                )\n            }\n            <h6>Checked Categories</h6>\n            {\n                checkedArray.length > 0 &&\n                checkedArray.map((item, index) =>\n                    <Row key={index}>\n                        <Col>\n                            <Input\n                                value={item.name}\n                                placeholder={`Category Name`}\n                                onChange={(e) => handleCategoryInput('name', e.target.value, index, 'checked')}\n                            />\n                        </Col>\n                        <Col>\n                            <select\n                                className=\"form-control\"\n                                value={item.parentId}\n                                onChange={(e) => handleCategoryInput('parentId', e.target.value, index, 'checked')}>\n                                <option>select category</option>\n                                {\n                                    categoryList.map(option =>\n                                        <option key={option.value} value={option.value}>{option.name}</option>\n                                    )\n                                }\n                            </select>\n                        </Col>\n                        <Col>\n                            <select\n                                className=\"form-control\"\n                                value={item.type}\n                                onChange={(e) => handleCategoryInput('type', e.target.value, index, 'checked')}\n                            \n                            >\n                                <option value=\"\">Select Type</option>\n                                <option value=\"store\">Store</option>\n                                <option value=\"product\">Product</option>\n                                <option value=\"page\">Page</option>\n                            </select>\n                        </Col>\n                    </Row>\n                )\n            }\n        </Modal>\n    );\n}\n\nexport default UpdateCategoriesModal;","import React from 'react';\nimport Input from '../../../components/UI/Input';\nimport Modal from '../../../components/UI/Modal';\nimport { Row, Col } from 'react-bootstrap';\n\n\nconst AddCategoryModal = (props) => {\n\n    const {\n        show,\n        handleClose,\n        modalTitle,\n        categoryName,\n        setCategoryName,\n        parentCategoryId,\n        setParentCategoryId,\n        categoryList,\n        handleCategoryImage,\n        onSubmit\n    } = props;\n\n    return (\n        <Modal\n            show={show}\n            handleClose={handleClose}\n            onSubmit={onSubmit}\n            modalTitle={modalTitle}\n        >\n            <Row>\n                <Col>\n                    <Input\n                        value={categoryName}\n                        placeholder={`Category Name`}\n                        onChange={(e) => setCategoryName(e.target.value)}\n                        className=\"form-control-sm\"\n                    />\n                </Col>\n                <Col>\n                    <select\n                        className=\"form-control form-control-sm\"\n                        value={parentCategoryId}\n                        onChange={(e) => setParentCategoryId(e.target.value)}>\n                        <option>select category</option>\n                        {\n                            categoryList.map(option =>\n                                <option key={option.value} value={option.value}>{option.name}</option>)\n                        }\n                    </select>\n                </Col>\n            </Row>\n            <Row>\n                <Col>\n                    <input type=\"file\" name=\"categoryImage\" onChange={handleCategoryImage} />\n                </Col>\n            </Row>\n\n\n        </Modal>\n    );\n}\n\nexport default AddCategoryModal;","import React, { useEffect, useState } from 'react';\nimport Layout from '../../components/Layout';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n    getAllCategory,\n    addCategory,\n    updateCategories,\n    deleteCategories as deleteCategoriesAction\n} from '../../actions';\nimport Modal from '../../components/UI/Modal';\nimport CheckboxTree from 'react-checkbox-tree';\nimport {\n    IoIosCheckboxOutline,\n    IoIosCheckbox,\n    IoIosArrowForward,\n    IoIosArrowDown,\n    IoIosAdd,\n    IoIosTrash,\n    IoIosCloudUpload\n} from 'react-icons/io'\n\nimport 'react-checkbox-tree/lib/react-checkbox-tree.css';\nimport UpdateCategoriesModal from './components/UpdateCategoriesModal';\nimport AddCategoryModal from './components/AddCategoryModal';\nimport './style.css';\n\n/**\n* @author\n* @function Category\n**/\n\nconst Category = (props) => {\n\n    const category = useSelector(state => state.category);\n    \n    const [categoryName, setCategoryName] = useState('');\n    const [parentCategoryId, setParentCategoryId] = useState('');\n    const [categoryImage, setCategoryImage] = useState('');\n    const [show, setShow] = useState(false);\n    const [checked, setChecked] = useState([]);\n    const [expanded, setExpanded] = useState([]);\n    const [checkedArray, setCheckedArray] = useState([]);\n    const [expandedArray, setExpandedArray] = useState([]);\n    const [updateCategoryModal, setUpdateCategoryModal] = useState(false);\n    const [deleteCategoryModal, setDeleteCategoryModal] = useState(false);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n\n        if (!category.loading) {\n            setShow(false);\n        }\n\n    }, [category.loading]);\n\n\n    const handleClose = () => {\n\n        const form = new FormData();\n\n        if (categoryName === \"\") {\n            alert('Category name is required');\n            setShow(true);\n            return;\n        }\n\n        form.append('name', categoryName);\n        form.append('parentId', parentCategoryId);\n        form.append('categoryImage', categoryImage);\n        dispatch(addCategory(form));\n        setCategoryName('');\n        setParentCategoryId('');\n        setShow(false);\n    }\n    const handleShow = () => setShow(true);\n\n    const renderCategories = (categories) => {\n        let myCategories = [];\n        for (let category of categories) {\n            myCategories.push(\n                {\n                    label: category.name,\n                    value: category._id,\n                    children: category.children.length > 0 && renderCategories(category.children)\n                }\n            );\n        }\n        return myCategories;\n    }\n\n    const createCategoryList = (categories, options = []) => {\n\n        for (let category of categories) {\n            options.push({\n                value: category._id,\n                name: category.name,\n                parentId: category.parentId,\n                type: category.type\n            });\n            if (category.children.length > 0) {\n                createCategoryList(category.children, options)\n            }\n        }\n\n        return options;\n    }\n\n    const handleCategoryImage = (e) => {\n        setCategoryImage(e.target.files[0]);\n    }\n\n    const updateCategory = () => {\n        updateCheckedAndExpandedCategories();\n        setUpdateCategoryModal(true);\n    }\n\n    const updateCheckedAndExpandedCategories = () => {\n        const categories = createCategoryList(category.categories);\n        const checkedArray = [];\n        const expandedArray = [];\n        checked.length > 0 && checked.forEach((categoryId, index) => {\n            const category = categories.find((category, _index) => categoryId == category.value);\n            category && checkedArray.push(category);\n        })\n        expanded.length > 0 && expanded.forEach((categoryId, index) => {\n            const category = categories.find((category, _index) => categoryId == category.value);\n            category && expandedArray.push(category);\n        })\n        setCheckedArray(checkedArray);\n        setExpandedArray(expandedArray);\n    }\n\n    const handleCategoryInput = (key, value, index, type) => {\n        console.log(value);\n        if (type == \"checked\") {\n            const updatedCheckedArray = checkedArray.map((item, _index) =>\n                index == _index ? { ...item, [key]: value } : item);\n            setCheckedArray(updatedCheckedArray);\n        } else if (type == \"expanded\") {\n            const updatedExpandedArray = expandedArray.map((item, _index) =>\n                index == _index ? { ...item, [key]: value } : item);\n            setExpandedArray(updatedExpandedArray);\n        }\n    }\n\n    const updateCategoriesForm = () => {\n        const form = new FormData();\n\n        expandedArray.forEach((item, index) => {\n            form.append('_id', item.value);\n            form.append('name', item.name);\n            form.append('parentId', item.parentId ? item.parentId : \"\");\n            form.append('type', item.type);\n        });\n        checkedArray.forEach((item, index) => {\n            form.append('_id', item.value);\n            form.append('name', item.name);\n            form.append('parentId', item.parentId ? item.parentId : \"\");\n            form.append('type', item.type);\n        });\n        dispatch(updateCategories(form));\n        \n    }\n\n    const deleteCategory = () => {\n        updateCheckedAndExpandedCategories();\n        setDeleteCategoryModal(true);\n    }\n\n    const deleteCategories = () => {\n        const checkedIdsArray = checkedArray.map((item, index) => ({ _id: item.value }));\n        const expandedIdsArray = expandedArray.map((item, index) => ({ _id: item.value }));\n        const idsArray = expandedIdsArray.concat(checkedIdsArray);\n\n        if (checkedIdsArray.length > 0) {\n            dispatch(deleteCategoriesAction(checkedIdsArray))\n                .then(result => {\n                    if (result) {\n                        dispatch(getAllCategory())\n                        setDeleteCategoryModal(false)\n                    }\n                });\n        }\n\n        setDeleteCategoryModal(false);\n\n\n    }\n\n    const renderDeleteCategoryModal = () => {\n        return (\n            <Modal\n                modalTitle=\"Confirm\"\n                show={deleteCategoryModal}\n                handleClose={() => setDeleteCategoryModal(false)}\n                buttons={[\n                    {\n                        label: 'No',\n                        color: 'primary',\n                        onClick: () => {\n                            alert('no');\n                        }\n                    },\n                    {\n                        label: 'Yes',\n                        color: 'danger',\n                        onClick: deleteCategories\n                    }\n                ]}\n            >\n\n\n                <h5>Expanded</h5>\n                { expandedArray.map((item, index) => <span key={index}>{item.name}</span>)}\n                <h5>Checked</h5>\n                { checkedArray.map((item, index) => <span key={index}>{item.name}</span>)}\n\n            </Modal>\n        );\n    }\n\n    const categoryList = createCategoryList(category.categories);\n\n    return (\n        <Layout sidebar>\n            <Container>\n                <Row>\n                    <Col md={12}>\n                        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                            <h3>Category</h3>\n                            <div className=\"actionBtnContainer\">\n                                <span>Actions: </span>\n                                <button onClick={handleShow}><IoIosAdd /> <span>Add</span></button>\n                                <button onClick={deleteCategory}><IoIosTrash /> <span>Delete</span></button>\n                                <button onClick={updateCategory}><IoIosCloudUpload /> <span>Edit</span></button>\n                            </div>\n\n                        </div>\n\n                    </Col>\n                </Row>\n                <Row>\n                    <Col md={12}>\n                        <CheckboxTree\n                            nodes={renderCategories(category.categories)}\n                            checked={checked}\n                            expanded={expanded}\n                            onCheck={checked => setChecked(checked)}\n                            onExpand={expanded => setExpanded(expanded)}\n                            icons={{\n                                check: <IoIosCheckbox />,\n                                uncheck: <IoIosCheckboxOutline />,\n                                halfCheck: <IoIosCheckboxOutline />,\n                                expandClose: <IoIosArrowForward />,\n                                expandOpen: <IoIosArrowDown />\n                            }}\n                        />\n                    </Col>\n                </Row>\n            </Container>\n            <AddCategoryModal\n                show={show}\n                handleClose={() => setShow(false)}\n                onSubmit={handleClose}\n                modalTitle={'Add New Category'}\n                categoryName={categoryName}\n                setCategoryName={setCategoryName}\n                parentCategoryId={parentCategoryId}\n                setParentCategoryId={setParentCategoryId}\n                categoryList={categoryList}\n                handleCategoryImage={handleCategoryImage}\n            />\n            <UpdateCategoriesModal\n                show={updateCategoryModal}\n                handleClose={() => setUpdateCategoryModal(false)}\n                onSubmit={updateCategoriesForm}\n                modalTitle={'Update Categories'}\n                size=\"lg\"\n                expandedArray={expandedArray}\n                checkedArray={checkedArray}\n                handleCategoryInput={handleCategoryInput}\n                categoryList={categoryList}\n            />\n            {/* {renderAddCategoryModal()} */}\n            {renderDeleteCategoryModal()}\n        </Layout>\n    )\n\n}\n\nexport default Category","const linearCategories = (categories, options = []) => {\n\n    for (let category of categories) {\n        options.push({ \n            value: category._id, \n            name: category.name, \n            parentId: category.parentId,\n            type: category.type\n        });\n        if (category.children.length > 0) {\n            linearCategories(category.children, options)\n        }\n    }\n\n    return options;\n}\n\nexport default linearCategories;","import React, { useState, useEffect } from 'react';\nimport Modal from '../../components/UI/Modal';\nimport Layout from '../../components/Layout';\nimport Input from '../../components/UI/Input';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport linearCategories from '../../helpers/linearCategories';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { createPage } from '../../actions';\n\n/**\n* @author\n* @function NewPage\n**/\n\nconst NewPage = (props) => {\n\n    const [createModal, setCreateModal] = useState(false);\n    const [title, setTitle] = useState('');\n    const category = useSelector(state => state.category);\n    const [categories, setCategories] = useState([]);\n    const [categoryId, setCategoryId] = useState('');\n    const [desc, setDesc] = useState('');\n    const [type, setType] = useState('');\n    const [banners, setBanners] = useState([]);\n    const [products, setProducts] = useState([]);\n    const dispatch = useDispatch();\n    const page = useSelector(state => state.page);\n\n\n    useEffect(() => {\n        setCategories(linearCategories(category.categories));\n    }, [category]);\n\n    useEffect(() => {\n        console.log(page);\n        if(!page.loading){\n            setCreateModal(false);\n            setTitle('');\n            setCategoryId('');\n            setDesc('');\n            setProducts([]);\n            setBanners([]);\n        }\n    }, [page]);\n\n    const onCategoryChange = (e) => {\n        const category = categories.find(category => category.value == e.target.value);\n        setCategoryId(e.target.value);\n        setType(category.type);\n    }\n\n    const handleBannerImages = (e) => {\n        console.log(e);\n        setBanners([...banners, e.target.files[0]]);\n    }\n\n    const handleProductImages = (e) => {\n        console.log(e);\n        setProducts([...products, e.target.files[0]]);\n    }\n\n    const submitPageForm = (e) => {\n        //e.target.preventDefault();\n\n        if(title === \"\"){\n            alert('Title is required');\n            setCreateModal(false);\n            return;\n        }\n\n        const form = new FormData();\n        form.append('title', title);\n        form.append('description', desc);\n        form.append('category', categoryId);\n        form.append('type', type);\n        banners.forEach((banner, index) => {\n            form.append('banners', banner);\n        });\n        products.forEach((product, index) => {\n            form.append('products', product);\n        });\n\n        dispatch(createPage(form));\n\n        \n    }\n\n    const renderCreatePageModal = () => {\n        return (\n            <Modal\n                show={createModal}\n                modalTitle={'Create New Page'}\n                handleClose={() => setCreateModal(false)}\n                onSubmit={submitPageForm}\n            >\n                <Container>\n                    <Row>\n                        <Col>\n                            {/* <select\n                                className=\"form-control\"\n                                value={categoryId}\n                                onChange={onCategoryChange}\n                            >\n                                <option value=\"\">select category</option>\n                                {\n                                    categories.map(cat =>\n                                        <option key={cat._id} value={cat._id}>{cat.name}</option>\n                                    )\n                                }\n                            </select> */}\n                            <Input \n                                type=\"select\"\n                                value={categoryId}\n                                onChange={onCategoryChange}\n                                options={categories}\n                                placeholder={'Select Category'}\n                            />\n                        </Col>\n                    </Row>\n\n                    <Row>\n                        <Col>\n                            <Input\n                                value={title}\n                                onChange={(e) => setTitle(e.target.value)}\n                                placeholder={'Page Title'}\n                                className=\"\"\n                            />\n                        </Col>\n                    </Row>\n\n                    <Row>\n                        <Col>\n                            <Input\n                                value={desc}\n                                onChange={(e) => setDesc(e.target.value)}\n                                placeholder={'Page Desc'}\n                                className=\"\"\n                            />\n                        </Col>\n                    </Row>\n\n                    {\n                            banners.length > 0 ? \n                            banners.map((banner, index) => \n                                <Row key={index}>\n                                    <Col>{banner.name}</Col>\n                                </Row>\n                            ) : null\n                    }\n                    <Row>\n                        <Col>\n                            <Input\n                                className=\"form-control\" \n                                type=\"file\" \n                                name=\"banners\"\n                                onChange={handleBannerImages}\n                            />\n                        </Col>\n                    </Row>\n\n                    {\n                            products.length > 0 ? \n                            products.map((product, index) => \n                                <Row key={index}>\n                                    <Col>{product.name}</Col>\n                                </Row>\n                            ) : null\n                        }\n                    <Row>\n                        <Col>\n                            <Input \n                                className=\"form-control\"\n                                type=\"file\" \n                                name=\"products\"\n                                onChange={handleProductImages}\n                            />\n                        </Col>\n                    </Row>\n\n                    \n\n                </Container>\n\n\n            </Modal>\n        );\n    }\n\n\n    return (\n        <Layout sidebar>\n            {\n                page.loading ? \n                <p>Creating Page...please wait</p>\n                :\n                <>\n                    {renderCreatePageModal()}\n                    <button onClick={() => setCreateModal(true)}>Create Page</button>\n                </>\n            }\n            \n        </Layout>\n    )\n\n}\n\nexport default NewPage","import axios from \"../helpers/axios\";\nimport { pageConstants } from \"./constants\";\n\nexport const createPage = (form) => {\n    return async dispatch => {\n        dispatch({ type: pageConstants.CREATE_PAGE_REQUEST });\n        try{\n            const res = await axios.post('/page/create', form);\n            if(res.status === 201){\n                dispatch({\n                    type: pageConstants.CREATE_PAGE_SUCCESS,\n                    payload: { page: res.data.page }\n                });\n            }else{\n                dispatch({\n                    type: pageConstants.CREATE_PAGE_FAILURE,\n                    payload: { error: res.data.error }\n                });\n            }\n        }catch(error){\n            console.log(error)\n        }\n    }\n}","import React, { useEffect } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport Home from './containers/Home';\nimport Signin from './containers/Signin';\nimport Signup from './containers/Signup';\nimport PrivateRoute from './components/HOC/PrivateRoute';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { isUserLoggedIn, getInitialData } from './actions';\nimport Products from './containers/Products';\nimport Blogs from './containers/Blogs';\nimport Courses from './containers/Courses';\nimport Curricu from './containers/curricu';\nimport Curriculums from './containers/Curriculums';\nimport Orders from './containers/Orders';\nimport Category from './containers/Category';\nimport NewPage from './containers/NewPage';\n\n\n//Bootstrap and jQuery libraries\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'jquery/dist/jquery.min.js';\n//Datatable Modules\nimport \"datatables.net-dt/js/dataTables.dataTables\"\nimport \"datatables.net-dt/css/jquery.dataTables.min.css\"\nimport $ from 'jquery'; \n\n\n\nfunction App() {\n\n  const dispatch = useDispatch();\n  const auth = useSelector(state => state.auth)\n\n\n  //componentDidMount or componentDidUpdate\n  useEffect(() => {\n    if (!auth.authenticate) {\n      dispatch(isUserLoggedIn());\n    }\n    if(auth.authenticate){\n      dispatch(getInitialData());\n    }\n    \n   // setTimeout(()=>{   \n      //initialize datatable\n     // $(document).ready(function () {\n      //    $('#example').DataTable();\n     // });\n    //}, 2000);\n  \n\n  }, [auth.authenticate]);\n\n  return (\n    <div className=\"App\">\n      <Switch>\n        <PrivateRoute path=\"/\" exact component={Home} />\n        <PrivateRoute path=\"/page\" component={NewPage} />\n        <PrivateRoute path=\"/category\" component={Category} />\n        <PrivateRoute path=\"/products\" component={Products} />\n        <PrivateRoute path=\"/blogs\" component={Blogs} />\n        <PrivateRoute path=\"/courses\" component={Courses} />\n        <PrivateRoute path=\"/curricu/:course_id\" component={Curricu} />\n        <PrivateRoute path=\"/curriculums/:course_id&:courseTitle\" component={Curriculums} />\n        <PrivateRoute path=\"/orders\" component={Orders} />\n        \n\n\n        <Route path=\"/signin\" component={Signin} />\n        <Route path=\"/signup\" component={Signup} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import {\n  initialDataConstants,\n  categoryConstansts,\n  productConstants,\n  orderConstants,\n  courseConstants,\n  blogConstants,\n  authorConstants\n} from \"./constants\";\nimport axios from \"../helpers/axios\";\n\nexport const getInitialData = () => {\n  return async (dispatch) => {\n    const res = await axios.post(`/initialData`);\n    if (res.status === 200) {\n      const { categories, products, orders,courses,coursesPublished,  authors,authorsPublished,blogs,blogsPublished } = res.data;\n      dispatch({\n        type: categoryConstansts.GET_ALL_CATEGORIES_SUCCESS,\n        payload: { categories },\n      });\n      dispatch({\n        type: productConstants.GET_ALL_PRODUCTS_SUCCESS,\n        payload: { products },\n      });\n      dispatch({\n        type: orderConstants.GET_CUSTOMER_ORDER_SUCCESS,\n        payload: { orders },\n      });\n      dispatch({\n        type: courseConstants.GET_ALL_COURSES_SUCCESS,\n        payload: { courses },\n      });\n      dispatch({\n        type: courseConstants.GET_ALL_COURSES_PUBLISHED_SUCCESS,\n        payload: { coursesPublished },\n      });\n      dispatch({\n        type: authorConstants.GET_ALL_AUTHORS_SUCCESS,\n        payload: { authors },\n      });\n      dispatch({\n        type: authorConstants.GET_ALL_AUTHORS_PUBLISHED_SUCCESS,\n        payload: { authorsPublished },\n      });\n    \n    dispatch({\n      type: blogConstants.GET_ALL_BLOGS_SUCCESS,\n      payload: { blogs },\n    });\n    dispatch({\n      type: blogConstants.GET_ALL_BLOGS_PUBLISHED_SUCCESS,\n      payload: { blogsPublished },\n    });\n\n    \n  }\n    console.log(res);\n  };\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nwindow.store = store;\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}